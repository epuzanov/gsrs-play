{"version":3,"sources":["webpack:///./src/app/references/reference-list-dialog.component.ts","webpack:///./src/app/references/reference-list.service.ts","webpack:///./src/app/references/reference.ts","webpack:///./src/app/substanceedit/substanceedit.service.ts","webpack:///./src/app/codes/code.ts","webpack:///./src/app/names/name.ts","webpack:///./src/app/references/referencedData.ts","webpack:///./src/app/cv/cv.service.ts","webpack:///./src/app/data.ts","webpack:///./src/app/amount/amount.component.ts","webpack:///./src/app/amount/amount.model.ts","webpack:///./src/app/codes/code-list.component.ts","webpack:///./src/app/names/name-list.component.ts","webpack:///./src/app/names/name.service.ts","webpack:///./src/app/notes/notes.ts","webpack:///./src/app/properties/property.model.ts","webpack:///./src/app/properties/property.service.ts","webpack:///./src/app/references/reference-list.component.ts","webpack:///./src/app/references/reference.component.ts","webpack:///./src/app/relationships/relationship.service.ts","webpack:///./src/app/relationships/relationship.ts","webpack:///./src/app/substanceedit/substanceedit.component.ts","webpack:///./src/app/substancelist/substancelist.component.ts","webpack:///./src/app/summaryview/summary.component.ts","webpack:///./src/app/utils/substance-detail-resolver.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/utils/utils.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/codes/code-edit.component.ts","webpack:///./src/app/codes/code.service.ts","webpack:///./src/app/names/name.component.ts","webpack:///./src/app/notes/note.service.ts","webpack:///./src/app/notes/notes-edit.component.ts","webpack:///./src/app/notes/notes.component.ts","webpack:///./src/app/parameters/parameter.component.ts","webpack:///./src/app/parameters/parameter.ts","webpack:///./src/app/properties/properties-list.component.ts","webpack:///./src/app/properties/property-edit.component.ts","webpack:///./src/app/references/reference-edit-component.ts","webpack:///./src/app/relationships/relationship-edit.component.ts","webpack:///./src/app/relationships/relationship-list.component.ts","webpack:///./src/app/route-reuse-strategy.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/substanceedit/substanceedit.component.css","webpack:///./src/app/substancelist/substancelist.component.css","webpack:///./src/app/amount/amount.html","webpack:///./src/app/codes/code-edit.html","webpack:///./src/app/codes/code-list.html","webpack:///./src/app/names/name-edit.html","webpack:///./src/app/names/names-list.html","webpack:///./src/app/notes/notes-edit.html","webpack:///./src/app/notes/notes-list.html","webpack:///./src/app/parameters/parameter.html","webpack:///./src/app/properties/properties-list.html","webpack:///./src/app/properties/property-edit.html","webpack:///./src/app/references/reference-edit-dialog.html","webpack:///./src/app/references/reference-edit.html","webpack:///./src/app/references/reference-list-dialog.html","webpack:///./src/app/references/reference-list.html","webpack:///./src/app/relationships/relationship-edit.html","webpack:///./src/app/relationships/relationship-list.html","webpack:///./src/app/substanceedit/substanceedit.component.html","webpack:///./src/app/substancelist/substancelist.component.html","webpack:///./src/app/summaryview/summary.component.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAuC;AACG;AACN;AACC;AAEwB;AACJ;AACf;AAEf;AAU3B;IAEE,6BAAoB,gBAAsC,EACvC,SAAmB;QADlB,qBAAgB,GAAhB,gBAAgB,CAAsB;QACvC,cAAS,GAAT,SAAS,CAAU;QAOtC,sBAAiB,GAAW,KAAK,CAAC;QAClC,iBAAY,GAAW,EAAE,CAAC;QAG1B,kBAAa,GAAQ,cAAW,CAAC,CAAC,CAAU,wCAAwC;QAKpF,kBAAa,GAAgB,EAAE,CAAC,CAAW,wDAAwD;QACnG,mBAAc,GAAgB,EAAE,CAAC,CAAU,6BAA6B;QACxE,2BAAsB,GAAgB,EAAE,CAAC,CAAE,2BAA2B;QAjBpE,IAAI,CAAC,OAAO,GAAG,IAAI,2DAAW,EAAE,CAAC;QACjC,+CAA+C;QAC/C,oBAAoB;QACpB,yEAAyE;IAC3E,CAAC;IAoBD,sBAAI,iDAAgB;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;QAChC,CAAC;aAED,UAAqB,KAAK;YACxB,EAAE,EAAC,KAAK,KAAG,IAAI,CAAC,iBAAiB,CAAC,EAAC;gBAC/B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAC/B,iCAAiC;gBACjC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAClD,CAAC;QAEH,CAAC;;;OATA;IAWD,sBAAI,4CAAW;aAKf;YACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAPD,UAAgB,CAAC;YACf,IAAI,CAAC,YAAY,GAAC,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjC,CAAC;;;OAAA;IAOD,8CAAgB,GAAhB,UAAiB,KAAa;QAC5B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;QAChC,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC;QAC3C,CAAC;QAAC,IAAI,CAAC,EAAE,EAAC,KAAK,IAAI,UAAU,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAED,uCAAuC;IACvC,4CAAc,GAAd,UAAe,IAAgB;QAC5B,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;QACzB,IAAI,CAAC,sBAAsB,GAAC,IAAI,CAAC;IACpC,CAAC;IAED,wCAAwC;IACxC,wDAA0B,GAA1B,UAA2B,IAAI;QAA/B,iBAMC;QALC,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,IAAI,CAAC;aACzB,IAAI,CAAC,cAAI;YACG,+CAAS,CAAC,IAAI,EAAC,WAAC,IAAE,QAAC,CAAC,KAAK,GAAC,CAAC,CAAC,KAAK,GAAC,KAAI,CAAC,aAAa,CAAC,MAAM,EAAzC,CAAyC,CAAC,CAAC;YAC7D,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,sDAAsD;IACtD,yBAAyB;IACzB,4CAAc,GAAd,UAAe,GAAkB;QAC7B,IAAI,IAAI,GAAe,6CAAO,CAAC,IAAI,CAAC,aAAa,CAAC;aAC/C,MAAM,CAAC,WAAC,IAAE,QAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAArC,CAAqC,CAAC;aAChD,KAAK,EAAE,CAAC;QAEb,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,wBAAwB;IACxB,0CAAY,GAAZ;QACE,IAAI,IAAI,GAAiB,IAAI,CAAC,aAAa,CAAC;QAC5C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,oCAAM,GAAN,UAAO,CAAS;QACd,EAAE,EAAC,CAAC,KAAG,EAAE,CAAC,EAAC;YACP,IAAI,CAAC,sBAAsB,GAAC,IAAI,CAAC,cAAc,CAAC;QACpD,CAAC;QAAA,IAAI,EAAC;YACN,IAAI,CAAC,sBAAsB,GAAE,6CAAO,CAAC,IAAI,CAAC,cAAc,CAAC;iBAC1B,MAAM,CAAC,WAAC,IAAE,QAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAC,EAAE,CAAC,KAAG,CAAC,CAAC,EAA9C,CAA8C,CAAC;iBACzD,KAAK,EAAE,CAAC;QACvC,CAAC;IACH,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAChD,CAAC;IAED,uCAAS,GAAT,UAAU,GAAa;QACrB,IAAI,GAAG,GAAY,KAAK,CAAC;QACzB,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACb,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAED,qDAAuB,GAAvB;QAAA,iBAiBC;QAfC,IAAI,IAAI,GAAe,6CAAO,CAAC,IAAI,CAAC,aAAa,CAAC;aAC/C,MAAM,CAAC,WAAC,IAAE,QAAC,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAA3C,CAA2C,CAAC;aACtD,KAAK,EAAE,CAAC;QAEb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvB,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE3B;gBACE,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,MAAM,IAAE,CAAC,CAAC,CAAC,CAAC;oBAC7B,+CAAS,CAAC,IAAI,EAAE,WAAC,IAAI,WAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAApB,CAAoB,CAAC,CAAC;gBAC7C,CAAC;;YAHH,GAAG,CAAC,CAAa,UAAa,EAAb,SAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa,CAAC;gBAA1B,IAAI,IAAI;;aAIZ;QACH,CAAC;IAEH,CAAC;IAED,mCAAK,GAAL;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACnC,CAAC;IAED,mCAAK,GAAL;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,8CAA8C;IAC9C,wBAAwB;IACxB,oCAAM,GAAN,UAAO,eAA0B;QAC/B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,IAAI,CAAC,GAAkB,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,GAAG,GAAW,eAAe,CAAC;QAElC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,EAAE,EAAC,IAAI,CAAC,iBAAiB,KAAG,OAAO,CAAC,EAAC;YACjC,IAAI,KAAK,GAAC,6CAAO,CAAC,IAAI,CAAC,aAAa,CAAC;iBACrB,IAAI,CAAC,WAAC,IAAE,QAAC,CAAC,OAAO,CAAC,OAAO,CAAC,KAAG,GAAG,CAAC,IAAI,EAA7B,CAA6B,CAAC;iBACtC,KAAK,EAAE,CAAC;YACxB,EAAE,EAAC,CAAC,KAAK,CAAC,EAAC;gBACP,IAAI,EAAE,GAAa,eAAe,CAAC,KAAK,EAAE,CAAC;gBAC3C,EAAE,CAAC,eAAe,EAAE,CAAC;gBACrB,EAAE,CAAC,OAAO,CAAC,OAAO,EAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBACzC,EAAE,CAAC,KAAK,GAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC5B,GAAG,GAAC,EAAE,CAAC;YACX,CAAC;YAAA,IAAI,EAAC;gBACF,GAAG,GAAC,KAAK,CAAC;YACd,CAAC;QACL,CAAC;QAEL,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC;YACL,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxB,CAAC,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YACzB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YACtB,CAAC;QACH,CAAC;QAEG,EAAE,EAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,EAAC;YACvB,8CAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,WAAC,IAAE,QAAC,CAAC,IAAI,KAAG,GAAG,CAAC,IAAI,EAAjB,CAAiB,CAAC,CAAC;QACvD,CAAC;QAED,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;IAED,yCAAW,GAAX;QACF,mBAAmB;IACjB,CAAC;IASD,+CAAiB,GAAjB,UAAkB,iBAAqB;QAAvC,iBAsBC;QArBC,+CAA+C;QAC/C,EAAE,EAAC,CAAC,iBAAiB,CAAC,EAAC;YACnB,iBAAiB,GAAG,IAAI,6DAAS,EAAE,CAAC;YACpC,iBAAiB,CAAC,eAAe,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC;YACtC,iBAAiB,CAAC,KAAK,GAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAC,CAAC,CAAC;YACpD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC/C,CAAC;QACD,IAAI,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iFAAmB,EAAE,EAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;QAEhG,aAAa,CAAC,iBAAiB,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QACtE,aAAa,CAAC,iBAAiB,CAAC,KAAK,GAAG,cAAW,aAAa,CAAC,KAAK,EAAE,CAAC,EAAC,CAAC;QAC3E,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAC1C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,EAAE,EAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAC;gBACtC,8CAAQ,CAAC,KAAI,CAAC,aAAa,EAAE,WAAC,IAAE,QAAC,KAAG,iBAAiB,EAArB,CAAqB,CAAC,CAAC;YACzD,CAAC;YAAA,IAAI,EAAC;gBACJ,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAC,KAAK,CAAC,CAAC;YACzC,CAAC;YACD,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC,CAAC,yBAAyB;QACzD,CAAC,CAAC,CAAC;IACL,CAAC;IAhOH;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,kCAA2C;YAC3C,8BAA8B;YAC9B,SAAS,EAAE,CAAC,qFAAoB,CAAC;SAElC,CAAC;;2BAAA;IA2NF,0BAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;AC5OoC;AACG;AACb;AAG3B;IAAA;IA6CA,CAAC;IA3CC,wDAAwD;IAExD,sCAAsC;IACtC,+CAAgB,GAAhB,UAAiB,IAAY;QAC3B,gDAAgD;QAChD,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAChC,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;iBAClC,OAAO,CAAC,WAAC,IAAE,QAAC,CAAC,KAAK,CAAC,2BAA2B,CAAC,EAApC,CAAoC,CAAC;iBACpC,OAAO,CAAC,cAAI;gBACR,IAAI,CAAC,GAAC,CAAC,CAAC;gBACR,IAAI,KAAK,GAAC,6CAAO,CAAC,IAAI,CAAC;qBACb,GAAG,CAAC,WAAC,IAAE,WAAI,6DAAS,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAxB,CAAwB,CAAC;qBAChC,GAAG,CAAC,WAAC,IAAG,CAAC,CAAC,KAAK,GAAC,CAAC,EAAE,CAAC,OAAM,CAAC,CAAC,CAAC,EAAC,CAAC;qBAC/B,KAAK,EAAE,CAAC;gBAClB,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CAAC;iBACd,GAAG,CAAC,cAAI,IAAE,cAAO,CAAC,IAAI,CAAC,EAAb,CAAa,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACH,CAAC;IAED,wDAAwD;IACxD,kBAAkB;IAClB,oDAAqB,GAArB,UAAsB,QAAQ;QAC3B,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,MAAM,CAAC,iBAAiB,CAAC;iBACZ,kBAAkB,CAAC,QAAQ,CAAC;iBACxC,OAAO,CAAC,aAAG,IAAE,UAAG,CAAC,OAAO,EAAX,CAAW,CAAC;iBACb,OAAO,CAAC,cAAI;gBACR,IAAI,CAAC,GAAC,CAAC,CAAC;gBACR,IAAI,KAAK,GAAC,6CAAO,CAAC,IAAI,CAAC;qBACb,GAAG,CAAC,WAAC,IAAE,WAAI,6DAAS,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAxB,CAAwB,CAAC;qBAChC,GAAG,CAAC,WAAC,IAAG,CAAC,CAAC,KAAK,GAAC,CAAC,EAAE,CAAC,OAAM,CAAC,CAAC,CAAC,EAAC,CAAC;qBAC/B,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC;qBACV,KAAK,EAAE,CAAC;gBAClB,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CAAC;iBACd,GAAG,CAAC,cAAI,IAAE,cAAO,CAAC,IAAI,CAAC,EAAb,CAAa,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACH,CAAC;IAED,0CAAW,GAAX;QACE,iBAAiB;IACnB,CAAC;IA7CH;QAAC,gFAAU,EAAE;;4BAAA;IA8Cb,2BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;ACnD2B;AAG5B;IAA+B,6BAAe;IAA9C;QAA+B,8BAAe;IA0C9C,CAAC;IApCC,2BAAO,GAAP,UAAQ,GAAmB;QACzB,IAAI,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC/B,EAAE,EAAC,CAAC,KAAK,CAAC,EAAC;YACP,KAAK,GAAC,EAAE,CAAC;YACT,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;QACD,yBAAyB;QACzB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChB,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,8BAAU,GAAV,UAAW,GAAmB;QAC5B,IAAI,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAE/B,EAAE,EAAC,KAAK,CAAC,EAAC;YACN,IAAI,GAAG,GAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC3B,EAAE,EAAC,GAAG,GAAC,CAAC,CAAC,CAAC,EAAC;gBACP,KAAK,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;YACxB,CAAC;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACD,2BAAO,GAAP;QACE,IAAI,KAAK,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC/B,EAAE,EAAC,OAAO,KAAK,KAAK,WAAW,CAAC,EAAC;YAC7B,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IACD,8BAAU,GAAV;QACE,MAAM,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,WAAW,CAAC,CAAC;IACxD,CAAC;IACD,oCAAgB,GAAhB;QACE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,KAAG,CAAC,CAAC;IACxD,CAAC;IACH,gBAAC;AAAD,CAAC,CA1C8B,mDAAI,GA0ClC;;;;;;;;;;;;;;;;;;;;;;;;;AC7CqD;AAEpB;AACe;AACf;AACP;AAK3B;IAAA;IAoJA,CAAC;IAxIC,kCAAO,GAAP,UAAQ,IAAY;QAClB,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAUC;QATC,EAAE,EAAC,gBAAgB,CAAC,KAAK,KAAK,IAAI,CAAC;YAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAEnF,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC;iBACjD,OAAO,CAAC,WAAC,IAAE,QAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAjB,CAAiB,CAAC;iBAC7B,OAAO,CAAC,eAAK,IAAG,YAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAtB,CAAsB,CAAC;iBACvC,GAAG,CAAC,eAAK,IAAE,cAAO,CAAC,KAAK,CAAC,EAAd,CAAc,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IAEL,CAAC;IAGD,wCAAa,GAAb;QAAA,iBAUC;QARC,EAAE,EAAC,gBAAgB,CAAC,IAAI,KAAK,IAAI,CAAC;YAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAE7E,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACrC,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC;iBACjD,OAAO,CAAC,WAAC,IAAE,QAAC,CAAC,KAAK,CAAC,2BAA2B,CAAC,EAApC,CAAoC,CAAC;iBAChD,OAAO,CAAC,cAAI,IAAE,YAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAA1B,CAA0B,CAAC;iBACzC,GAAG,CAAC,cAAI,IAAE,cAAO,CAAC,IAAI,CAAC,EAAb,CAAa,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAQ,GAAR;QAAA,iBASC;QARC,EAAE,EAAC,gBAAgB,CAAC,KAAK,KAAK,IAAI,CAAC;YAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAEnF,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC;iBACjD,OAAO,CAAC,WAAC,IAAE,QAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAjB,CAAiB,CAAC;iBAC7B,OAAO,CAAC,eAAK,IAAG,YAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAtB,CAAsB,CAAC;iBACvC,GAAG,CAAC,eAAK,IAAE,cAAO,CAAC,KAAK,CAAC,EAAd,CAAc,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAY,GAAZ;QAEE,EAAE,EAAC,gBAAgB,CAAC,SAAS,CAAC;YAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QAElF,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC;iBACjD,OAAO,CAAC,WAAC,IAAE,QAAC,CAAC,IAAI,EAAE,EAAR,CAAQ,CAAC;iBACpB,OAAO,CAAC,aAAG;gBACV,gBAAgB,CAAC,SAAS,GAAG,GAAG,CAAC;YACnC,CAAC,CAAC;iBACD,GAAG,CAAC,aAAG,IAAE,cAAO,CAAC,GAAG,CAAC,EAAZ,CAAY,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE;aACd,IAAI,CAAC,WAAC;YACL,EAAE,EAAC,gBAAgB,CAAC,KAAK,CAAC;gBAAA,CAAC,CAAC,OAAO,CAAC,GAAC,gBAAgB,CAAC,KAAK,CAAC;YAC5D,EAAE,EAAC,gBAAgB,CAAC,IAAI,CAAC;gBAAA,CAAC,CAAC,YAAY,CAAC,GAAC,gBAAgB,CAAC,IAAI,CAAC;YAC/D,EAAE,EAAC,gBAAgB,CAAC,KAAK,CAAC;gBAAA,CAAC,CAAC,OAAO,CAAC,GAAC,gBAAgB,CAAC,KAAK,CAAC;YAE5D,MAAM,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IAChB,CAAC;IAGD,qCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,GAAG,GAAE,2CAAK,CAAC,KAAK,EAAE,WAAC;YACrB,MAAM,CAAC,CAAC,IAAI,yDAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,gBAAgB,CAAC,KAAK,GAAC,GAAG,CAAC;QAC3B,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAED,qCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,MAAM,GAAE,2CAAK,CAAC,KAAK,EAAE,WAAC;YACxB,MAAM,CAAC,CAAC,IAAI,yDAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,gBAAgB,CAAC,KAAK,GAAC,MAAM,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,0CAAe,GAAf,UAAgB,IAAS;QACvB,IAAI,CAAC,GAAC,CAAC,CAAC;QACN,IAAI,KAAK,GAAC,6CAAO,CAAC,IAAI,CAAC;aACpB,GAAG,CAAC,WAAC,IAAE,WAAI,wEAAS,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAxB,CAAwB,CAAC;aAChC,GAAG,CAAC,WAAC,IAAG,CAAC,CAAC,KAAK,GAAC,CAAC,EAAE,CAAC,OAAM,CAAC,CAAC,CAAC,EAAC,CAAC;aAC/B,KAAK,EAAE,CAAC;QAGb,gBAAgB,CAAC,IAAI,GAAG,KAAK,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAGD,sCAAW,GAAX,UAAY,SAAc;QACxB,gBAAgB,CAAC,SAAS,GAAC,SAAS,CAAC;QAErC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;QAI/C,6BAA6B;IAC9B,CAAC;IApHM,sBAAK,GAAW,IAAI,CAAC;IACrB,qBAAI,GAAgB,IAAI,CAAC;IACzB,sBAAK,GAAW,IAAI,CAAC;IACrB,0BAAS,GAAmB,IAAI,CAAC;IACjC,0BAAS,GAAQ,EAAE,CAAC;IAV7B;QAAC,gFAAU,EAAE;;wBAAA;IAqJb,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;AC7J0D;AAE3D;IAA0B,wBAAc;IACtC;QACE,iBAAO,CAAC;IACV,CAAC;IAMH,WAAC;AAAD,CAAC,CATyB,kFAAc,GASvC;;;;;;;;;;;;;;;;ACZ0D;AAK3D;IAA0B,wBAAc;IACtC;QACK,iBAAO,CAAC;IACb,CAAC;IAOD,wBAAS,GAAT;QACE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IACH,WAAC;AAAD,CAAC,CAbyB,kFAAc,GAavC;;;;;;;;;;;;;;;;AClB2B;AAI5B;IAAoC,kCAAoB;IAAxD;QAAoC,8BAAoB;IAyBxD,CAAC;IAtBC,qCAAY,GAAZ,UAAa,GAAc;QACzB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAC,CAAC,CAAC,CAAE;IAC/C,CAAC;IAED,wCAAe,GAAf,UAAgB,GAAc;QAC5B,IAAI,GAAG,GAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1C,EAAE,EAAC,GAAG,GAAC,CAAC,CAAC,CAAC,EAAC;YACP,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;YAC9B,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,qCAAY,GAAZ,UAAa,GAAc;QACzB,IAAI,GAAG,GAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1C,EAAE,EAAC,GAAG,IAAE,CAAC,CAAC,CAAC,EAAC;YACR,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC/B,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACH,qBAAC;AAAD,CAAC,CAzBmC,mDAAI,GAyBvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7B6C;AACnB;AAG3B,IAAkB,eAAiG;AAAnH,WAAkB,eAAe;IAAE,+DAAW;IAAE,yDAAQ;IAAE,+DAAW;IAAE,2DAAS;IAAE,+DAAW;IAAE,+EAAmB;AAAA,CAAC,EAAjG,eAAe,KAAf,eAAe,QAAkF;AAE5G,IAAM,MAAM,GAAW;IAC5B,oCAAoC;IACpC,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAC,MAAM,EAAC;IAC7B,EAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAC,MAAM,EAAC;IAC7B,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,KAAK,EAAC;IAC3B,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAC,WAAW,EAAC;IACvC,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC,OAAO,EAAC,CAAC,CAAC;AAE5B,IAAM,WAAW,GAAU;IAChC,EAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAC,OAAO,EAAC;IAClC,EAAC,MAAM,EAAE,YAAY,EAAE,OAAO,EAAC,YAAY,EAAC;IAC5C,EAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAC,OAAO,EAAC;IACnC;;oDAEgD;IAC/C,EAAC,MAAM,EAAE,aAAa,EAAE,OAAO,EAAC,SAAS,EAAC;CAC3C,CAAC;AAEK,IAAM,aAAa,GAAU;IAClC,EAAC,MAAM,EAAE,WAAW,EAAE,OAAO,EAAC,UAAU,EAAC,CAAC,CAAC;AAEtC,IAAM,YAAY,GAAU;IACjC,EAAC,MAAM,EAAE,iBAAiB,EAAE,OAAO,EAAC,UAAU,EAAC;IAC/C,EAAC,MAAM,EAAE,UAAU,EAAE,OAAO,EAAC,UAAU,EAAC;IACxC,EAAC,MAAM,EAAE,iBAAiB,EAAE,OAAO,EAAC,UAAU,EAAC;IAC/C,EAAC,MAAM,EAAE,aAAa,EAAE,OAAO,EAAC,UAAU,EAAC;IAC3C,EAAC,MAAM,EAAE,eAAe,EAAE,OAAO,EAAC,UAAU,EAAC;IAC7C,EAAC,MAAM,EAAE,qBAAqB,EAAE,OAAO,EAAC,UAAU,EAAC;IACnD,EAAC,MAAM,EAAE,0BAA0B,EAAE,OAAO,EAAC,UAAU,EAAC;IACxD,EAAC,MAAM,EAAE,wBAAwB,EAAE,OAAO,EAAC,UAAU,EAAC,EAAE,CAAC;AAG3D,gEAAgE;AACzD,IAAM,aAAa,GAAU;IAClC,EAAC,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAE,mBAAmB,EAAC;IACxD,EAAC,KAAK,EAAE,qBAAqB,EAAE,KAAK,EAAE,qBAAqB,EAAC;IAC5D,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAC;IACxC,EAAC,KAAK,EAAE,qBAAqB,EAAE,KAAK,EAAE,qBAAqB,EAAC;IAC5D,EAAC,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAE,mBAAmB,EAAC;CACzD,CAAC;AACK,IAAM,cAAc,GAAU;IACnC,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAC;IACtC,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAC;IACtC,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAC;CACzC,CAAC;AAIF;IAAA;IA6CA,CAAC;IA3CC,2BAAO,GAAP,UAAQ,QAAe;QACrB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAED,6BAAS,GAAT;QACE,yCAAyC;QACzC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAED,oCAAgB,GAAhB;QACE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IACzC,CAAC;IAED,mCAAe,GAAf;QACE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;IAGD,2BAAO,GAAP;QACE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAED,8BAAU,GAAV,UAAW,QAAa;QACpB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,MAAM,CAAC,OAAO,CAAC,CAAC,QAAQ;iBACrB,cAAc,CAAC,QAAQ,CAAC;iBACxB,OAAO,CAAC,aAAG,IAAE,UAAG,CAAC,OAAO,EAAX,CAAW,CAAC;iBACzB,OAAO,CAAC,aAAG;gBACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,IAAI,GAAC,6CAAO,CAAC,GAAG,CAAC;qBAClB,OAAO,CAAC,YAAE,IAAE,SAAE,CAAC,KAAK,EAAR,CAAQ,CAAC;qBACrB,GAAG,CAAC,WAAC;oBACJ,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC,OAAO,CAAC;oBAClB,MAAM,CAAC,CAAC,CAAC;gBACX,CAAC,CAAC;qBACD,KAAK,EAAE,CAAC;gBACX,MAAM,CAAC,IAAI,CAAC;YACd,CAAC,CAAC;iBACD,GAAG,CAAC,aAAG,IAAE,cAAO,CAAC,GAAG,CAAC,EAAZ,CAAY,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IAEP,CAAC;IA7CH;QAAC,gFAAU,EAAE;;iBAAA;IA8Cb,gBAAC;AAAD,CAAC;;;;;;;;;;;;ACnG0B;AAE3B;IAAA;QAiBE,oBAAoB;QACpB,kBAAa,GAAK,EAAE,CAAC;IAgCvB,CAAC;IA/CC,oBAAK,GAAL,UAAM,IAAS;QACb,MAAM,CAAC,6CAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC7B,CAAC;IACD,8BAAe,GAAf;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAE1C,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,oBAAK,GAAL;QACE,MAAM,CAAC,iDAAW,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAID,sBAAO,GAAP,UAAQ,GAAQ;QACd,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IACD,sBAAO,GAAP,UAAQ,GAAQ,EAAE,GAAQ;QACxB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAC,GAAG,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAGD,wCAAwC;IACxC,yBAAU,GAAV;QACC,IAAI,IAAI,GAAG;YACZ,UAAU,EAAE;gBACV,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG;oBACpE,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;YACxD,CAAC;YACD,EAAE,EAAE;gBACF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,OAAO,CAAC;qBAC7C,QAAQ,CAAC,EAAE,CAAC;qBACZ,SAAS,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC;YACD,MAAM,EAAE,UAAS,IAAI;gBACnB,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,gEAAgE,CAAC,CAAC,CAAC,CAAC;oBACxF,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBACD,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;SACF;QACD,MAAM,CAAC,IAAI,CAAC;IACX,CAAC;IAEF,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;ACpDqD;AACZ;AAEL;AASrC;IAQE,yBAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;IAAI,CAAC;IAE7C,uCAAa,GAAb;QAAA,iBAKC;QAJC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,aAAa,CAAC;aACtB,IAAI,CAAC,YAAE,IAAI,YAAI,CAAC,UAAU,GAAG,EAAE,EAApB,CAAoB,CAAC,CAAC;IACtC,CAAC;IAED,wCAAc,GAAd;QAAA,iBAKC;QAJC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,aAAa,CAAC;aACtB,IAAI,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,GAAG,KAAK,EAAxB,CAAwB,CAAC,CAAC;IAC7C,CAAC;IAED,kCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,oCAAU,GAAV,UAAW,MAAc;QACvB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;IAED,qCAAW,GAAX,UAAY,MAAc;QACxB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,6DAAM,EAAE,CAAC;IAC7B,CAAC;IApCD;QAAC,2EAAK,EAAE;;mDAAA;IARV;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,QAAQ;YAClB,kCAA4B;YAC5B,SAAS,EAAE,CAAC,iEAAS,CAAC;SAEvB,CAAC;;uBAAA;IAyCF,sBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;ACpD2B;AAE5B;IAA4B,0BAAY;IAAxC;QAA4B,8BAAY;IASxC,CAAC;IAAD,aAAC;AAAD,CAAC,CAT2B,mDAAI,GAS/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX8C;AAEI;AACsB;AAC/B;AACf;AACuB;AACqB;AAEU;AAEvC;AACf;AAQ3B;IAiBE,2BAAoB,oBAA0C,EAC1C,mBAAwC,EACxC,SAAoB,EACrB,MAAgB,EACf,WAAwB,EACxB,gBAAkC;QALlC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,cAAS,GAAT,SAAS,CAAW;QACrB,WAAM,GAAN,MAAM,CAAU;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QApBtD,UAAK,GAAW,EAAE,CAAC;QAGnB,eAAU,GAAW,sCAAsC,CAAC;QAG5D,eAAU,GAAgB,EAAE,CAAC;IAc6B,CAAC;IAZ3D,oCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IASD,6CAAiB,GAAjB,UAAkB,IAAS;QAA3B,iBASC;QARC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,kCAAkC;YAC3C,MAAM,EAAE,qBAAqB;YAC7B,IAAI,EAAE,aAAa;YACnB,MAAM,EAAE;gBACN,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,gDAAoB,GAApB,UAAqB,IAAS;QAC5B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,sCAAU,GAAV,UAAW,IAAU;QACnB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,mCAAO,GAAP;QACE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,mDAAI,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,sCAAU,GAAV;QACE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC9B,CAAC;IAED,mCAAO,GAAP;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAEM,gDAAoB,GAA3B,UAA4B,IAAoB;QAC9C,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,6CAAO,CAAC,IAAI,CAAC,UAAU,CAAC;iBAC5B,MAAM,CAAC,WAAC,IAAE,QAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAtC,CAAsC,CAAC;iBACjD,GAAG,CAAC,OAAO,CAAC;iBACZ,KAAK,EAAE,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IACD,kCAAM,GAAN;QACE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC9B,CAAC;IAED,yCAAa,GAAb;QAAA,iBAMC;QALC,IAAI,CAAC,gBAAgB;aAClB,aAAa,EAAE;aACf,IAAI,CAAC,cAAI;YACR,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,gBAAgB;aAClB,QAAQ,EAAE;aACV,IAAI,CAAC,eAAK;YACT,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAS,GAAT;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,cAAc,CAAC;aACvB,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,yCAAa,GAAb;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,aAAa,CAAC;aACtB,IAAI,CAAC,oBAAU,IAAI,YAAI,CAAC,UAAU,GAAG,UAAU,EAA5B,CAA4B,CAAC,CAAC;IACtD,CAAC;IAED,+CAAmB,GAAnB,UAAoB,MAAM,EAAE,KAAc;QACxC,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IAED,wCAAY,GAAZ,UAAa,MAAM,EAAE,IAAU;QAC7B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAGD,6CAAiB,GAAjB,UAAkB,IAAS;QACzB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wGAAmB,EAAE,EAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;QAEzF,oDAAoD;QACpD,SAAS,CAAC,iBAAiB,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,SAAS,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC;QACxC,SAAS,CAAC,iBAAiB,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;QAClD,SAAS,CAAC,iBAAiB,CAAC,aAAa,GAAC;YACxC,SAAS,CAAC,KAAK,EAAE,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;IAjIH;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,kCAA+B;YAC/B,8BAA8B;YAC9B,SAAS,EAAE,CAAC,gGAAoB,EAAE,oEAAmB,EAAE,iEAAS,EAAE,yEAAW,EAAE,8FAAgB,CAAC;SAEjG,CAAC;;yBAAA;IA6HF,wBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChJ8C;AACpB;AACe;AAE+B;AAC/B;AAEA;AACuC;AAE9B;AACD;AACd;AAC4B;AAGrC;AAC4C;AAQvE;IA0BE,2BAAoB,WAAwB,EACxB,oBAA0C,EAC1C,SAAoB,EACrB,MAAgB,EACf,mBAAwC,EACxC,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,gBAAkC;QARlC,gBAAW,GAAX,WAAW,CAAa;QACxB,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,cAAS,GAAT,SAAS,CAAW;QACrB,WAAM,GAAN,MAAM,CAAU;QACf,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAhCtD,UAAK,GAAW,EAAE,CAAC;QACnB,eAAU,GAAgB,EAAE,CAAC;QAC7B,8DAA8D;QAC9D,eAAU,GAAW,EAAE,CAAC;QAExB,UAAK,GAAS,IAAI,mDAAI,EAAE,CAAC;QAEzB,mBAAc,GAAU,EAAE,CAAC;IA0B3B,CAAC;IArBD,wCAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,WAAW,CAAC;aACpB,IAAI,CAAC,mBAAS,IAAI,YAAI,CAAC,SAAS,GAAG,SAAS,EAA1B,CAA0B,CAAC,CAAC;IACnD,CAAC;IAED,qCAAS,GAAT;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,cAAc,CAAC;aACvB,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAeD,yCAAa,GAAb;QAAA,iBAMC;QALC,IAAI,CAAC,gBAAgB;aAClB,aAAa,EAAE;aACf,IAAI,CAAC,cAAI;YACR,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAQC;QAPA,gCAAgC;QAC/B,uEAAuE;QACvE,IAAI,CAAC,gBAAgB;aAClB,QAAQ,EAAE;aACV,IAAI,CAAC,cAAI;YACR,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAO,GAAP;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,cAAI;YAChC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,gDAAoB,GAA3B,UAA4B,IAAoB;QAC9C,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,8CAAO,CAAC,IAAI,CAAC,UAAU,CAAC;iBAC5B,MAAM,CAAC,WAAC,IAAE,QAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAtC,CAAsC,CAAC;iBACjD,GAAG,CAAC,OAAO,CAAC;iBACZ,KAAK,EAAE,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAGD,mCAAO,GAAP;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IACpC,CAAC;IAED,6CAAiB,GAAjB,UAAkB,IAAS;QACzB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wGAAmB,EAAE,EAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;QAEzF,oDAAoD;QACpD,SAAS,CAAC,iBAAiB,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,SAAS,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC;QACxC,SAAS,CAAC,iBAAiB,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;QAClD,SAAS,CAAC,iBAAiB,CAAC,aAAa,GAAC;YACxC,SAAS,CAAC,KAAK,EAAE,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;IAED,mCAAO,GAAP;QACE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,IAAI,mDAAI,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC;QAC9B,8BAA8B;QAC/B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,WAAW,CAAC,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,yCAAa,GAAb,UAAc,KAAa;QACzB,GAAG,CAAC,CAAU,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,CAAC;YAAf,IAAI,CAAC;YACR,EAAE,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;gBACV,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YACvD,CAAC;SACF;IACH,CAAC;IAED,+CAAmB,GAAnB,UAAoB,MAAM,EAAE,KAAc;QACxC,qEAAqE;QACrE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IAED,iDAAqB,GAArB,UAAsB,IAAS;QAC7B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,sCAAU,GAAV,UAAW,IAAU;QACnB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,6CAAiB,GAAjB,UAAkB,IAAU;QAA5B,iBAUC;QATC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,kCAAkC;YAC3C,MAAM,EAAE,qBAAqB;YAC7B,IAAI,EAAE,aAAa;YACnB,MAAM,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;gBAClC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,wCAAY,GAAZ,UAAa,MAAM,EAAE,IAAU;QAC7B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAhKH;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,kCAAgC;YAChC,SAAS,EAAE,CAAC,kEAAW,EAAE,oEAAmB,EAAE,yEAAW,EAAE,gGAAoB,EAAE,+FAAgB,CAAC;SACnG,CAAC;;yBAAA;IA8JF,wBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrLuC;AACb;AAKA;AACC;AAI5B;IAAiC,+BAAiB;IAAlD;QAAiC,8BAAiB;QAEhD,cAAS,GAAW,EAAE,CAAC;IAoDzB,CAAC;IAlDC,8BAAQ,GAAR,UAAS,IAAY;QACnB,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,gDAAgD;QAChD,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAChC,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;iBAClC,OAAO,CAAC,WAAC,IAAE,QAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAjB,CAAiB,CAAC;iBACjB,OAAO,CAAC,eAAK;gBACT,MAAM,CAAC,2CAAK,CAAC,KAAK,EAAC,WAAC;oBACR,MAAM,CAAC,CAAC,IAAI,mDAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;YACX,CAAC,CAAC;iBACd,GAAG,CAAC,eAAK,IAAE,cAAO,CAAC,KAAK,CAAC,EAAd,CAAc,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACH,CAAC;IAGD,4BAA4B;IAC5B,2CAAqB,GAArB,UAAsB,IAAU;QAC9B,IAAI,OAAO,GAAG,2CAAK,CAAC,IAAI,CAAC,UAAU,EAAE,WAAC,IAAE,aAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAhC,CAAgC,CAAC,CAAC;QAE1E,IAAI,YAAY,GAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAElD,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC9B,YAAY,CAAC,GAAG,CAAC,cAAI,IAAE,cAAO,CAAC,IAAI,CAAC,EAAb,CAAa,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,sCAAsC;IACtC,8BAAQ,GAAR,UAAS,IAAU;QACjB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IACnC,CAAC;IAED,gCAAU,GAAV,UAAW,IAAU;QACnB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACvC,EAAE,EAAC,GAAG,GAAC,CAAC,CAAC,CAAC,EAAC;YACT,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;QAC/B,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,6BAAO,GAAP,UAAQ,IAAU;QAChB,EAAE,EAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC;YACb,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAtDH;QAAC,gFAAU,EAAE;;mBAAA;IAuDb,kBAAC;AAAD,CAAC,CAtDgC,mDAAI,GAsDpC;;;;;;;;;;;;;;;;ACjE2B;AAE5B;IAA2B,yBAAW;IAAtC;QAA2B,8BAAW;IAItC,CAAC;IAAD,YAAC;AAAD,CAAC,CAJ0B,mDAAI,GAI9B;;;;;;;;;;;;;;;;ACN0D;AAK3D;IAA8B,4BAAc;IAE1C,kBAAoB,eAAgC;QAClD,iBAAO,CAAC;QADU,oBAAe,GAAf,eAAe,CAAiB;IAEpD,CAAC;IASH,eAAC;AAAD,CAAC,CAb6B,kFAAc,GAa3C;;;;;;;;;;;;;;;;;;;;;;;;;;AClBuC;AACZ;AAM5B;IAAqC,mCAAqB;IAA1D;QAAqC,8BAAqB;QAExD,eAAU,GAAc,EAAE,CAAC;IAsB7B,CAAC;IApBC,sCAAY,GAAZ,UAAa,QAAkB;QAC7B,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IACvC,CAAC;IAED,wCAAc,GAAd,UAAe,QAAkB;QAC/B,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACvC,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC5C,EAAE,EAAC,GAAG,GAAC,CAAC,CAAC,CAAC,EAAC;YACT,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;QAChC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,qCAAW,GAAX,UAAY,QAAkB;QAC5B,EAAE,EAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC;YACjB,QAAQ,CAAC,eAAe,EAAE,CAAC;QAC7B,CAAC;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAxBH;QAAC,gFAAU,EAAE;;uBAAA;IAyBb,sBAAC;AAAD,CAAC,CAxBoC,mDAAI,GAwBxC;;;;;;;;;;;;;;;;;;;;;;;;;;AC/B8C;AACV;AACc;AACU;AACnB;AAC6B;AAUvE;IAoBE,gCAAoB,oBAA0C,EAC1C,mBAAwC,EACxC,SAAoB,EACpB,gBAAkC;QAHlC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,cAAS,GAAT,SAAS,CAAW;QACpB,qBAAgB,GAAhB,gBAAgB,CAAkB;QArBtD,SAAI,GAAgB,EAAE,CAAC;QAGvB,eAAU,GAAW,sCAAsC,CAAC;QAC5D,WAAM,GAAU,EAAE,CAAC;IAiBuC,CAAC;IAd3D,wCAAO,GAAP;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACD,yCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAUD,iDAAgB,GAAhB,UAAiB,GAAc;QAA/B,iBASC;QARC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,uCAAuC;YAChD,MAAM,EAAE,qBAAqB;YAC7B,IAAI,EAAE,aAAa;YACnB,MAAM,EAAE;gBACN,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAC5B,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,qDAAoB,GAApB,UAAqB,GAAa;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAED,gDAAe,GAAf,UAAgB,GAAc;QAC5B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,6CAAY,GAAZ;QACE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,6DAAS,EAAE,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,2CAAU,GAAV;QACE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC7B,CAAC;IAED,uCAAM,GAAN;QACE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC7B,CAAC;IAED,8CAAa,GAAb;QAAA,iBAMC;QALC,IAAI,CAAC,gBAAgB;aAClB,aAAa,EAAE;aACf,IAAI,CAAC,cAAI;YACR,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAS,GAAT;QACE;;kDAE0C;QAH5C,iBAQC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,cAAc,CAAC;aACvB,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,+CAAc,GAAd;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,eAAe,CAAC;aACxB,IAAI,CAAC,oBAAU,IAAI,YAAI,CAAC,WAAW,GAAG,UAAU,EAA7B,CAA6B,CAAC,CAAC;IACvD,CAAC;IAED,mDAAkB,GAAlB,UAAmB,MAAM,EAAE,IAAkB;QAC3C,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAhGH;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kCAAoC;YACpC,SAAS,EAAE,CAAC,qFAAoB,EAAE,oEAAmB,EAAE,iEAAS,EAAE,8FAAgB,CAAC;SACpF,CAAC;;8BAAA;IA8RF,6BAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;AC3SqD;AAGZ;AAS1C;IAUE,6BAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QAFxC,UAAK,GAAQ,cAAW,CAAC,CAAC;IAEkB,CAAC;IAE7C,uCAAS,GAAT,UAAU,GAAQ,EAAE,KAAK;QACvB,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,2CAA2C;QAC3C,2DAA2D;QAE3D,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,uCAAS,GAAT,UAAU,iBAAsB;QAC9B,iBAAiB,CAAC,OAAO,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,2CAAa,GAAb;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,eAAe,CAAC;aACxB,IAAI,CAAC,YAAE,IAAI,YAAI,CAAC,cAAc,GAAG,EAAE,EAAxB,CAAwB,CAAC,CAAC;IAC1C,CAAC;IAGD,mDAAqB,GAArB;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,sBAAsB,CAAC;aAC/B,IAAI,CAAC,YAAE,IAAI,YAAI,CAAC,kBAAkB,GAAG,EAAE,EAA5B,CAA4B,CAAC,CAAC;IAC9C,CAAC;IAED,uCAAS,GAAT;QAAA,iBAKC;QAJC,IAAI,CAAC,SAAS;aAEX,SAAS,EAAE;aACX,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,qCAAO,GAAP;QAAA,iBAKC;QAJC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,qBAAqB,CAAC;aAC9B,IAAI,CAAC,cAAI,IAAI,YAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CAAC,CAAC;IAEpC,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAjEH;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,kCAA2C;YAC3C,8BAA8B;YAC9B,SAAS,EAAE,CAAC,iEAAS,CAAC;SAEvB,CAAC;;2BAAA;IA4DF,0BAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEuC;AACZ;AAM5B;IAAyC,uCAAyB;IAAlE;QAAyC,8BAAyB;QAEhE,iBAAY,GAAmB,EAAE,CAAC;IAuCpC,CAAC;IArCA;;;;;;;;;;;;;;QAcI;IAEH,8CAAgB,GAAhB,UAAiB,QAAsB;QACrC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IACvC,CAAC;IAED,gDAAkB,GAAlB,UAAmB,QAAsB;QACvC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACvC,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC9C,EAAE,EAAC,GAAG,GAAC,CAAC,CAAC,CAAC,EAAC;YACT,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;QAClC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,6CAAe,GAAf,UAAgB,QAAsB;QACpC,EAAE,EAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC;YACjB,QAAQ,CAAC,eAAe,EAAE,CAAC;QAC7B,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAxCH;QAAC,gFAAU,EAAE;;2BAAA;IA0Cb,0BAAC;AAAD,CAAC,CAzCwC,mDAAI,GAyC5C;;;;;;;;;;;;;;;;AChD0D;AAI3D;IAAkC,gCAAc;IAC9C,sBAAoB,eAAoC;QACtD,iBAAO,CAAC;QADU,oBAAe,GAAf,eAAe,CAAqB;IAExD,CAAC;IAMH,mBAAC;AAAD,CAAC,CATiC,kFAAc,GAS/C;;;;;;;;;;;;;;;;;;;;;;;ACbgD;AACP;AACc;AACR;AAQhD;IAME,gCAAoB,SAAoB,EAChC,gBAAkC,EAClC,KAAqB;QAFT,cAAS,GAAT,SAAS,CAAW;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAElC,wCAAO,GAAP;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,cAAI;YAChC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,qCAAI,GAAJ;QACE,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;aAChC,IAAI,CAAC,WAAC;YACL,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAKb,MAAM,CAAC,OAAO,CAAC;iBACZ,gBAAgB;iBAChB,UAAU,CAAC,CAAC,CAAC;iBACb,IAAI,EAAE;iBACN,GAAG,CAAC,WAAC;gBACJ,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;QAET,CAAC,CAAC,CAAC;IACP,CAAC;IA/CH;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,kCAA6C;YAC7C,kCAA4C;YAC5C,SAAS,EAAE,CAAC,iEAAS,EAAE,gFAAgB,CAAC;SACzC,CAAC;;8BAAA;IA4CF,6BAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACtDgD;AAOjD;IAEE;IAAgB,CAAC;IAEjB,yCAAQ,GAAR;IACA,CAAC;IAVH;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,kCAA6C;YAC7C,kCAA4C;SAC7C,CAAC;;8BAAA;IAQF,6BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACd8C;AACX;AAC4B;AACmB;AACZ;AASvE;IAiBE,0BACU,KAAqB,EACrB,MAAc,EACd,SAAuB,EACvB,gBAAkC;QAHlC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAc;QACvB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAnB5C,eAAU,GAAU,EAAE,CAAC;QAOvB,YAAO,GAAS,CAAC,CAAC;QAGlB,WAAM,GAAM,IAAI,CAAC;QAEjB,WAAM,GAAU,KAAK,CAAC;QASpB,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACtC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAC,gBAAgB,CAAC,QAAQ,CAAC;IACzC,CAAC;IAED,kCAAO,GAAP;QACE,IAAI,EAAE,GAAqB,IAAI,CAAC;QAChC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;aAChC,IAAI,CAAC,UAAC,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;YACzC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QACL,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,OAAO,GAAC,EAAE,CAAC;IAI5D,CAAC;IAED,iCAAM,GAAN;QAEE,IAAI,EAAE,GAAqB,IAAI,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC3C,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;QAClF,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,OAAO,GAAC,MAAM,CAAC;IAKhE,CAAC;IAED,mCAAQ,GAAR;QAEE,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAE7C,IAAI,EAAE,GAAqB,IAAI,CAAC;QAEhC,IAAI,CAAC,MAAM,GAAC,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAGhD,IAAI,CAAC,MAAM,CAAC,MAAM,GAAC;YACjB,EAAE,CAAC,MAAM,EAAE,CAAC;QACd,CAAC,CAAC;QAEF,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjE,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAElE,EAAE,EAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAEhB,oEAAoE;YACpE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC7B,IAAI,CAAC,MAAM,GAAG,4CAA4C,GAAG,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;YACvF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,wEAAwE;YACxE,IAAI,CAAC,MAAM,CAAC,GAAG,GAAC,IAAI,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACnB,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;IAGH,CAAC;IAED,wCAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,EAAE,CAAC;IAChD,CAAC;IAED,wCAAa,GAAb,UAAc,IAAS;QACrB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IAGD,iCAAM,GAAN;QAAA,iBASC;QAPC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;aAChC,IAAI,CAAC,WAAC;YACH,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;QAEJ,sBAAsB;QACvB,+DAA+D;IAChE,CAAC;IAjGM,yBAAQ,GAAS,CAAC,CAAC;IAd5B;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,kCAAuC;YAEvC,SAAS,EAAE,CAAC,8FAAgB,CAAC;SAC9B,CAAC;;wBAAA;IAuHF,uBAAC;;AAAD,CAAC;;;;;;;;;;;AClID;AAAA;;GAEG;;;;;;;;;;AAEmD;AAEL;AAIjD;IACE,iCAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtC,yCAAO,GAAP,UAAQ,KAA6B;QACnC,IAAI,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACjB;;;;;;;sBAOc;QACb,MAAM,CAAE;IACV,CAAC;IAhBH;QAAC,gFAAU,EAAE;;+BAAA;IAiBb,8BAAC;;AAAD,CAAC;;;;;;;;AC1BD;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN8C;AAC4B;AAE9B;AACY;AAExD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oFAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;ACVZ;AAIb;AAI3B;IAAA;QAEE,eAAU,GAAgB,EAAE,CAAC;IA6B/B,CAAC;IA3BC,kCAAY,GAAZ,UAAa,MAAM,EAAE,GAAO;QAC1B,EAAE,EAAC,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,EAAC;YAC3B,GAAG,CAAC,MAAM,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,EAAE,EAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;YACjC,IAAI,KAAK,GAAW,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACnD,EAAE,EAAC,KAAK,IAAI,CAAC,CAAC,CAAC,EAAC;gBACd,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC;IACH,CAAC;IAED,0CAAoB,GAApB,UAAqB,IAAoB;QACvC,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,6CAAO,CAAC,IAAI,CAAC,UAAU,CAAC;iBAC5B,MAAM,CAAC,WAAC,IAAE,QAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAtC,CAAsC,CAAC;iBACjD,GAAG,CAAC,OAAO,CAAC;iBACZ,KAAK,EAAE,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAED,mCAAa,GAAb,UAAc,GAAW;QACvB,MAAM,CAAC,SAAS,CAAC;QACjB,kMAAkM;IACpM,CAAC;IA9BH;QAAC,gFAAU,EAAE;;mBAAA;IAgCb,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCmD;AACsB;AACb;AACA;AAKG;AACY;AACK;AACH;AACA;AACf;AAG/D,IAAM,SAAS,GAAW;IACxB,kDAAkD;IACpD,sDAAsD;IACtD;mCAC+B;IAE/B;;;aAGS;IAEP;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,sGAAsB;QACjC,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qFAAiB,EAAC;YAC9C,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,oGAAsB,EAAE;YACzD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qFAAiB,EAAE;YAChD;;0EAE8D;YAC7D,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,wFAAgB,EAAE;SACjD;KACF;IAED,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,sGAAsB,EAAE;IAEzD,EAAE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,aAAa;QACzB,SAAS,EAAE,MAAM;KAClB;CAGF,CAAC;AAaF;IAAA;IAA+B,CAAC;IAXhC;QAAC,8EAAQ,CAAC;YACR,OAAO,EAAE,CAAE,6DAAY,CAAC,OAAO,CAAC,SAAS,EACvC,EAAE,OAAO,EAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAE;YAC1C,OAAO,EAAE,CAAE,6DAAY,CAAE;YACzB,SAAS,EAAE,CAAC,yGAAuB;gBACjC;oBACE,OAAO,EAAE,mEAAkB;oBAC3B,QAAQ,EAAE,uFAAwB;iBACnC;aACF;SACF,CAAC;;wBAAA;IAC6B,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;AC9DO;AACH;AAiBpC;IAAA;IAA6B,CAAC;IAb9B;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,QAAQ,EAAE,6XAST;SACF,CAAC;;oBAAA;IAC2B,mBAAC;AAAD,CAAC;AAe9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuCE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEuD;AACjB;AACyB;AACvB;AACQ;AACO;AAIb;AAC3B;AAC+D;AACZ;AACZ;AACK;AACe;AACf;AAGhB;AACwC;AAC/B;AACS;AACe;AACjB;AACM;AACkB;AAC5B;AACiB;AACP;AACH;AACiB;AACH;AACE;AAoBhF;IAAA;IAAyB,CAAC;IAhB1B;QAAC,8EAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY,EAAE,wGAAmB,EAAE,4FAAmB,EAAE,iFAAiB,EAAE,sFAAiB,EAAE,qGAAsB;gBACpH,sFAAiB,EAAE,8GAAyB,EAAE,+EAAc,EAAE,uGAAuB,EAAE,sFAAiB,EAAE,4FAAa,EAAE,8GAAyB,EAAE,kFAAe,EAAE,wFAAkB;gBACvL,uGAAuB,EAAE,mGAAqB,EAAE,4FAAkB,EAAE,yFAAgB,EAAE,uGAAsB,EAAE,uGAAsB;aACrI;YACD,OAAO,EAAE;gBACP,wEAAa,EAAE,2DAAW,EAAE,iEAAU,EAAE,yEAAc,EAAE,mEAAmB,EAAE,oEAAkB;gBAC/F,mEAAiB,EAAE,oEAAkB,EAAE,iEAAe,EAAE,8DAAY,EAAE,+DAAa,EAAE,mEAAiB,EAAE,gEAAc,EAAE,gEAAc,EAAE,gEAAc;gBACtJ,qEAAmB,EAAE,6EAAgB,CAAE;YACzC,SAAS,EAAE,CAAC,0GAAuB,CAAC;YACpC,SAAS,EAAE,CAAC,oEAAY,CAAC;YACzB,eAAe,EAAE,CAAC,wGAAmB,EAAE,4FAAmB,CAAC;SAC5D,CAAC;;iBAAA;IAGuB,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACrDuC;AACtC;AACe;AACA;AAQ1C;IAUE,2BAAoB,SAAoB,EACpB,WAAwB;QADxB,cAAS,GAAT,SAAS,CAAW;QACpB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,6CAAiB,GAAjB;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,kBAAkB,CAAC;aAC3B,IAAI,CAAC,wBAAc,IAAI,YAAI,CAAC,cAAc,GAAG,cAAc,EAApC,CAAoC,CAAC,CAAC;IAClE,CAAC;IAED,yCAAa,GAAb;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,aAAa,CAAC;aACtB,IAAI,CAAC,oBAAU,IAAI,YAAI,CAAC,UAAU,GAAG,UAAU,EAA5B,CAA4B,CAAC,CAAC;IACtD,CAAC;IAED,qCAAS,GAAT;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,cAAc,CAAC;aACvB,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,uCAAW,GAAX;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,WAAW,CAAC;aACpB,IAAI,CAAC,cAAI,IAAI,YAAI,CAAC,QAAQ,GAAG,IAAI,EAApB,CAAoB,CAAC,CAAC;IACxC,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,oCAAQ,GAAR,UAAS,IAAS;QAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,sCAAU,GAAV,UAAW,IAAS;QAClB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAnDD;QAAC,2EAAK,EAAE;;mDAAA;IARV;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,kCAA+B;YAC/B,SAAS,EAAE,CAAC,iEAAS,EAAE,kEAAW,CAAC;SAEpC,CAAC;;yBAAA;IAuDF,wBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEuC;AACb;AACA;AACC;AAI5B;IAAiC,+BAAiB;IAAlD;QAAiC,8BAAiB;QAEhD,aAAQ,GAAW,EAAE,CAAC;IAwCxB,CAAC;IAtCC,8BAAQ,GAAR,UAAS,IAAW;QAClB,IAAI,EAAE,GAAG,IAAI,CAAC;QAEd,gDAAgD;QAChD,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;iBAChC,OAAO,CAAC,WAAC,IAAE,QAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAjB,CAAiB,CAAC;iBAC7B,OAAO,CAAC,eAAK;gBACZ,MAAM,CAAC,2CAAK,CAAC,KAAK,EAAE,WAAC;oBACnB,MAAM,CAAC,CAAC,IAAI,mDAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;iBACD,GAAG,CAAC,eAAK,IAAE,cAAO,CAAC,KAAK,CAAC,EAAd,CAAc,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAsC;IACtC,8BAAQ,GAAR,UAAS,IAAU;QACjB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IACnC,CAAC;IAED,gCAAU,GAAV,UAAW,IAAU;QACnB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACtC,EAAE,EAAC,GAAG,GAAC,CAAC,CAAC,CAAC,EAAC;YACT,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;QAC9B,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,6BAAO,GAAP,UAAQ,IAAU;QAChB,EAAE,EAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC;YACb,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAzCH;QAAC,gFAAU,EAAE;;mBAAA;IA2Cb,kBAAC;AAAD,CAAC,CA1CgC,mDAAI,GA0CpC;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDgE;AACtC;AACe;AAEA;AACO;AACC;AAQlD;IAYE,2BAAoB,SAAoB,EAChC,WAAwB,EACxB,WAAwB;QAFZ,cAAS,GAAT,SAAS,CAAW;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAIrC,wCAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,WAAW,CAAC;aACpB,IAAI,CAAC,mBAAS,IAAI,YAAI,CAAC,SAAS,GAAG,SAAS,EAA1B,CAA0B,CAAC,CAAC;IACnD,CAAC;IAED,qCAAS,GAAT;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,cAAc,CAAC;aACvB,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,wCAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,UAAU,CAAC;aACnB,IAAI,CAAC,cAAI,IAAI,YAAI,CAAC,SAAS,GAAG,IAAI,EAArB,CAAqB,CAAC,CAAC;IACzC,CAAC;IAED,uCAAW,GAAX;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,UAAU,CAAC;aACnB,IAAI,CAAC,cAAI,IAAI,YAAI,CAAC,QAAQ,GAAG,IAAI,EAApB,CAAoB,CAAC,CAAC;IACxC,CAAC;IAED,sCAAU,GAAV;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,aAAa,CAAC;aACtB,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,OAAO,GAAG,MAAM,EAArB,CAAqB,CAAC,CAAC;IAC3C,CAAC;IAED,+CAAmB,GAAnB;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,cAAc,CAAC;aACvB,IAAI,CAAC,eAAK,IAAI,YAAI,CAAC,SAAS,GAAG,KAAK,EAAtB,CAAsB,CAAC,CAAC;IAC3C,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,yCAAa,GAAb,UAAc,IAAS,EAAE,MAAM;QAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEtB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC;QAClC,EAAE,EAAC,MAAM,CAAC,OAAO,CAAC,EAAC;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC;QACD,8FAA8F;IAChG,CAAC;IAED,oCAAQ,GAAR,UAAS,IAAS;QAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,sCAAU,GAAV,UAAW,IAAS;QAClB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,wCAAY,GAAZ,UAAa,MAAM,EAAE,IAAU;QAC7B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IArFD;QAAC,2EAAK,EAAE;;mDAAA;IAcR;QAAC,+EAAS,CAAC,aAAa,CAAC;;oDAAA;IAtB3B;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,kCAA+B;YAC/B,SAAS,EAAE,CAAC,iEAAS,EAAE,kEAAW,CAAC;SAEpC,CAAC;;yBAAA;IAyFF,wBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACtGuC;AAEZ;AAI5B;IAAiC,+BAAiB;IAAlD;QAAiC,8BAAiB;QAEhD,aAAQ,GAAY,EAAE,CAAC;IAuBzB,CAAC;IArBE,8BAAQ,GAAR,UAAS,IAAW;QACnB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IACnC,CAAC;IAED,gCAAU,GAAV,UAAW,IAAW;QACpB,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACtC,EAAE,EAAC,GAAG,GAAC,CAAC,CAAC,CAAC,EAAC;YACT,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;QAC9B,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,6BAAO,GAAP,UAAQ,IAAW;QACjB,EAAE,EAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC;YACb,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAxBH;QAAC,gFAAU,EAAE;;mBAAA;IA0Bb,kBAAC;AAAD,CAAC,CAzBgC,mDAAI,GAyBpC;;;;;;;;;;;;;;;;;;;;;;;AC/BgE;AACpC;AACa;AACA;AAQ1C;IAOE,4BAAoB,SAAoB,EACpB,WAAwB;QADxB,cAAS,GAAT,SAAS,CAAW;QACpB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,sCAAS,GAAT;QAAA,iBAQC;QAPC,IAAI,CAAC,SAAS;aACX,SAAS,EAAE;aACX,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;QAEzC;;mDAE2C;IAC5C,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,qCAAQ,GAAR,UAAS,IAAS;QAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,uCAAU,GAAV,UAAW,IAAS;QAClB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IA/BD;QAAC,2EAAK,EAAE;;qDAAA;IARV;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,kCAAgC;YAChC,SAAS,EAAE,CAAC,iEAAS,EAAE,kEAAW,CAAC;SAEpC,CAAC;;0BAAA;IAmCF,yBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AC7C8C;AACL;AACb;AACqB;AACC;AAQnD;IAQE,wBAAoB,SAAoB,EACpB,mBAAwC,EACxC,WAAwB;QAFxB,cAAS,GAAT,SAAS,CAAW;QACpB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gBAAW,GAAX,WAAW,CAAa;QAL5C,eAAU,GAAW,sCAAsC,CAAC;QAC5D,UAAK,GAAY,EAAE,CAAC;IAI0B,CAAC;IAG/C,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,kCAAS,GAAT;QAAA,iBAQC;QAPC,IAAI,CAAC,SAAS;aACX,SAAS,EAAE;aACX,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;QAE3C;;qDAE6C;IAC5C,CAAC;IAED,4CAAmB,GAAnB,UAAoB,MAAM,EAAE,KAAe;QACzC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IAED,qCAAY,GAAZ,UAAa,MAAM,EAAE,KAAY;QAC/B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,iCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,qDAAK,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,WAAW,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,2CAAkB,GAAlB,UAAmB,KAAU;QAA7B,iBASC;QARC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,mCAAmC;YAC5C,MAAM,EAAE,qBAAqB;YAC7B,IAAI,EAAE,aAAa;YACnB,MAAM,EAAE;gBACN,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC1B,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,+CAAsB,GAAtB,UAAuB,KAAY;QACjC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,oCAAW,GAAX,UAAY,KAAY;QACtB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3D,CAAC;IArEH;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,OAAO;YACjB,kCAAgC;YAChC,SAAS,EAAE,CAAC,iEAAS,EAAE,yEAAW,EAAE,oEAAmB,CAAC;SACzD,CAAC;;sBAAA;IAkEF,qBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;AC5EqD;AACZ;AACL;AAQrC;IASE,2BAA2B;IAE3B,4BAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;IAAE,CAAC;IAG3C,qCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,yCAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,gBAAgB,EAAE;aAClB,IAAI,CAAC,YAAE,IAAI,YAAI,CAAC,SAAS,GAAG,EAAE,EAAnB,CAAmB,CAAC,CAAC;IACrC,CAAC;IAED,qCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACtB;;yCAEiC;IAClC,CAAC;IAED;;OAEG;IAEH,wCAAW,GAAX,UAAY,KAAgB;QAC1B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,4DAA4D;IAC9D,CAAC;IApCD;QAAC,2EAAK,EAAE;;qDAAA;IATV;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,OAAO;YACjB,kCAA+B;YAC/B,SAAS,EAAE,CAAC,iEAAS,CAAC;SACvB,CAAC;;0BAAA;IA0CF,yBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;ACjD2B;AAE5B;IAA+B,6BAAe;IAA9C;QAA+B,8BAAe;IAM9C,CAAC;IAAD,gBAAC;AAAD,CAAC,CAN8B,mDAAI,GAMlC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT8C;AACL;AACQ;AACC;AACV;AACS;AAER;AACuC;AACtD;AAS3B;IAYE,iCAAoB,SAAoB,EACpB,mBAAwC,EACxC,WAAwB,EACxB,eAAgC,EACjC,MAAgB;QAJf,cAAS,GAAT,SAAS,CAAW;QACpB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QACjC,WAAM,GAAN,MAAM,CAAU;QAVnC,cAAS,GAAa,IAAI,iEAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACzD,eAAU,GAAe,EAAE,CAAC;QAE5B,eAAU,GAAW,sCAAsC,CAAC;QAC5D,iBAAY,GAAW,KAAK,CAAC;IAMQ,CAAC;IAGtC,0CAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,2CAAS,GAAT;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,cAAc,CAAC;aACvB,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,iDAAe,GAAf;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,eAAe,CAAC;aACxB,IAAI,CAAC,YAAE,IAAI,YAAI,CAAC,QAAQ,GAAG,EAAE,EAAlB,CAAkB,CAAC,CAAC;IACpC,CAAC;IAED,iDAAe,GAAf;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,eAAe,CAAC;aACxB,IAAI,CAAC,YAAE,IAAI,YAAI,CAAC,QAAQ,GAAG,EAAE,EAAlB,CAAkB,CAAC,CAAC;IACpC,CAAC;IAEM,sDAAoB,GAA3B,UAA4B,IAAoB;QAC9C,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,6CAAO,CAAC,IAAI,CAAC,UAAU,CAAC;iBAC5B,MAAM,CAAC,WAAC,IAAE,QAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAtC,CAAsC,CAAC;iBACjD,GAAG,CAAC,OAAO,CAAC;iBACZ,KAAK,EAAE,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAED,mDAAiB,GAAjB,UAAkB,QAAa;QAC7B,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wGAAmB,EAAE,EAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;QAEzF,oDAAoD;QACpD,SAAS,CAAC,iBAAiB,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,SAAS,CAAC,iBAAiB,CAAC,IAAI,GAAG,QAAQ,CAAC;QAG5C,SAAS,CAAC,iBAAiB,CAAC,aAAa,GAAC;YACxC,SAAS,CAAC,KAAK,EAAE,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;IAID,yDAAuB,GAAvB,UAAwB,MAAM,EAAE,UAAuB;QACrD,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC1B,CAAC;IAED,6CAAW,GAAX;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,iEAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,WAAW,CAAC,CAAC;QACtC,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAED,2DAAyB,GAAzB,UAA0B,QAAkB;QAC1C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAED,gDAAc,GAAd,UAAe,QAAkB;QAC/B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,uDAAqB,GAArB,UAAsB,QAAkB;QAAxC,iBAUC;QATC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,sCAAsC;YAC/C,MAAM,EAAE,qBAAqB;YAC7B,IAAI,EAAE,aAAa;YACnB,MAAM,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;gBACvC,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAChC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,8CAAY,GAAZ,UAAa,MAAM,EAAE,QAAkB;QACrC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAClD,CAAC;IAED,+CAAa,GAAb;QACE,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACjC,CAAC;IAEM,6CAAW,GAAlB,UAAmB,MAAa;QAC9B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAChD,CAAC;IA5HH;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,kCAAqC;YACrC,SAAS,EAAE,CAAC,iEAAS,EAAE,oEAAmB,EAAE,yEAAW,EAAE,0EAAe,CAAC;SAE1E,CAAC;;+BAAA;IAyHF,8BAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AC1IgE;AACvB;AACQ;AACT;AACS;AAWlD;IAWE,+BAAoB,SAAmB,EACnB,eAA+B,EAC/B,WAAwB;QAFxB,cAAS,GAAT,SAAS,CAAU;QACnB,oBAAe,GAAf,eAAe,CAAgB;QAC/B,gBAAW,GAAX,WAAW,CAAa;QAL5C,kBAAa,GAAW,KAAK,CAAC;QAC9B,eAAU,GAAgB,EAAE,CAAC;IAK7B,CAAC;IAGD,yCAAS,GAAT;QAAA,iBAKC;QAJC,IAAI,CAAC,SAAS;aAEX,SAAS,EAAE;aACX,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,+CAAe,GAAf;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,eAAe,CAAC;aACxB,IAAI,CAAC,YAAE,IAAI,YAAI,CAAC,QAAQ,GAAG,EAAE,EAAlB,CAAkB,CAAC,CAAC;IACpC,CAAC;IAED,+CAAe,GAAf;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,eAAe,CAAC;aACxB,IAAI,CAAC,YAAE,IAAI,YAAI,CAAC,QAAQ,GAAG,EAAE,EAAlB,CAAkB,CAAC,CAAC;IACpC,CAAC;IAID,wCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,4CAAY,GAAZ,UAAa,QAAa;QACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAED,8CAAc,GAAd,UAAe,QAAa;QAC1B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IAED,4CAAY,GAAZ,UAAa,MAAM,EAAE,QAAkB;QACrC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAClD,CAAC;IAEM,2CAAW,GAAlB,UAAmB,MAAa;QAC9B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAChD,CAAC;IA3DD;QAAC,2EAAK,EAAE;;2DAAA;IARV;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,kCAAmC;YACnC,SAAS,EAAE,CAAC,iEAAS,EAAE,0EAAe,CAAC;SAExC,CAAC;;6BAAA;IA+DF,4BAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;AC7EqD;AACjB;AAEK;AAS1C;IAYE,uBAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QAFxC,UAAK,GAAQ,cAAW,CAAC,CAAC;IAEkB,CAAC;IAE7C,iCAAS,GAAT,UAAU,GAAQ,EAAE,KAAK;QACvB,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,2CAA2C;QAC3C,2DAA2D;QAE3D,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,iCAAS,GAAT,UAAU,iBAAsB;QAC9B,iBAAiB,CAAC,OAAO,CAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,qCAAa,GAAb;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,eAAe,CAAC;aACxB,IAAI,CAAC,YAAE,IAAI,YAAI,CAAC,cAAc,GAAG,EAAE,EAAxB,CAAwB,CAAC,CAAC;IAC1C,CAAC;IAED,6CAAqB,GAArB;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,sBAAsB,CAAC;aAC/B,IAAI,CAAC,YAAE,IAAI,YAAI,CAAC,kBAAkB,GAAG,EAAE,EAA5B,CAA4B,CAAC,CAAC;IAC9C,CAAC;IAED,iCAAS,GAAT;QAAA,iBAKC;QAJC,IAAI,CAAC,SAAS;aAEX,SAAS,EAAE;aACX,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,+BAAO,GAAP;QAAA,iBAKC;QAJC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,qBAAqB,CAAC;aAC9B,IAAI,CAAC,cAAI,IAAI,YAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CAAC,CAAC;IAEpC,CAAC;IAED,gCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAzDD;QAAC,2EAAK,EAAE;;8CAAA;IATV;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kCAAoC;YACpC,8BAA8B;YAC9B,SAAS,EAAE,CAAC,iEAAS,CAAC;SAEvB,CAAC;;qBAAA;IA6DF,oBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEgE;AACvB;AACgB;AACf;AACO;AACL;AACa;AAQ1D;IAkBE,mCAAoB,SAAmB,EACnB,mBAAuC,EACvC,WAAwB;QAFxB,cAAS,GAAT,SAAS,CAAU;QACnB,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvC,gBAAW,GAAX,WAAW,CAAa;QAT5C,kBAAa,GAAW,KAAK,CAAC;QAG9B,WAAM,GAAW,IAAI,oEAAM,EAAE,CAAC;IAO9B,CAAC;IAGD,6CAAS,GAAT;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,SAAS,EAAE;aACX,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,wDAAoB,GAApB;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,mBAAmB,CAAC;aAC5B,IAAI,CAAC,kBAAQ,IAAI,YAAI,CAAC,iBAAiB,GAAG,QAAQ,EAAjC,CAAiC,CAAC,CAAC;IACzD,CAAC;IAED,oDAAgB,GAAhB;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,eAAe,CAAC;aACxB,IAAI,CAAC,cAAI,IAAI,YAAI,CAAC,aAAa,GAAG,IAAI,EAAzB,CAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,sDAAkB,GAAlB;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,kBAAkB,CAAC;aAC3B,IAAI,CAAC,iBAAO,IAAI,YAAI,CAAC,eAAe,GAAG,OAAO,EAA9B,CAA8B,CAAC,CAAC;IACrD,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,oDAAgB,GAAhB,UAAiB,QAAa;QAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IACtD,CAAC;IAED,sDAAkB,GAAlB,UAAmB,QAAa;QAC9B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IACxD,CAAC;IAED,gDAAY,GAAZ,UAAa,MAAM,EAAE,QAAsB;QACzC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAClD,CAAC;IAEM,+CAAW,GAAlB,UAAmB,MAAa;QAC9B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAChD,CAAC;IAtED;QAAC,2EAAK,EAAE;;mEAAA;IAWR;QAAC,+EAAS,CAAC,iFAAe,CAAC;;6DAAA;IAlB7B;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,kCAAuC;YACvC,SAAS,EAAE,CAAC,iEAAS,EAAE,kFAAmB,CAAC;SAC5C,CAAC;;iCAAA;IA0EF,gCAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvF8C;AACJ;AACe;AAEe;AAC/B;AAEA;AACuC;AAE9B;AACD;AAGvB;AAQ3B;IAWE,mCAAoB,eAAoC,EACpC,oBAA0C,EAC1C,SAAoB,EACrB,MAAgB,EACf,mBAAwC,EACxC,WAAwB;QALxB,oBAAe,GAAf,eAAe,CAAqB;QACpC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,cAAS,GAAT,SAAS,CAAW;QACrB,WAAM,GAAN,MAAM,CAAU;QACf,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,gBAAW,GAAX,WAAW,CAAa;QAd5C,cAAS,GAAmB,EAAE,CAAC;QAC/B,eAAU,GAAgB,EAAE,CAAC;QAC7B,gBAAW,GAAW,KAAK,CAAC;QAC5B,iBAAY,GAAY,KAAK,CAAC;QAC9B,cAAS,GAAiB,IAAI,mEAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEjE,eAAU,GAAW,sCAAsC,CAAC;IAQZ,CAAC;IAEjD,6CAAS,GAAT;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,cAAc,CAAC;aACvB,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,wDAAoB,GAApB;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS;aACX,OAAO,CAAC,mBAAmB,CAAC;aAC5B,IAAI,CAAC,kBAAQ,IAAI,YAAI,CAAC,iBAAiB,GAAG,QAAQ,EAAjC,CAAiC,CAAC,CAAC;IACzD,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,iDAAa,GAAb;QAAA,iBAMC;QALC,IAAI,CAAC,oBAAoB;aACtB,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC;aACjC,IAAI,CAAC,cAAI;YACR,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,wDAAoB,GAA3B,UAA4B,IAAoB;QAC9C,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,6CAAO,CAAC,IAAI,CAAC,UAAU,CAAC;iBAC5B,MAAM,CAAC,WAAC,IAAE,QAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAtC,CAAsC,CAAC;iBACjD,GAAG,CAAC,OAAO,CAAC;iBACZ,KAAK,EAAE,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAGD,qDAAiB,GAAjB,UAAkB,QAAa;QAC7B,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACjC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wGAAmB,EAAE,EAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;QAEzF,oDAAoD;QACpD,SAAS,CAAC,iBAAiB,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,SAAS,CAAC,iBAAiB,CAAC,IAAI,GAAG,QAAQ,CAAC;QAG5C,SAAS,CAAC,iBAAiB,CAAC,aAAa,GAAC;YACxC,SAAS,CAAC,KAAK,EAAE,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;IAID,2DAAuB,GAAvB,UAAwB,MAAM,EAAE,SAA0B;QACxD,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC;IAED,mDAAe,GAAf;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,mEAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACxD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,WAAW,CAAC,CAAC;QACtC,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,6DAAyB,GAAzB,UAA0B,QAAsB;QAC9C,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAED,kDAAc,GAAd,UAAe,QAAsB;QACnC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,yDAAqB,GAArB,UAAsB,QAAsB;QAA5C,iBAUC;QATC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,0CAA0C;YACnD,MAAM,EAAE,qBAAqB;YAC7B,IAAI,EAAE,aAAa;YACnB,MAAM,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;gBACvC,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YAChC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,gDAAY,GAAZ,UAAa,MAAM,EAAE,QAAsB;QACzC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAClD,CAAC;IAED,iDAAa,GAAb;QACE,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACjC,CAAC;IAEM,+CAAW,GAAlB,UAAmB,MAAa;QAC9B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAChD,CAAC;IA9HH;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,kCAAuC;YACvC,SAAS,EAAE,CAAC,oEAAmB,EAAE,kFAAmB,EAAE,gGAAoB,EAAE,yEAAW,EAAE,iEAAS,CAAC;SAEpG,CAAC;;iCAAA;IA2HF,gCAAC;;AAAD,CAAC;;;;;;;;;;AC9ID;IAAA;QAEE,aAAQ,GAAyC,EAAE,CAAC;IA0CtD,CAAC;IAxCC,+CAAY,GAAZ,UAAa,KAA6B;QACxC,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;QACzD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,wCAAK,GAAL,UAAM,KAA6B,EAAE,GAAwB;QAC3D,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;QAE5C,EAAE,EAAC,GAAG,CAAC,CAAC,CAAC;YACP,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1C,GAAG,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YAC1C,CAAC;QACH,CAAC;IACH,CAAC;IAED,+CAAY,GAAZ,UAAa,KAA6B;QACxC,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;QACzD,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACxE,CAAC;IAED,2CAAQ,GAAR,UAAS,KAA6B;QACpC,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;QACrD,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QACpC,IAAI,GAAG,GAAwB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAErE,EAAE,EAAC,GAAG,CAAC,CAAC,CAAC;YACP,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC3C,GAAG,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;YAC3C,CAAC;QACH,CAAC;QAED,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAED,mDAAgB,GAAhB,UAAiB,MAA8B,EAAE,IAA4B;QAC3E,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QACpE,MAAM,CAAC,MAAM,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,CAAC;IACjD,CAAC;IAEH,+BAAC;AAAD,CAAC;;;;;;;;;AC9CD;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,sSAAsS,YAAY,oGAAoG,gBAAgB,gIAAgI,YAAY,iGAAiG,aAAa,gIAAgI,iBAAiB,iHAAiH,kBAAkB,+RAA+R,YAAY,oHAAoH,wBAAwB,wQAAwQ,YAAY,ioBAAioB,YAAY,8Y;;;;;;;ACA5wE,4aAA4a,YAAY,uWAAuW,cAAc,gqBAAgqB,WAAW,qSAAqS,UAAU,qWAAqW,eAAe,wXAAwX,eAAe,uPAAuP,gBAAgB,MAAM,uBAAuB,GAAG,mCAAmC,MAAM,kCAAkC,mBAAmB,MAAM,yBAAyB,sCAAsC,MAAM,4hB;;;;;;;ACAl9F,quBAAquB,eAAe,2IAA2I,eAAe,mVAAmV,qBAAqB,iLAAiL,eAAe,6HAA6H,gBAAgB,8FAA8F,gBAAgB,kHAAkH,qBAAqB,+rBAA+rB,4BAA4B,mQ;;;;;;;ACAnhF,iZAAiZ,WAAW,6aAA6a,cAAc,gYAAgY,gBAAgB,uMAAuM,kBAAkB,yzEAAyzE,4BAA4B,uIAAuI,gBAAgB,MAAM,uBAAuB,GAAG,mCAAmC,MAAM,kCAAkC,mBAAmB,MAAM,yBAAyB,sCAAsC,MAAM,4gB;;;;;;;ACArnI,qxBAAqxB,eAAe,uJAAuJ,eAAe,ySAAyS,eAAe,oTAAoT,eAAe,+XAA+X,gBAAgB,mHAAmH,qBAAqB,wLAAwL,eAAe,4NAA4N,qBAAqB,+uBAA+uB,4BAA4B,2TAA2T,gBAAgB,0B;;;;;;;ACA1mH,8uBAA8uB,iBAAiB,MAAM,uBAAuB,GAAG,oCAAoC,MAAM,kCAAkC,oBAAoB,MAAM,yBAAyB,uCAAuC,MAAM,8hB;;;;;;;ACA38B,quBAAquB,eAAe,2IAA2I,eAAe,wUAAwU,gBAAgB,gGAAgG,qBAAqB,0YAA0Y,gBAAgB,mUAAmU,4BAA4B,gTAAgT,cAAc,qH;;;;;;;ACAl5E,4bAA4b,YAAY,mN;;;;;;;ACAxc,oxBAAoxB,eAAe,2IAA2I,eAAe,sSAAsS,qBAAqB,cAAc,gBAAgB,shBAAshB,qBAAqB,cAAc,gBAAgB,uLAAuL,eAAe,6JAA6J,qBAAqB,cAAc,gBAAgB,uLAAuL,eAAe,gIAAgI,qBAAqB,uIAAuI,6BAA6B,iHAAiH,qBAAqB,6uBAA6uB,gCAAgC,uUAAuU,cAAc,qI;;;;;;;ACA59H,uhBAAuhB,cAAc,2YAA2Y,cAAc,2iCAA2iC,eAAe,sUAAsU,YAAY,6nBAA6nB,oBAAoB,MAAM,uBAAuB,GAAG,uCAAuC,MAAM,kCAAkC,uBAAuB,MAAM,yBAAyB,0CAA0C,MAAM,4iB;;;;;;;ACAhrG,8NAA8N,4BAA4B,opBAAopB,cAAc,uNAAuN,cAAc,koD;;;;;;;ACAjoC,uxBAAuxB,cAAc,mVAAmV,cAAc,8mBAA8mB,SAAS,q2CAAq2C,eAAe,MAAM,uBAAuB,GAAG,kCAAkC,MAAM,kCAAkC,kBAAkB,MAAM,yBAAyB,qCAAqC,MAAM,6hB;;;;;;;ACAvzG,08BAA08B,WAAW,gCAAgC,cAAc,qEAAqE,YAAY,mnB;;;;;;;ACAplC,yuBAAyuB,eAAe,2IAA2I,eAAe,gRAAgR,eAAe,kXAAkX,gBAAgB,0HAA0H,qBAAqB,gLAAgL,eAAe,oJAAoJ,qBAAqB,+WAA+W,gBAAgB,qRAAqR,aAAa,0B;;;;;;;ACA3sF,ioBAAioB,cAAc,+5BAA+5B,cAAc,obAAob,eAAe,kXAAkX,kCAAkC,klBAAklB,uBAAuB,+RAA+R,wBAAwB,MAAM,uBAAuB,GAAG,2CAA2C,MAAM,kCAAkC,2BAA2B,MAAM,yBAAyB,8CAA8C,MAAM,ilB;;;;;;;ACAphH,+xBAA+xB,eAAe,iJAAiJ,eAAe,gTAAgT,qBAAqB,cAAc,gBAAgB,khBAAkhB,qBAAqB,cAAc,gBAAgB,gMAAgM,eAAe,8LAA8L,qBAAqB,uMAAuM,eAAe,8OAA8O,qBAAqB,iaAAia,qBAAqB,uIAAuI,8BAA8B,sEAAsE,qBAAqB,uKAAuK,uBAAuB,6CAA6C,0BAA0B,8YAA8Y,gCAAgC,uUAAuU,cAAc,iI;;;;;;;ACA/6I,8DAA8D,OAAO,sIAAsI,uJAAuJ,+CAA+C,GAAG,sCAAsC,qJAAqJ,cAAc,uE;;;;;;;ACA7lB,4E;;;;;;;ACAA,4L","file":"main.bundle.js","sourcesContent":["import {Component} from \"@angular/core\";\nimport {FormControl} from \"@angular/forms\";\nimport 'rxjs/add/operator/startWith';\nimport {Reference} from \"./reference\";\nimport {Observable} from \"rxjs\";\nimport {ReferenceListService} from \"./reference-list.service\";\nimport {ReferenceEditDialog} from \"./reference.component\";\nimport {MdDialog} from \"@angular/material\";\nimport {ReferencedData} from \"./referencedData\";\nimport * as _ from \"lodash\";\n\n\n@Component({\n  selector: 'reference-list-dialog',\n  templateUrl: './reference-list-dialog.html',\n  //styleUrls: ['../styles.css']\n  providers: [ReferenceListService]\n\n})\nexport class ReferenceListDialog {\n\n  constructor(private referenceService: ReferenceListService,\n              public refDialog: MdDialog) {\n    this.refCtrl = new FormControl();\n    //this.filteredRefs = this.refCtrl.valueChanges\n    //  .startWith(null)\n    //  .map(citation => citation ? this.filter(citation) : this.references);\n  }\n\n  _referenceViewTab: string = \"all\";\n  _filterQuery: string = \"\";\n\n\n  closeFunction: any = function(){};          //the specific function to call on close\n\n  refCtrl: FormControl;\n\n\n  allReferences: Reference[] = [];           //every reference currently present (master list) [full]\n  allRefsForData: Reference[] = [];          //those currently displayable\n  allRefsForDataFiltered: Reference[] = [];  //those currently displayed\n\n\n\n  data: any;                   //the piece of data whose references are being changed\n  dataList: ReferencedData[];  //list of names, codes etc. to use it for ApplyAll\n\n  get referenceViewTab(){\n    return this._referenceViewTab;\n  }\n\n  set referenceViewTab(value){\n    if(value!==this._referenceViewTab){\n        this._referenceViewTab = value;\n        //should trigger view change here\n        this.toggleReferences(this._referenceViewTab);\n    }\n\n  }\n\n  set filterQuery(q){\n    this._filterQuery=q;\n    this.filter(this._filterQuery);\n  }\n\n  get filterQuery(){\n    return this._filterQuery;\n  }\n\n\n  toggleReferences(value: string): any {\n    console.log(\"Clicked:\" + value);\n    if (value == \"all\") {\n      this.setRefsToAll();\n    } else if (value == \"last5\") {\n      this.setRefsFromAPIMatchingUser(\"admin\");\n    } else if(value == \"selected\") {\n      this.setRefsForData(this.data);\n    }\n  }\n\n  //Set what references will be displayed\n  setDisplayRefs(refs:Reference[]): void {\n     this.allRefsForData=refs;\n     this.allRefsForDataFiltered=refs;\n  }\n\n  //sets shortlist to be from global thing\n  setRefsFromAPIMatchingUser(user): void {\n    this.referenceService.getLastFiveReferences(user)\n                           .then(refs=>{\n                                        _.forEach(refs,r=>r.index=r.index+this.allReferences.length);\n                                        this.setDisplayRefs(refs);\n                                        });\n  }\n\n  //sets the shortlist of checked references to be those\n  //found in the given data\n  setRefsForData(dat:ReferencedData): void {\n      let refs:Reference[] = _.chain(this.allReferences)\n        .filter(r=>(dat.references.indexOf(r.uuid) >= 0))\n        .value();\n\n    this.setDisplayRefs(refs);\n  }\n\n  //sets to all references\n  setRefsToAll(): void {\n    let refs : Reference[] = this.allReferences;\n    this.setDisplayRefs(refs);\n  }\n\n  filter(q: string){\n    if(q===\"\"){\n        this.allRefsForDataFiltered=this.allRefsForData;\n    }else{\n    this.allRefsForDataFiltered= _.chain(this.allRefsForData)\n                                  .filter(r=>(r.citation.indexOf(q)>-1 || (r.index+\"\")===q))\n                                  .value();\n    }\n  }\n\n  ngOnInit(): void {\n    this.toggleReferences(this._referenceViewTab);\n  }\n\n  isChecked(ref:Reference) : Boolean {\n    let has: Boolean = false;\n    if(this.data) {\n      has = this.data.hasReference(ref);\n    }\n    return has;\n  }\n\n  applySelectedToAllNames(): void {\n\n    let refs:Reference[] = _.chain(this.allReferences)\n      .filter(r=>(this.data.references.indexOf(r.uuid) >= 0))\n      .value();\n\n  console.log(refs.length);\n    if(this.dataList) {\n      console.log(this.dataList);\n\n      for (let name of this.dataList) {\n        if(name.references.length<=0) {\n          _.forEach(refs, r => name.addReference(r));\n        }\n      }\n    }\n\n  }\n\n  debug(): void{\n    console.log(this.allRefsForData);\n  }\n\n  close(): void{\n    this.closeFunction();\n  }\n\n  // Adds/removes the reference from the list in\n  // the data's references\n  toggle(toggleReference: Reference){\n    console.log(\"data:\");\n    console.log(this.data);\n    console.log(\"toggleref\");\n    console.log(toggleReference);\n    let n:ReferencedData = this.data;\n    let ref:Reference=toggleReference;\n\n    console.log(\"looking\");\n    if(this._referenceViewTab===\"last5\"){\n        var match=_.chain(this.allReferences)\n                       .find(r=>r.getFlag(\"ouuid\")===ref.uuid)\n                       .value();\n        if(!match){\n            let r2 : Reference=toggleReference.clone();\n            r2.generateNewUuid();\n            r2.setFlag(\"ouuid\",toggleReference.uuid);\n            r2.index=this.allReferences.length+1;\n            this.allReferences.push(r2);\n            ref=r2;\n        }else{\n            ref=match;\n        }\n    }\n\nif(n) {\n  if (n.hasReference(ref)) {\n    n.removeReference(ref);\n  } else {\n    n.addReference(ref);\n  }\n}\n\n    if(ref.isImportedOrphan()){\n        _.remove(this.allReferences, r=>r.uuid===ref.uuid);\n    }\n\n    console.log(\"toggled\");\n  }\n\n  saveChanges(){\n//    this.close();\n  }\n\n\n\n  //filterRefs(val: string) {\n  //  return val ? this.references.filter((r) => new RegExp(val, 'gi').test(r.citation)) : this.references;\n  //}\n\n  selectedOption: any;\n  openRefEditDialog(selectedReference:any) : void {\n    //if there is no reference, make one and add it\n    if(!selectedReference){\n        selectedReference = new Reference();\n        selectedReference.generateNewUuid();\n        selectedReference.setFlag(\"new\",true);\n        selectedReference.index=this.allReferences.length+1;\n        this.allReferences.push(selectedReference);\n    }\n    let refEditDialog = this.refDialog.open(ReferenceEditDialog, {height: '700px', width: '500px'});\n\n    refEditDialog.componentInstance.selectedReference = selectedReference;\n    refEditDialog.componentInstance.close = function(){refEditDialog.close();};\n    refEditDialog.afterClosed().subscribe(result => {\n      console.log(\"Done\");\n      if(selectedReference.getFlag(\"delete\")){\n        _.remove(this.allReferences, r=>r===selectedReference);\n      }else{\n        selectedReference.setFlag(\"new\",false);\n      }\n      this.selectedOption = result; //not sure what this does\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/references/reference-list-dialog.component.ts","import {REFERENCES} from \"../mock-references\";\nimport {Reference} from \"./reference\";\nimport {Injectable} from \"@angular/core\";\nimport * as _ from \"lodash\";\n\n@Injectable()\nexport class ReferenceListService {\n\n  //TODO: still need to add the logic, handle User session\n\n  //gets all the references for a record\n  getAllReferences(uuid: string): Promise<Reference[]> {\n    //should do something to pass the UUID somewhere\n    return new Promise((resolve, reject) => {\n\t \t    window[\"SubstanceFinder\"].get(uuid)\n\t\t\t\t   .andThen(s=>s.fetch(\"/references!sort(created)\"))\n                   .andThen(refs=>{\n                        var i=1;\n                        var mrefs=_.chain(refs)\n                                 .map(r=>new Reference().merge(r))\n                                 .map(r=>{r.index=i++;return r;})\n                                 .value();\n                        return mrefs;\n                    })\n\t\t\t\t   .get(refs=>resolve(refs));\n\t\t});\n  }\n\n  //gets the last 5 references by username \"admin\" for now\n  //TODO: Needs sort\n  getLastFiveReferences(username): Promise<Reference[]> {\n     return new Promise((resolve, reject) => {\n\t \t    window[\"ReferenceFinder\"]\n                   .searchByLastEdited(username)\n\t\t\t\t   .andThen(cnt=>cnt.content)\n                   .andThen(refs=>{\n                        var i=1;\n                        var mrefs=_.chain(refs)\n                                 .map(r=>new Reference().merge(r))\n                                 .map(r=>{r.index=i++;return r;})\n                                 .slice(0,5)\n                                 .value();\n                        return mrefs;\n                    })\n\t\t\t\t   .get(refs=>resolve(refs));\n\t\t});\n  }\n\n  saveChanges(){\n    //save references\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/references/reference-list.service.ts","import {Data} from \"../data\";\nimport {ReferencedData} from \"./referencedData\";\n\nexport class Reference extends Data<Reference>{\n  index: number;\n  citation: string;\n  docType: string;\n  url: string;\n\n  addData(dat: ReferencedData): Reference{\n    var dlist=this.getFlag(\"data\");\n    if(!dlist){\n        dlist=[];\n        this.setFlag(\"data\",dlist);\n    }\n    //TODO: should use UUIDs?\n    dlist.push(dat);\n    return this;\n  }\n\n  removeData(dat: ReferencedData): Reference{\n    var dlist=this.getFlag(\"data\");\n    \n    if(dlist){\n        var idx=dlist.indexOf(dat);\n        if(idx>-1){\n            dlist.splice(idx,1);\n        }\n    }\n    return this;\n  }\n  getData(): ReferencedData[]{\n    var dlist=this.getFlag(\"data\");\n    if(typeof dlist === \"undefined\"){\n        return [];\n    }\n    return dlist;\n  }\n  isImported(): Boolean{\n    return (typeof this.getFlag(\"ouuid\") !== \"undefined\");\n  }\n  isImportedOrphan(): Boolean{\n    console.log(\"imported Orphan\");\n    return this.isImported() && this.getData().length===0;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/references/reference.ts","import { Injectable }             from '@angular/core';\nimport {Relationship} from \"../relationships/relationship\";\nimport {Code} from \"../codes/code\";\nimport {Reference} from \"../references/reference\";\nimport {Name} from \"../names/name\";\nimport * as _ from \"lodash\";\nimport {Data} from \"../data\";\n\n\n@Injectable()\nexport class SubstanceService {\n\n\n\n  static uuid: string;\n  static names: Name[] = null;\n  static refs: Reference[] = null;\n  static codes: Code[] = null;\n  static relations: Relationship[] = null;\n  static substance: any = \"\";\n\n\n  setUuid(uuid: string){\n    SubstanceService.uuid = uuid;\n    console.log(\"set uuid\");\n    console.log(uuid);\n  }\n\n  getNames(): Promise<Name[]> {\n    if(SubstanceService.names !== null) return Promise.resolve(SubstanceService.names);\n\n    return new Promise((resolve, reject) => {\n      window[\"SubstanceFinder\"].get(SubstanceService.uuid)\n        .andThen(s=>s.fetch(\"/names\"))\n        .andThen(names=> this.storeNames(names))\n        .get(names=>resolve(names));\n    });\n\n  }\n\n\n  getReferences(): Promise<Reference[]> {\n\n    if(SubstanceService.refs !== null) return Promise.resolve(SubstanceService.refs);\n\n        return new Promise((resolve, reject) => {\n      window[\"SubstanceFinder\"].get(SubstanceService.uuid)\n        .andThen(s=>s.fetch(\"/references!sort(created)\"))\n        .andThen(refs=>this.storeReferences(refs))\n        .get(refs=>resolve(refs));\n    });\n  }\n\n  getCodes():Promise<Code[]> {\n    if(SubstanceService.codes !== null) return Promise.resolve(SubstanceService.codes);\n\n    return new Promise((resolve, reject) => {\n      window[\"SubstanceFinder\"].get(SubstanceService.uuid)\n        .andThen(s=>s.fetch(\"/codes\"))\n        .andThen(codes=> this.storeCodes(codes))\n        .get(codes=>resolve(codes));\n    });\n  }\n\n  _getFullJson(): Promise<any> {\n\n    if(SubstanceService.substance) return Promise.resolve(SubstanceService.substance);\n\n    return new Promise((resolve, reject) => {\n      window[\"SubstanceFinder\"].get(SubstanceService.uuid)\n        .andThen(s=>s.full())\n        .andThen(sub => {\n          SubstanceService.substance = sub;\n        })\n        .get(sub=>resolve(sub));\n    });\n  }\n\n  getFullJson(): Promise<any> {\n    return this._getFullJson()\n               .then(s=>{\n                 if(SubstanceService.names)s[\"names\"]=SubstanceService.names;\n                 if(SubstanceService.refs)s[\"references\"]=SubstanceService.refs;\n                 if(SubstanceService.codes)s[\"codes\"]=SubstanceService.codes;\n\n                 return s;\n               });\n  }\n\n\n  storeCodes(codes: any){\n    let cds= _.map(codes, n=> {\n      return (new Code().merge(n));\n    });\n\n    SubstanceService.codes=cds;\n    return cds;\n  }\n\n  storeNames(names: any){\n    let mnames= _.map(names, n=> {\n      return (new Name().merge(n));\n    });\n\n    SubstanceService.names=mnames;\n    return mnames;\n  }\n\n  storeReferences(refs: any){\n    var i=1;\n      var mrefs=_.chain(refs)\n        .map(r=>new Reference().merge(r))\n        .map(r=>{r.index=i++;return r;})\n        .value();\n\n\n    SubstanceService.refs = mrefs;\n    return mrefs;\n  }\n\n\n  setFullJson(substance: any){\n    SubstanceService.substance=substance;\n\n    this.storeCodes(substance[\"codes\"]);\n    this.storeNames(substance[\"names\"]);\n    this.storeReferences(substance[\"references\"]);\n\n\n\n   // SubstanceService.substance\n  }\n\n\n\n /* getCodes(uuid: string): Promise<Code[]> {\n\n  }\n\n  getReferences(uuid: string): Promise<Reference[]> {\n\n  }\n\n  getRelationships(uuid: string): Promise<Relationship[]> {\n\n  }\n\n\n\n  setNames();\n  setCodes();\n  setReferences();\n  setRelationships();\n\n  getUuid();\n */\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/substanceedit/substanceedit.service.ts","import {Data} from \"../data\";\nimport {ReferencedData} from \"../references/referencedData\";\n\nexport class Code extends ReferencedData {\n  constructor() {\n    super();\n  }\n\n  codeSystem:string;\n  code:string;\n  url:string;\n // references: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/codes/code.ts","import {ReferencedData} from \"../references/referencedData\";\nimport {Reference} from \"../references/reference\";\nimport {NameService} from \"./name.service\";\nimport {term} from \"../cv/cv\";\n\nexport class Name extends ReferencedData{\n  constructor() {\n       super();\n  }\n  name: string;\n  //references: any[];\n  type: string;\n  access: any[];\n  languages: any[];\n\n  justATest(): Promise<string> {\n    return Promise.resolve(\"Test\");\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/names/name.ts","import {Data} from \"../data\";\nimport {Reference} from \"./reference\";\nimport * as _ from \"lodash\";\n\nexport class ReferencedData extends Data<ReferencedData>{\n  references: string[];\n\n  hasReference(ref: Reference): Boolean {\n    return this.references.indexOf(ref.uuid)>-1 ;\n  }\n  \n  removeReference(ref: Reference): ReferencedData{\n    var loc=this.references.indexOf(ref.uuid);\n    if(loc>-1){\n        this.references.splice(loc,1);\n        ref.removeData(this);\n    }\n    \n    return this;\n  }\n  \n  addReference(ref: Reference): ReferencedData{\n    var loc=this.references.indexOf(ref.uuid);\n    if(loc==-1){\n        this.references.push(ref.uuid);\n        ref.addData(this);\n    }\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/references/referencedData.ts","import {Injectable, Type} from \"@angular/core\";\nimport * as _ from \"lodash\";\nimport {CV, term, tab} from \"./cv\";\n\nexport const enum CV_DOMAIN_TYPES {\"NAME_TYPE\", \"ACCESS\", \"LANGUAGES\", \"DOMAINS\", \"NAME_ORGS\", \"NAME_JURISDICTION\"}\n\nexport const ACCESS: term[] = [\n  //{value: 'public', label:'Public'},\n  {value: 'cber', label:'CBER'},\n  {value: 'cder', label:'CDER'},\n  {value: 'cvm', label:'CVM'},\n  {value: 'protected', label:'Protected'},\n  {value: 'admin', label:'Admin'}];\n\nexport const COMMON_TABS: tab[] = [\n  {header: 'Names', content:'names'},\n  {header: 'References', content:'references'},\n  {header: 'Codes', content:'codes'},\n /* {header: 'Relationships', content:'relationships'},\n  {header: 'Notes', content:'notes'},\n  {header: 'Properties', content:'properties'},*/\n  {header: 'Expand View', content:'summary'}\n];\n\nexport const CHEMICAL_TABS: tab[] = [\n  {header: 'Structure', content:'CLINICAL'}];\n\nexport const PROTEIN_TABS: tab[] = [\n  {header: 'Protein Details', content:'CLINICAL'},\n  {header: 'Subunits', content:'CLINICAL'},\n  {header: 'Disulfide Links', content:'CLINICAL'},\n  {header: 'Other Links', content:'CLINICAL'},\n  {header: 'Glycosylation', content:'CLINICAL'},\n  {header: 'Agent Modifications', content:'CLINICAL'},\n  {header: 'Structural Modifications', content:'CLINICAL'},\n  {header: 'Physical Modifications', content:'CLINICAL'},];\n\n\n//need to update the new values in the database for the api call\nexport const PROPERTY_TYPE: any[] = [\n  {value: \"PHYSICAL MEASURED\", label: \"PHYSICAL MEASURED\"},\n  {value: \"PHYSICAL CALCULATED\", label: \"PHYSICAL CALCULATED\"},\n  {value: \"ENZYMATIC\", label: \"ENZYMATIC\"},\n  {value: \"CHEMICAL CALCULATED\", label: \"CHEMICAL CALCULATED\"},\n  {value: \"CHEMICAL MEASURED\", label: \"CHEMICAL MEASURED\"}\n];\nexport const PARAMETER_TYPE: any[] = [\n  {value: \"PHYSICAL\", label: \"PHYSICAL\"},\n  {value: \"CHEMICAL\", label: \"CHEMICAL\"},\n  {value: \"ENZYMATIC\", label: \"ENZYMATIC\"}\n];\n\n\n@Injectable()\nexport class CVService {\n\n  getList(listName:String): Promise<any[]>{\n    return this.getCVLists(listName);\n  }\n\n  getAccess(): Promise<any[]> {\n    //return this.getCVLists(\"ACCESS_GROUP\");\n    return Promise.resolve(ACCESS);\n  }\n\n  getParameterType():Promise<any[]>{\n    return Promise.resolve(PARAMETER_TYPE);\n  }\n\n  getPropertyType():Promise<any[]>{\n    return Promise.resolve(PROPERTY_TYPE);\n  }\n\n\n  getTabs():Promise<any[]>{\n    return Promise.resolve(COMMON_TABS);\n  }\n\n  getCVLists(cvDomain: any): Promise<any []>{\n      console.log(\"in here\");\n      return new Promise((resolve, reject) => {\n        window[\"GGlob\"].CVFinder\n          .searchByDomain(cvDomain)\n          .andThen(cnt=>cnt.content)\n          .andThen(cvs=>{\n            console.log(cvs);\n            var mcvs=_.chain(cvs)\n              .flatMap(cv=>cv.terms)\n              .map(t=>{\n                t.label=t.display;\n                return t;\n              })\n              .value();\n            return mcvs;\n          })\n          .get(cvs=>resolve(cvs));\n      });\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cv/cv.service.ts","import * as _ from \"lodash\";\n\nexport class Data<T> {\n  uuid:string;\n\n  merge(json: any): T {\n    return _.merge(this, json);\n  }\n  generateNewUuid(): Data<T> {\n    this.uuid = this.uuidHelper().randomUUID();\n    console.log(\"made new uuid:\" + this.uuid);\n\n    return this;\n  }\n\n  clone(): any{\n    return _.cloneDeep(this);\n  }\n\n  //processing helpers\n  $specialFlags:any={};\n  getFlag(key: any): any{\n    return this.$specialFlags[key];\n  }\n  setFlag(key: any, val: any): Data<T>{\n    this.$specialFlags[key]=val;\n    return this;\n  }\n\n\n  //TODO: move this somewhere more generic\n  uuidHelper(): any{\n   var UUID = {\n  randomUUID: function() {\n    return UUID.s4() + UUID.s4() + '-' + UUID.s4() + '-' + UUID.s4() + '-' +\n      UUID.s4() + '-' + UUID.s4() + UUID.s4() + UUID.s4();\n  },\n  s4: function() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  },\n  isUUID: function(uuid) {\n    if ((uuid + \"\").match(/^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/)) {\n      return true;\n    }\n    return false;\n  }\n}\nreturn UUID;\n }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data.ts","import {Component, OnInit, Input} from '@angular/core';\nimport {CVService} from \"../cv/cv.service\";\nimport {MdDialog} from \"@angular/material\";\nimport {Amount} from \"./amount.model\";\n\n\n@Component({\n  selector: 'amount',\n  templateUrl: './amount.html',\n  providers: [CVService]\n\n})\nexport class AmountComponent implements OnInit {\n\n  @Input()\n  amount: Amount;\n\n  amountType: any[];\n  amountUnits: any[];\n\n  constructor(private cvService: CVService) { }\n\n  getAmountType(): void {\n    console.log(\"amount types.................\");\n    this.cvService\n      .getList(\"AMOUNT_TYPE\")\n      .then(at => this.amountType = at);\n  }\n\n  getAmountUnits(): void {\n    console.log(\"amount units.................\");\n    this.cvService\n      .getList(\"AMOUNT_UNIT\")\n      .then(units => this.amountUnits = units);\n  }\n\n  ngOnInit(): void {\n    this.getAmountType();\n    this.getAmountUnits();\n  }\n\n  saveAmount(amount: Amount): void {\n    console.log(\"save amount\");\n    console.log(amount);\n  }\n\n  clearAmount(amount: Amount): void {\n    console.log(\"clear amount\");\n    console.log(amount);\n    this.amount = new Amount();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/amount/amount.component.ts","import {Data} from \"../data\";\n\nexport class Amount extends Data<Amount> {\n  type:string;\n  average:number;\n  highLimit:number;\n  high:number;\n  lowLimit:number;\n  low:number;\n  units:string;\n  nonNumericValue:string;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/amount/amount.model.ts","import {Component, OnInit} from \"@angular/core\";\nimport {Reference} from \"../references/reference\";\nimport {ConfirmationService} from 'primeng/primeng';\nimport {ReferenceListService} from '../references/reference-list.service';\nimport {CVService} from '../cv/cv.service';\nimport {Code} from './code';\nimport {UtilService} from \"../utils/utils.service\"\nimport {SubstanceService} from \"../substanceedit/substanceedit.service\";\nimport {ReferencedData} from \"../references/referencedData\";\nimport {ReferenceListDialog} from \"../references/reference-list-dialog.component\";\n\nimport {MdDialog} from \"@angular/material\";\nimport * as _ from \"lodash\";\n@Component({\n  selector: 'code-list',\n  templateUrl: './code-list.html',\n  //styleUrls: ['../styles.css']\n  providers: [ReferenceListService, ConfirmationService, CVService, UtilService, SubstanceService]\n\n})\nexport class CodeListComponent implements OnInit {\n\n  codes: Code[] = [];\n  newCode: boolean;\n  nCode: Code;\n  recordUUID: string = \"00006eea-e2d2-4d79-99ff-30f17b3dd740\";\n  access: any[];\n  codeSystem: any[];\n  references: Reference[] = [];\n\n  ngOnInit(): void {\n    this.getReferences();\n    this.getAccess();\n    this.getCodeSystem();\n    this.getCodes();\n  }\n\n  constructor(private referenceListService: ReferenceListService,\n              private confirmationService: ConfirmationService,\n              private cvService: CVService,\n              public dialog: MdDialog,\n              private utilService: UtilService,\n              private substanceService: SubstanceService) { }\n\n  confirmDeleteCode(code: any) {\n    this.confirmationService.confirm({\n      message: 'Do you want to delete this Code?',\n      header: 'Delete Confirmation',\n      icon: 'fa fa-trash',\n      accept: () => {\n        this.deleteCode(code);\n      }\n    });\n  }\n\n  findSelectedRefIndex(code:Code): number {\n    return this.codes.indexOf(code);\n  }\n\n  deleteCode(code: Code){\n    this.codes.splice(this.findSelectedRefIndex(code), 1);\n  }\n\n  addCode(){\n    console.log(\"add\");\n    this.newCode = true;\n    this.nCode = new Code();\n    this.codes.push(this.nCode);\n  }\n\n  exportRefs(){\n    console.log(\"export codes\");\n  }\n\n  refresh(){\n    this.ngOnInit();\n  }\n\n  public showReferenceIndexes(data: ReferencedData): string {\n    if(data.references) {\n      return _.chain(this.references)\n        .filter(r=>(data.references.indexOf(r.uuid) >= 0))\n        .map(\"index\")\n        .value();\n    } else {\n      return \"\";\n    }\n  }\n  search(){\n    console.log(\"search codes\");\n  }\n\n  getReferences(): void {\n    this.substanceService\n      .getReferences()\n      .then(refs =>{\n        this.references = refs;\n      });\n  }\n\n  getCodes(): void {\n    this.substanceService\n      .getCodes()\n      .then(codes =>{\n        this.codes = codes;\n      });\n  }\n\n  getAccess(): void {\n    this.cvService\n      .getList(\"ACCESS_GROUP\")\n      .then(access => this.access = access);\n  }\n\n  getCodeSystem(): void {\n    this.cvService\n      .getList(\"CODE_SYSTEM\")\n      .then(codeSystem => this.codeSystem = codeSystem);\n  }\n\n  saveCodeListChanges($event, codes : Code[]){\n    console.log(\"save code list changes\");\n    console.log(codes);\n  }\n\n  changeAccess($event, code: Code): void {\n    this.utilService.changeAccess($event, code);\n  }\n\n\n  openRefListDialog(name: any) : void {\n    console.log(\"reference list\");\n    let dialogRef = this.dialog.open(ReferenceListDialog, {height: '550px', width: '400px'});\n\n    //TODO: should have a cleaner initialization process\n    dialogRef.componentInstance.allReferences = this.references;\n    console.log(name);\n    dialogRef.componentInstance.data = name;\n    dialogRef.componentInstance.dataList = this.codes;\n    dialogRef.componentInstance.closeFunction=function(){\n      dialogRef.close();\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/codes/code-list.component.ts","import {Component, OnInit} from '@angular/core';\nimport {Name} from \"./name\";\nimport {NameService} from \"./name.service\";\nimport {Reference} from \"../references/reference\";\nimport {ReferenceListService} from \"../references/reference-list.service\";\nimport {CVService} from \"../cv/cv.service\";\n\nimport {MdDialog} from \"@angular/material\";\nimport {ReferenceListDialog} from \"../references/reference-list-dialog.component\";\nimport {ReferencedData} from \"../references/referencedData\";\nimport {ConfirmationService} from 'primeng/primeng';\nimport {UtilService} from \"../utils/utils.service\";\nimport 'rxjs/add/operator/switchMap';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\n\nimport * as _ from \"lodash\";\nimport {SubstanceService} from \"../substanceedit/substanceedit.service\";\n\n@Component({\n  selector: 'name-list',\n  templateUrl: './names-list.html',\n  providers: [NameService, ConfirmationService, UtilService, ReferenceListService, SubstanceService]\n})\n\nexport class NameListComponent implements OnInit {\n\n  names: Name[] = [];\n  references: Reference[] = [];\n  //recordUUID: string = \"00006eea-e2d2-4d79-99ff-30f17b3dd740\";\n  recordUUID: string = \"\";\n  UUID: string;\n  nName: Name = new Name();\n  tabs: any[];\n  nameValidation: any[] = [];\n\n  nameTypes: any[];\n  access: any[];\n\n  getNameTypes(): void {\n    this.cvService\n      .getList(\"NAME_TYPE\")\n      .then(nameTypes => this.nameTypes = nameTypes);\n  }\n\n  getAccess(): void {\n    this.cvService\n      .getList(\"ACCESS_GROUP\")\n      .then(access => this.access = access);\n  }\n\n  constructor(private nameService: NameService,\n              private referenceListService: ReferenceListService,\n              private cvService: CVService,\n              public dialog: MdDialog,\n              private confirmationService: ConfirmationService,\n              private utilService: UtilService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private substanceService: SubstanceService) {\n  }\n\n\n\n  getReferences(): void {\n    this.substanceService\n      .getReferences()\n      .then(refs =>{\n        this.references = refs;\n      });\n  }\n\n  getNames(): void {\n   // console.log(this.recordUUID);\n    //obj = document.getElementById('targetFrame').contentWindow.getJson();\n    this.substanceService\n      .getNames()\n      .then(nams => {\n        this.names = nams;\n      });\n  }\n\n  getTabs(): void {\n    this.cvService.getTabs().then(tabs => {\n      this.tabs = tabs;\n    });\n  }\n\n  public showReferenceIndexes(data: ReferencedData): string {\n    if(data.references) {\n      return _.chain(this.references)\n        .filter(r=>(data.references.indexOf(r.uuid) >= 0))\n        .map(\"index\")\n        .value();\n    } else {\n      return \"\";\n    }\n  }\n\n  \n  refresh(): void{\n    this.ngOnInit();\n  }\n\n  ngOnInit(): void {\n    this.recordUUID = this.route.parent.snapshot.params['id'];\n    this.getNameTypes();\n    this.getAccess();\n    this.getTabs();\n    this.getNames();\n    this.getReferences();\n\n    console.log(\"Initializing names\");\n  }\n\n  openRefListDialog(name: any) : void {\n    console.log(\"reference list\");\n    let dialogRef = this.dialog.open(ReferenceListDialog, {height: '550px', width: '400px'});\n\n    //TODO: should have a cleaner initialization process\n    dialogRef.componentInstance.allReferences = this.references;\n    console.log(name);\n    dialogRef.componentInstance.data = name;\n    dialogRef.componentInstance.dataList = this.names;\n    dialogRef.componentInstance.closeFunction=function(){\n      dialogRef.close();\n    };\n  }\n\n  addName(){\n    console.log(\"add\");\n    this.nName = new Name();\n    this.nName.type = 'cn';\n    this.nName.languages = ['en'];\n    //this.nName.name=\"enter....\";\n   this.nName.access = ['protected'];\n    this.nName.references = [];\n    this.nName.generateNewUuid();\n    this.names.push(this.nName);\n  }\n\n  validateNames(names: Name[]){\n    for (let n of names) {\n      if(!n.name){\n        this.nameValidation.push(\"Name is a required field\");\n      }\n    }\n  }\n\n  saveNameListChanges($event, names : Name[]){\n    //validate to make sure at least one name is marked as Preferred Term\n    this.validateNames(names);\n    console.log(\"save name list changes\");\n    console.log(names);\n  }\n\n  findSelectedNameIndex(name:Name): number {\n    return this.names.indexOf(name);\n  }\n\n  deleteName(name: Name){\n    console.log(\"delete:\");\n    this.names.splice(this.findSelectedNameIndex(name), 1);\n  }\n\n  confirmDeleteName(name: Name) {\n    this.confirmationService.confirm({\n      message: 'Do you want to delete this name?',\n      header: 'Delete Confirmation',\n      icon: 'fa fa-trash',\n      accept: () => {\n       console.log(\"confirm delete name\");\n        this.deleteName(name);\n      }\n    });\n  }\n\n  changeAccess($event, name: Name): void {\n    this.utilService.changeAccess($event, name);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/names/name-list.component.ts","import {Injectable} from \"@angular/core\";\nimport {Name} from \"./name\";\nimport {Reference} from \"../references/reference\";\nimport {forEach} from \"@angular/router/src/utils/collection\";\nimport {NAMES} from \"../mock-names\";\nimport {REFERENCES} from \"../mock-references\";\nimport * as _ from \"lodash\";\nimport {Data} from \"../data\";\n\n\n@Injectable()\nexport class NameService extends Data<NameService> {\n\n  namesList: Name[] = [];\n\n  getNames(uuid: string): Promise<Name[]> {\n    let me = this;\n\n    //should do something to pass the UUID somewhere\n    return new Promise((resolve, reject) => {\n\t \t    window[\"SubstanceFinder\"].get(uuid)\n\t\t\t\t   .andThen(s=>s.fetch(\"/names\"))\n                   .andThen(names=>{\n                        return _.map(names,n=>{\n                                    return (new Name().merge(n));\n                            });\n                    })\n\t\t\t\t   .get(names=>resolve(names));\n\t\t});\n  }\n\n\n  //TODO: probebly retire this\n  getReferencesFromName(name: Name): Promise<Reference[]> {\n    var reflist = _.map(name.references, r=>window[\"ReferenceFinder\"].get(r));\n\n    var totalpromise=window[\"JPromise\"].join(reflist);\n\n    return new Promise((resolve, reject) => {\n         totalpromise.get(refs=>resolve(refs));\n    });\n  }\n\n\n  //TODO: a service to create a new name\n  saveName(name: Name) {\n    console.log(\"name save service\");\n  }\n\n  deleteName(name: Name): Name[]{\n    console.log(\"delete name service\");\n    var loc = this.namesList.indexOf(name);\n    if(loc>-1){\n      this.namesList.splice(loc,1);\n    }\n    return this.namesList;\n  }\n\n  addName(name: Name): NameService {\n    if(!name.uuid){\n      name.generateNewUuid();\n    }\n    this.namesList.push(name);\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/names/name.service.ts","import {Data} from \"../data\";\n\nexport class Notes extends Data<Notes> {\n  access:any[];\n  notes:string;\n  references: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notes/notes.ts","import {ReferencedData} from \"../references/referencedData\";\nimport {PropertyService} from \"./property.service\"\nimport {Amount} from \"../amount/amount.model\";\nimport {Parameter} from \"../parameters/parameter\";\n\nexport class Property extends ReferencedData{\n\n  constructor(private propertyService: PropertyService) {\n    super();\n  }\n\n  relatedSubstance: any;\n  references: any[];\n  propertyType: any[];\n  propertyName: any[];\n  access: any[];\n  value: Amount;\n  parameters: Parameter[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/properties/property.model.ts","import {Injectable} from \"@angular/core\";\nimport {Data} from \"../data\";\nimport {Property} from \"./property.model\";\nimport * as _ from \"lodash\";\n\n\n@Injectable()\nexport class PropertyService extends Data<PropertyService> {\n\n  properties:Property[] = [];\n\n  saveProperty(property: Property) {\n    console.log(\"property save service\");\n  }\n\n  deleteProperty(property: Property): Property[]{\n    console.log(\"delete property service\");\n    var loc = this.properties.indexOf(property);\n    if(loc>-1){\n      this.properties.splice(loc,1);\n    }\n    return this.properties;\n  }\n\n  addProperty(property: Property): PropertyService {\n    if(!property.uuid){\n      property.generateNewUuid();\n    }\n    this.properties.push(property);\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/properties/property.service.ts","import {Component, OnInit} from \"@angular/core\";\nimport {Reference} from \"./reference\";\nimport {ConfirmationService} from 'primeng/primeng';\nimport {ReferenceListService} from './reference-list.service';\nimport {CVService} from '../cv/cv.service';\nimport {SubstanceService} from \"../substanceedit/substanceedit.service\";\n\n\n\n@Component({\n  selector: 'reference-list',\n  templateUrl: './reference-list.html',\n  providers: [ReferenceListService, ConfirmationService, CVService, SubstanceService]\n})\n\nexport class ReferenceListComponent implements OnInit {\n\n  refs: Reference[] = [];\n  newRef: boolean;\n  nRef: Reference;\n  recordUUID: string = \"00006eea-e2d2-4d79-99ff-30f17b3dd740\";\n  access: any[] = [];\n  sourceTypes: any[];\n\n  refresh(){\n    this.ngOnInit();\n  }\n  ngOnInit(): void {\n    this.getReferences();\n    this.getAccess();\n    this.getSourceTypes();\n  }\n\n\n\n  constructor(private referenceListService: ReferenceListService,\n              private confirmationService: ConfirmationService,\n              private cvService: CVService,\n              private substanceService: SubstanceService) { }\n\n\n  confirmDeleteRef(ref: Reference) {\n    this.confirmationService.confirm({\n      message: 'Do you want to delete this Reference?',\n      header: 'Delete Confirmation',\n      icon: 'fa fa-trash',\n      accept: () => {\n        this.deleteReference(ref);\n      }\n    });\n  }\n\n  findSelectedRefIndex(ref:Reference): number {\n    return this.refs.indexOf(ref);\n  }\n\n  deleteReference(ref: Reference){\n    this.refs.splice(this.findSelectedRefIndex(ref), 1);\n  }\n\n  addReference(){\n    console.log(\"add\");\n    this.newRef = true;\n    this.nRef = new Reference();\n    this.nRef.generateNewUuid();\n    this.nRef.setFlag(\"new\",true);\n    this.nRef.index=this.refs.length+1;\n    this.refs.push(this.nRef);\n  }\n\n  exportRefs(){\n    console.log(\"export refs\");\n  }\n\n  search(){\n    console.log(\"search refs\");\n  }\n\n  getReferences(): void {\n    this.substanceService\n      .getReferences()\n      .then(refs =>{\n        this.refs = refs;\n      });\n  }\n\n  getAccess(): void {\n    /*this.cvService\n      .getAccess()\n      .then(access => this.access = access);*/\n\n    this.cvService\n      .getList(\"ACCESS_GROUP\")\n      .then(access => this.access = access);\n  }\n\n  getSourceTypes(): void {\n    this.cvService\n      .getList(\"DOCUMENT_TYPE\")\n      .then(sourcetype => this.sourceTypes = sourcetype);\n  }\n\n  saveRefListChanges($event, refs : Reference[]){\n    console.log(\"save ref list changes\");\n    console.log(refs);\n  }\n\n\n  /*_referenceViewTab: string = \"all\";\n  _filterQuery: string = \"\";\n\n\n  closeFunction: any = function(){};          //the specific function to call on close\n\n  refCtrl: FormControl;\n\n\n  allReferences: Reference[] = [];           //every reference currently present (master list) [full]\n  allRefsForData: Reference[] = [];          //those currently displayable\n  allRefsForDataFiltered: Reference[] = [];  //those currently displayed\n\n\n\n  data: any;                   //the piece of data whose references are being changed\n\n\n\n\n  get referenceViewTab(){\n    return this._referenceViewTab;\n  }\n\n  set referenceViewTab(value){\n    if(value!==this._referenceViewTab){\n      this._referenceViewTab = value;\n      //should trigger view change here\n      this.toggleReferences(this._referenceViewTab);\n    }\n\n  }\n\n  set filterQuery(q){\n    this._filterQuery=q;\n    this.filter(this._filterQuery);\n  }\n\n  get filterQuery(){\n    return this._filterQuery;\n  }\n\n\n  toggleReferences(value: string): any {\n    console.log(\"Clicked:\" + value);\n    if (value == \"all\") {\n      this.setRefsToAll();\n    } else if (value == \"last5\") {\n      this.setRefsFromAPIMatchingUser(\"admin\");\n    } else if(value == \"selected\") {\n      this.setRefsForData(this.data);\n    }\n  }\n\n  //Set what references will be displayed\n  setDisplayRefs(refs:Reference[]): void {\n    this.allRefsForData=refs;\n    this.allRefsForDataFiltered=refs;\n  }\n\n  //sets shortlist to be from global thing\n  setRefsFromAPIMatchingUser(user): void {\n    this.referenceService.getLastFiveReferences(user)\n      .then(refs=>{\n        _.forEach(refs,r=>r.index=r.index+this.allReferences.length);\n        this.setDisplayRefs(refs);\n      });\n  }\n\n\n\n  //sets the shortlist of checked references to be those\n  //found in the given data\n  setRefsForData(dat:ReferencedData): void {\n    let refs:Reference[] = _.chain(this.allReferences)\n      .filter(r=>(dat.references.indexOf(r.uuid) >= 0))\n      .value();\n\n    this.setDisplayRefs(refs);\n  }\n\n  //sets to all references\n  setRefsToAll(): void {\n    let refs : Reference[] = this.allReferences;\n    this.setDisplayRefs(refs);\n  }\n\n  filter(q: string){\n    if(q===\"\"){\n      this.allRefsForDataFiltered=this.allRefsForData;\n    }else{\n      this.allRefsForDataFiltered= _.chain(this.allRefsForData)\n        .filter(r=>(r.citation.indexOf(q)>-1 || (r.index+\"\")===q))\n        .value();\n    }\n  }\n\n  ngOnInit(): void {\n    this.toggleReferences(this._referenceViewTab);\n  }\n\n  isChecked(ref:Reference) : Boolean {\n    let has: Boolean = false;\n    if(this.data) {\n      has = this.data.hasReference(ref);\n    }\n    return has;\n  }\n\n  debug(): void{\n    console.log(this.allRefsForData);\n  }\n\n  close(): void{\n    this.closeFunction();\n  }\n\n  // Adds/removes the reference from the list in\n  // the data's references\n  toggle(toggleReference: Reference){\n    console.log(\"data:\");\n    console.log(this.data);\n    console.log(\"toggleref\");\n    console.log(toggleReference);\n    let n:ReferencedData = this.data;\n    let ref:Reference=toggleReference;\n\n    console.log(\"looking\");\n    if(this._referenceViewTab===\"last5\"){\n      var match=_.chain(this.allReferences)\n        .find(r=>r.getFlag(\"ouuid\")===ref.uuid)\n        .value();\n      if(!match){\n        let r2 : Reference=toggleReference.clone();\n        r2.generateNewUuid();\n        r2.setFlag(\"ouuid\",toggleReference.uuid);\n        r2.index=this.allReferences.length+1;\n        this.allReferences.push(r2);\n        ref=r2;\n      }else{\n        ref=match;\n      }\n    }\n\n    if(n) {\n      if (n.hasReference(ref)) {\n        n.removeReference(ref);\n      } else {\n        n.addReference(ref);\n      }\n    }\n\n    if(ref.isImportedOrphan()){\n      _.remove(this.allReferences, r=>r.uuid===ref.uuid);\n    }\n\n    console.log(\"toggled\");\n\n\n  }\n\n\n\n  //filterRefs(val: string) {\n  //  return val ? this.references.filter((r) => new RegExp(val, 'gi').test(r.citation)) : this.references;\n  //}\n\n  selectedOption: any;\n  openRefEditDialog(selectedReference:any) : void {\n    //if there is no reference, make one and add it\n    if(!selectedReference){\n      selectedReference = new Reference();\n      selectedReference.generateNewUuid();\n      selectedReference.setFlag(\"new\",true);\n      selectedReference.index=this.allReferences.length+1;\n      this.allReferences.push(selectedReference);\n    }\n    let refEditDialog = this.refDialog.open(ReferenceEditDialog, {height: '700px', width: '500px'});\n\n    refEditDialog.componentInstance.selectedReference = selectedReference;\n    refEditDialog.componentInstance.close = function(){refEditDialog.close();};\n    refEditDialog.afterClosed().subscribe(result => {\n      console.log(\"Done\");\n      if(selectedReference.getFlag(\"delete\")){\n        _.remove(this.allReferences, r=>r===selectedReference);\n      }else{\n        selectedReference.setFlag(\"new\",false);\n      }\n      this.selectedOption = result; //not sure what this does\n    });\n  }*/\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/references/reference-list.component.ts","import {Component, OnInit, Input} from \"@angular/core\";\nimport {Reference} from \"./reference\";\nimport {REFERENCES} from \"../mock-references\";\nimport {CVService} from \"../cv/cv.service\";\n\n@Component({\n  selector: 'reference-edit-dialog',\n  templateUrl: './reference-edit-dialog.html',\n  //styleUrls: ['../styles.css']\n  providers: [CVService]\n\n})\nexport class ReferenceEditDialog implements OnInit {\n\n  selectedReference: any;\n  sourceTypeList: any[];\n  documentSystemType: any[];\n  access: any[];\n  tags: any[];\n\n  close :any = function(){};\n\n  constructor(private cvService: CVService) { }\n\n  updateRef(ref: any, event): void {\n    event.preventDefault();\n\n    //TODO:should do something interesting here\n    //right now, we are always modifying things, no matter what\n\n    this.close();\n  }\n\n  deleteRef(selectedReference: any){\n    selectedReference.setFlag(\"delete\",true);\n    this.close();\n  }\n\n  getSourceType(): void {\n    this.cvService\n      .getList(\"DOCUMENT_TYPE\")\n      .then(st => this.sourceTypeList = st);\n  }\n\n\n  getDocumentSystemType(): void {\n    this.cvService\n      .getList(\"DOCUMENT_SYSTEM_TYPE\")\n      .then(st => this.documentSystemType = st);\n  }\n\n  getAccess(): void {\n    this.cvService\n      //.getList(\"ACCESS_GROUP\")\n      .getAccess()\n      .then(access => this.access = access);\n  }\n\n  getTags(): void {\n    this.cvService\n      .getList(\"DOCUMENT_COLLECTION\")\n      .then(tags => this.tags = tags);\n\n  }\n\n  ngOnInit(): void {\n    this.getSourceType();\n    this.getDocumentSystemType();\n    this.getAccess();\n    this.getTags();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/references/reference.component.ts","import {Injectable} from \"@angular/core\";\nimport {Data} from \"../data\";\nimport {Relationship} from \"./relationship\";\nimport * as _ from \"lodash\";\n\n\n@Injectable()\nexport class RelationshipService extends Data<RelationshipService> {\n\n  relationList: Relationship[] = [];\n\n /* getRelationships(uuid:string):Promise<Relationship[]> {\n    let me = this;\n\n    //should do something to pass the UUID somewhere\n    return new Promise((resolve, reject) => {\n      window[\"SubstanceFinder\"].get(uuid)\n        .andThen(s=>s.fetch(\"/relationships\"))\n        .andThen(relations=> {\n          return _.map(relations, r=> {\n            return (new Relationship().merge(r));\n          });\n        })\n        .get(relations=>resolve(relations));\n    });\n  }*/\n\n  saveRelationship(relation: Relationship) {\n    console.log(\"relation save service\");\n  }\n\n  deleteRelationship(relation: Relationship): Relationship[]{\n    console.log(\"delete relation service\");\n    var loc = this.relationList.indexOf(relation);\n    if(loc>-1){\n      this.relationList.splice(loc,1);\n    }\n    return this.relationList;\n  }\n\n  addRelationship(relation: Relationship): RelationshipService {\n    if(!relation.uuid){\n      relation.generateNewUuid();\n    }\n    this.relationList.push(relation);\n    return this;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/relationships/relationship.service.ts","import {ReferencedData} from \"../references/referencedData\";\nimport {RelationshipService} from \"./relationship.service\";\nimport {Amount} from \"../amount/amount.model\";\n\nexport class Relationship extends ReferencedData{\n  constructor(private relationService: RelationshipService) {\n    super();\n  }\n  relatedSubstance: any;\n  references: any[];\n  type: any[];\n  access: any[];\n  amount: Amount;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/relationships/relationship.ts","import { Component, OnInit } from '@angular/core';\nimport {CVService} from '../cv/cv.service';\nimport {SubstanceService} from \"./substanceedit.service\";\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'substanceedit',\n  templateUrl: './substanceedit.component.html',\n  styleUrls: ['./substanceedit.component.css'],\n  providers: [CVService, SubstanceService]\n})\nexport class SubstanceeditComponent implements OnInit {\n\n  tabs: any[];\n\n  uuid: string;\n\n  constructor(private cvService: CVService,\n  private substanceService: SubstanceService,\n  private route: ActivatedRoute) { }\n\n  getTabs(): void {\n    this.cvService.getTabs().then(tabs => {\n      this.tabs = tabs;\n    });\n  }\n\n  ngOnInit(): void {\n    this.uuid = this.route.snapshot.params['id'];\n    console.log(\"substance edit\");\n    console.log(this.uuid);\n    this.getTabs();\n    this.substanceService.setUuid(this.uuid);\n  }\n\n  save(): void {\n    this.substanceService.getFullJson()\n      .then(s=>{\n        console.log(s);\n\n\n\n\n          window[\"GGlob\"]\n            .SubstanceBuilder\n            .fromSimple(s)\n            .save()\n            .get(r=>{\n              console.log(r);\n            });\n        \n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/substanceedit/substanceedit.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-substancelist',\n  templateUrl: './substancelist.component.html',\n  styleUrls: ['./substancelist.component.css']\n})\nexport class SubstancelistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/substancelist/substancelist.component.ts","import {Component, OnInit} from '@angular/core';\nimport 'rxjs/add/operator/switchMap';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport {SubstanceService} from \"../substanceedit/substanceedit.service\";\n\n@Component({\n  selector: 'summary-view',\n  templateUrl: './summary.component.html',\n\n  providers: [SubstanceService]\n})\n\nexport class SummaryComponent {\n\n  recordUUID: string =\"\";\n  url: SafeResourceUrl;\n  urlStr: string;\n  fjson: any;\n\n  static creation: number=0;\n\n  icreate: number=0;\n\n\n  iframe: any=null;\n\n  loaded: boolean=false;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private sanitizer: DomSanitizer,\n    private substanceService: SubstanceService) {\n\n    console.log(\"Making a new Component\");\n    SummaryComponent.creation++;\n    this.icreate=SummaryComponent.creation;\n  }\n\n  refresh(): void{\n    let me:SummaryComponent  = this;\n    this.substanceService.getFullJson()\n      .then((s)=>{\n        console.log(\"Setting JSON in leg forms\");\n        me.setLegacyJson(JSON.parse(JSON.stringify(s)));\n      });\n    document.getElementById(\"hidden-things\").style.display=\"\";\n\n\n\n  }\n\n  detach(): void{\n\n    let me:SummaryComponent  = this;\n    console.log(\"Getting JSON from leg forms\");\n    this.substanceService.setFullJson(JSON.parse(JSON.stringify(me.getLegacyJson())));\n    document.getElementById(\"hidden-things\").style.display=\"none\";\n\n\n\n\n  }\n\n  ngOnInit(): void {\n\n    console.log(\"Making a new Component - init\");\n\n    let me : SummaryComponent =this;\n\n    this.iframe=document.getElementById(\"subFrame\");\n\n\n    this.iframe.onload=function(){\n      me.onLoad();\n    };\n\n    document.getElementById(\"sum-internal\").removeChild(this.iframe);\n    document.getElementById(\"hidden-things\").appendChild(this.iframe);\n\n    if(!this.loaded) {\n\n      //document.getElementById(\"hidden-things\").appendChild(this.iframe);\n      this.recordUUID = this.route.parent.snapshot.params['id'];\n      console.log(this.recordUUID);\n      this.urlStr = \"http://localhost:9000/ginas/app/substance/\" + this.recordUUID + \"/edit\";\n      console.log(this.urlStr);\n      //this.url = this.sanitizer.bypassSecurityTrustResourceUrl(this.urlStr);\n      this.iframe.src=this.urlStr;\n      this.loaded=true;\n    }else{\n      this.onLoad();\n    }\n\n\n  }\n\n  getLegacyJson() : any {\n    return this.iframe[\"contentWindow\"].getJson();\n  }\n\n  setLegacyJson(json: any) : any {\n    return this.iframe[\"contentWindow\"].setJson(json);\n  }\n\n\n  onLoad() {\n\n    this.substanceService.getFullJson()\n      .then(s=>{\n          this.setLegacyJson(s);\n      })\n\n    //read the json object\n   // document.getElementById('subFrame').contentWindow.setJson();\n  }\n\n\n\n  //Parent frame\n\n\n  //set\n  //  document.getElementById('targetFrame').contentWindow.setJson(obj);\n\n  //get\n  // obj = document.getElementById('targetFrame').contentWindow.getJson();\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/summaryview/summary.component.ts","/**\n * Created by sheilstk on 1/26/17.\n */\n\nimport { Injectable }             from '@angular/core';\nimport { Router, Resolve, RouterStateSnapshot,\n  ActivatedRouteSnapshot } from '@angular/router';\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class SubstanceDetailResolver implements Resolve<any> {\n  constructor(private router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    let id = route.params['id'];\n    console.log(id);\n   /* return this.ss.getSubstanceByID(id).map(substance => {\n      if (substance) {\n        return substance;\n      } else { // id not found\n        this.router.navigate(['/substances']);\n        return null;\n      }\n    }).first();*/\n    return ;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/utils/substance-detail-resolver.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 484;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 484\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import {Injectable} from \"@angular/core\";\nimport {ReferencedData} from \"../references/referencedData\";\nimport {Reference} from \"../references/reference\";\nimport {Amount} from \"../amount/amount.model\";\nimport * as _ from \"lodash\";\n\n\n@Injectable()\nexport class UtilService {\n\n  references: Reference[] = [];\n\n  changeAccess($event, mod:any): void {\n    if($event.value.length == 0){\n      mod.access = [\"public\"];\n    } else if($event.value.length > 1){\n      let index: number = $event.value.indexOf(\"public\");\n      if(index != -1){\n        mod.access.splice(index, 1);\n      }\n    }\n  }\n\n  showReferenceIndexes(data: ReferencedData){\n    if(data.references) {\n      return _.chain(this.references)\n        .filter(r=>(data.references.indexOf(r.uuid) >= 0))\n        .map(\"index\")\n        .value();\n    } else {\n      return \"\";\n    }\n  }\n\n  displayAmount(amt: Amount): string {\n    return \"amt amt\";\n    //return amt.type + \" \" + amt.units + \" \" +  amt.average + \"[\" + amt.low + \" to \" + amt.high + \"] (average)\" + \"[\" + amt.lowLimit + \" to \" + amt.highLimit + \"] (limits) \" + amt.nonNumericValue ;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/utils/utils.service.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes, RouteReuseStrategy } from '@angular/router';\nimport {NameListComponent} from \"./names/name-list.component\";\nimport {CodeListComponent} from \"./codes/code-list.component\";\nimport {AppComponent} from \"./app.component\";\nimport {RelationshipListComponent} from \"./relationships/relationship-list.component\";\nimport {NotesComponent} from \"./notes/notes.component\";\nimport {PropertiesListComponent} from \"./properties/properties-list.component\";\nimport {SummaryComponent} from \"./summaryview/summary.component\";\nimport {ReferenceListComponent} from \"./references/reference-list.component\";\nimport {SubstanceDetailResolver} from \"./utils/substance-detail-resolver.service\";\nimport {SubstancelistComponent} from \"./substancelist/substancelist.component\";\nimport {SubstanceeditComponent} from \"./substanceedit/substanceedit.component\";\nimport {CustomRouteReuseStrategy} from \"./route-reuse-strategy\";\n\n\nconst appRoutes: Routes = [\n  //{path: 'substances', component: SubstanceList },\n//  { path: 'substance/:id', component: AppComponent},\n/*  { path: ':id',\n   component: AppComponent },*/\n\n/*  { path: 'test/:id', component: NameListTestComponent,\n    resolve: {\n      substance: SubstanceDetailResolver\n    }},*/\n\n  {\n    path: 'substance/:id',\n    component: SubstanceeditComponent,\n    children: [\n      { path: 'names', component: NameListComponent},\n      { path: 'references', component: ReferenceListComponent },\n      { path: 'codes', component: CodeListComponent },\n     /* { path: 'relationships', component: RelationshipListComponent},\n      { path: 'notes', component: NotesComponent },\n      { path: 'properties', component: PropertiesListComponent },*/\n      { path: 'summary', component: SummaryComponent }\n    ]\n  },\n\n  { path: 'substances', component: SubstancelistComponent },\n\n  { path: '',\n    redirectTo: '/substances',\n    pathMatch: 'full'\n  },\n\n  //{ path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(appRoutes,\n    { useHash:true, enableTracing: true }) ],\n  exports: [ RouterModule ],\n  providers: [SubstanceDetailResolver,\n    {\n      provide: RouteReuseStrategy,\n      useClass: CustomRouteReuseStrategy\n    }\n  ]\n})\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import {Component} from '@angular/core';\nimport 'rxjs/add/operator/switchMap';\n\n\n\n@Component({\n  selector: 'gsrs-app',\n  template: `\n<h1 class=\"title\">G-SRS</h1>\n <nav>\n      <a routerLink=\"/browse\" routerLinkActive=\"active\">Browser</a>\n      <a routerLink=\"/search\" routerLinkActive=\"active\">Search</a>\n      <a routerLink=\"/admin\" routerLinkActive=\"active\">Admin</a>\n      <a routerLink=\"/login\" routerLinkActive=\"active\">Login</a>\n </nav>\n        <router-outlet></router-outlet>\n  `\n})\nexport class AppComponent  { }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n@Component({\n  selector: 'gsrs-app',\n  templateUrl: './app.component.html',\n  providers: [CVService]\n})\n\nexport class AppComponent implements OnInit {\n  names: Name[];\n  tabs: any[];\n\n  uuid: string;\n\n // recordUUID: string = \"00006eea-e2d2-4d79-99ff-30f17b3dd740\";\n\n  constructor(private cvService: CVService\n             ) {\n    //console.log(this.route);\n   /!* this.route.params.switchMap((params: Params) =>\n       // console.log(params)\n      this.uuid = params['id']\n    );*!/\n  }\n\n\n  getTabs(): void {\n    this.cvService.getTabs().then(tabs => {\n      this.tabs = tabs;\n    });\n  }\n\n  ngOnInit(): void {\n    this.getTabs();\n  }\n\n\n\n\n}\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterialModule } from '@angular/material';\nimport { AppRoutingModule }   from \"./app-routing.module\";\nimport {ActivatedRouteSnapshot} from '@angular/router';\n\n\nimport {AppComponent} from './app.component';\nimport 'hammerjs';\nimport {ReferenceListDialog} from \"./references/reference-list-dialog.component\";\nimport {ReferenceEditDialog} from \"./references/reference.component\";\nimport {NameEditComponent} from \"./names/name.component\";\nimport {NameListComponent} from \"./names/name-list.component\";\nimport {ReferenceListComponent} from \"./references/reference-list.component\";\nimport {CodeListComponent} from \"./codes/code-list.component\";\nimport {MultiSelectModule, OverlayPanelModule, DataTableModule, SharedModule,\n  TabViewModule, RadioButtonModule, CheckboxModule, DropdownModule, ToggleButtonModule, DataGridModule,\n  ConfirmDialogModule} from 'primeng/primeng';\nimport {RelationshipListComponent} from \"./relationships/relationship-list.component\";\nimport {NotesComponent} from \"./notes/notes.component\";\nimport {NotesEditComponent} from \"./notes/notes-edit.component\";\nimport {PropertiesListComponent} from \"./properties/properties-list.component\";\nimport {CodeEditComponent} from \"./codes/code-edit.component\";\nimport {ReferenceEdit} from \"./references/reference-edit-component\"\nimport {RelationshipEditComponent} from \"./relationships/relationship-edit.component\";\nimport {AmountComponent} from \"./amount/amount.component\";\nimport {PropertyEditComponent} from \"./properties/property-edit.component\";\nimport {ParameterComponent} from \"./parameters/parameter.component\";\nimport {SummaryComponent} from \"./summaryview/summary.component\";\nimport {SubstanceDetailResolver} from \"./utils/substance-detail-resolver.service\";\nimport {SubstancelistComponent} from './substancelist/substancelist.component';\nimport { SubstanceeditComponent } from './substanceedit/substanceedit.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent, ReferenceListDialog, ReferenceEditDialog, NameEditComponent, NameListComponent, ReferenceListComponent,\n    CodeListComponent, RelationshipListComponent, NotesComponent, PropertiesListComponent, CodeEditComponent, ReferenceEdit, RelationshipEditComponent, AmountComponent, NotesEditComponent,\n    PropertiesListComponent, PropertyEditComponent, ParameterComponent, SummaryComponent, SubstancelistComponent, SubstanceeditComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule, HttpModule, MaterialModule, ReactiveFormsModule, ToggleButtonModule,\n    MultiSelectModule, OverlayPanelModule, DataTableModule, SharedModule, TabViewModule, RadioButtonModule, CheckboxModule, DropdownModule, DataGridModule,\n    ConfirmDialogModule, AppRoutingModule ],\n  providers: [SubstanceDetailResolver],\n  bootstrap: [AppComponent],\n  entryComponents: [ReferenceListDialog, ReferenceEditDialog]\n})\n\n\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Component, Input, OnInit, ViewChild} from \"@angular/core\";\nimport {Code} from \"./code\";\nimport {CVService} from \"../cv/cv.service\";\nimport {CodeService} from \"./code.service\";\n\n@Component({\n  selector: 'code-edit',\n  templateUrl: './code-edit.html',\n  providers: [CVService, CodeService]\n\n})\nexport class CodeEditComponent implements OnInit {\n\n  @Input()\n  code: Code;\n\n  codeSystem: any[];\n  codeSystemType: any[];\n  access: any[];\n  codeType: any[];\n\n  constructor(private cvService: CVService,\n              private codeService: CodeService) { }\n\n  getCodeSystemType(): void {\n    this.cvService\n      .getList(\"CODE_SYSTEM_TYPE\")\n      .then(codeSystemType => this.codeSystemType = codeSystemType);\n  }\n\n  getCodeSystem(): void {\n    this.cvService\n      .getList(\"CODE_SYSTEM\")\n      .then(codeSystem => this.codeSystem = codeSystem);\n  }\n\n  getAccess(): void {\n    this.cvService\n      .getList(\"ACCESS_GROUP\")\n      .then(access => this.access = access);\n  }\n\n  getCodeType(): void {\n    this.cvService\n      .getList(\"CODE_TYPE\")\n      .then(type => this.codeType = type);\n  }\n\n  ngOnInit(): void {\n    this.getCodeSystem();\n    this.getAccess();\n    this.getCodeType();\n    this.getCodeSystemType();\n  }\n\n  saveCode(code: any): void {\n    console.log(code);\n    console.log(\"save\");\n    this.codeService.saveCode(code);\n  }\n\n  deleteCode(code: any): void {\n    console.log(\"delete\");\n    this.codeService.deleteCode(code);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/codes/code-edit.component.ts","import {Injectable} from \"@angular/core\";\nimport {Code} from \"./code\";\nimport * as _ from \"lodash\";\nimport {Data} from \"../data\";\n\n\n@Injectable()\nexport class CodeService extends Data<CodeService> {\n\n  codeList: Code[] = [];\n\n  getCodes(uuid:string):Promise<any[]> {\n    let me = this;\n\n    //should do something to pass the UUID somewhere\n    return new Promise((resolve, reject) => {\n      window[\"SubstanceFinder\"].get(uuid)\n        .andThen(s=>s.fetch(\"/codes\"))\n        .andThen(codes=> {\n          return _.map(codes, n=> {\n            return (new Code().merge(n));\n          });\n        })\n        .get(codes=>resolve(codes));\n    });\n  }\n\n  //TODO: a service to create a new name\n  saveCode(code: Code) {\n    console.log(\"name save service\");\n  }\n\n  deleteCode(code: Code): Code[]{\n    console.log(\"delete name service\");\n    var loc = this.codeList.indexOf(code);\n    if(loc>-1){\n      this.codeList.splice(loc,1);\n    }\n    return this.codeList;\n  }\n\n  addCode(code: Code): CodeService {\n    if(!code.uuid){\n      code.generateNewUuid();\n    }\n    this.codeList.push(code);\n    return this;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/codes/code.service.ts","import {Component, Input, OnInit, ViewChild} from \"@angular/core\";\nimport {Name} from \"./name\";\nimport {CVService} from \"../cv/cv.service\";\nimport { trigger, state, style, animate, transition } from '@angular/core';\nimport {NameService} from \"./name.service\";\nimport {MultiSelectModule} from 'primeng/primeng';\nimport {UtilService} from \"../utils/utils.service\";\n\n@Component({\n  selector: 'name-edit',\n  templateUrl: './name-edit.html',\n  providers: [CVService, NameService]\n\n})\nexport class NameEditComponent implements OnInit {\n\n  @Input()\n  name: Name;\n\n  nameTypes: any[];\n  access: any[];\n  languages: any[];\n  nameOrgs: any[];\n  nameJuris: any[];\n  domains: any[];\n\n  constructor(private cvService: CVService,\n  private nameService: NameService,\n  private utilService: UtilService) { }\n\n  @ViewChild('multiselect') multi: MultiSelectModule;\n\n  getNameTypes(): void {\n    this.cvService\n      .getList(\"NAME_TYPE\")\n      .then(nameTypes => this.nameTypes = nameTypes);\n  }\n\n  getAccess(): void {\n    this.cvService\n      .getList(\"ACCESS_GROUP\")\n      .then(access => this.access = access);\n  }\n\n  getLanguages(): void {\n    this.cvService\n      .getList(\"LANGUAGE\")\n      .then(lang => this.languages = lang);\n  }\n\n  getNameOrgs(): void {\n    this.cvService\n      .getList(\"NAME_ORG\")\n      .then(orgs => this.nameOrgs = orgs);\n  }\n\n  getDomains(): void {\n    this.cvService\n      .getList(\"NAME_DOMAIN\")\n      .then(domain => this.domains = domain);\n  }\n\n  getNameJurisdiction(): void {\n    this.cvService\n      .getList(\"JURISDICTION\")\n      .then(juris => this.nameJuris = juris);\n  }\n\n  ngOnInit(): void {\n    this.getNameTypes();\n    this.getAccess();\n    this.getDomains();\n    this.getLanguages();\n    this.getNameOrgs();\n    this.getNameJurisdiction();\n  }\n\n  changeDisplay(name: any, $event) : void {\n    console.log(\"change\");\n\n    console.log($event);\n    name.displayName = $event.checked;\n    if($event.checked){\n      name.preferred = true;\n    }\n    //TODO: iterate over all names and make sure atleast one name has displayName flag set to true\n  }\n\n  saveName(name: any): void {\n    console.log(name);\n    console.log(\"save\");\n    this.nameService.saveName(name);\n  }\n\n  deleteName(name: any): void {\n    console.log(\"delete\");\n    this.nameService.deleteName(name);\n  }\n\n  changeAccess($event, name: Name): void {\n    this.utilService.changeAccess($event, name);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/names/name.component.ts","import {Injectable} from \"@angular/core\";\nimport * as _ from \"lodash\";\nimport {Data} from \"../data\";\nimport {Notes} from \"./notes\";\n\n@Injectable()\nexport class NoteService extends Data<NoteService> {\n\n  noteList: Notes[] = [];\n\n   saveNote(note: Notes) {\n    console.log(\"note save service\");\n  }\n\n  deleteNote(note: Notes): Notes[]{\n    console.log(\"delete Notes service\");\n    var loc = this.noteList.indexOf(note);\n    if(loc>-1){\n      this.noteList.splice(loc,1);\n    }\n    return this.noteList;\n  }\n\n  addNote(note: Notes): NoteService {\n    if(!note.uuid){\n      note.generateNewUuid();\n    }\n    this.noteList.push(note);\n    return this;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notes/note.service.ts","import {Component, Input, OnInit, ViewChild} from \"@angular/core\";\nimport {Notes} from \"./notes\";\nimport {CVService} from \"../cv/cv.service\";\nimport {NoteService} from \"./note.service\";\n\n@Component({\n  selector: 'notes-edit',\n  templateUrl: './notes-edit.html',\n  providers: [CVService, NoteService]\n\n})\nexport class NotesEditComponent implements OnInit {\n\n  @Input()\n  notes: Notes;\n\n  access: any[];\n\n  constructor(private cvService: CVService,\n              private noteService: NoteService) { }\n\n  getAccess(): void {\n    this.cvService\n      .getAccess()\n      .then(access => this.access = access);\n\n   /* this.cvService\n      .getList(\"ACCESS_GROUP\")\n      .then(access => this.access = access);*/\n  }\n\n  ngOnInit(): void {\n    this.getAccess();\n  }\n\n  saveNote(note: any): void {\n    console.log(note);\n    console.log(\"save\");\n    this.noteService.saveNote(note);\n  }\n\n  deleteNote(note: any): void {\n    console.log(\"delete\");\n    this.noteService.deleteNote(note);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notes/notes-edit.component.ts","import {Component, OnInit} from \"@angular/core\";\nimport {CVService} from '../cv/cv.service';\nimport {Notes} from './notes';\nimport {UtilService} from \"../utils/utils.service\";\nimport {ConfirmationService} from 'primeng/primeng';\n\n@Component({\n  selector: 'notes',\n  templateUrl: './notes-list.html',\n  providers: [CVService, UtilService, ConfirmationService]\n})\n\nexport class NotesComponent implements OnInit {\n\n  access: any[];\n  newNotes: boolean;\n  nNote: Notes;\n  recordUUID: string = \"00006eea-e2d2-4d79-99ff-30f17b3dd740\";\n  notes: Notes[] = [];\n\n  constructor(private cvService: CVService,\n              private confirmationService: ConfirmationService,\n              private utilService: UtilService){}\n\n\n  ngOnInit(): void {\n    this.getAccess();\n  }\n\n  getAccess(): void {\n    this.cvService\n      .getAccess()\n      .then(access => this.access = access);\n\n /*   this.cvService\n      .getList(\"ACCESS_GROUP\")\n      .then(access => this.access = access);*/\n  }\n\n  saveNoteListChanges($event, notes : Notes[]){\n    console.log(\"save notes list changes\");\n    console.log(notes);\n  }\n\n  changeAccess($event, notes: Notes): void {\n    this.utilService.changeAccess($event, notes);\n  }\n\n  addNotes(){\n    console.log(\"Notes\");\n    this.newNotes = true;\n    this.nNote = new Notes();\n    this.nNote.access = ['protected'];\n    this.notes.push(this.nNote);\n  }\n\n  confirmDeleteNotes(notes: any) {\n    this.confirmationService.confirm({\n      message: 'Do you want to delete this notes?',\n      header: 'Delete Confirmation',\n      icon: 'fa fa-trash',\n      accept: () => {\n        this.deleteNotes(notes);\n      }\n    });\n  }\n\n  findSelectedNotesIndex(notes: Notes): number {\n    return this.notes.indexOf(notes);\n  }\n\n  deleteNotes(notes: Notes){\n    console.log(\"delete:\");\n    console.log(notes);\n    this.notes.splice(this.findSelectedNotesIndex(notes), 1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notes/notes.component.ts","import {Component, OnInit, Input} from \"@angular/core\";\nimport {CVService} from '../cv/cv.service';\nimport {Parameter} from './parameter';\n\n@Component({\n  selector: 'param',\n  templateUrl: './parameter.html',\n  providers: [CVService]\n})\n\nexport class ParameterComponent implements OnInit {\n\n\n  @Input()\n  param: Parameter;\n\n  paramType: any[];\n  newParam: boolean;\n  nParam: Parameter;\n  //params: Parameter[] = [];\n\n  constructor(private cvService: CVService){}\n\n\n  ngOnInit(): void {\n    this.getParamType();\n  }\n\n  getParamType(): void {\n    this.cvService\n      .getParameterType()\n      .then(pt => this.paramType = pt);\n  }\n\n  addParam(){\n    console.log(\"param\");\n   /* this.newParam = true;\n    this.nParam = new Parameter();\n    this.params.push(this.nParam);*/\n  }\n\n  /*findSelectedParamIndex(param: Parameter): number {\n    return this.params.indexOf(param);\n  }*/\n\n  deleteParam(param: Parameter){\n    console.log(\"delete:\");\n    console.log(param);\n    //this.params.splice(this.findSelectedParamIndex(param), 1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/parameters/parameter.component.ts","import {Amount} from \"../amount/amount.model\";\nimport {Data} from \"../data\";\n\nexport class Parameter extends Data<Parameter> {\n  name: string;\n  type: string;\n  value: Amount;\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/parameters/parameter.ts","import {Component, OnInit} from \"@angular/core\";\nimport {CVService} from \"../cv/cv.service\";\nimport {UtilService} from \"../utils/utils.service\";\nimport {ConfirmationService} from \"primeng/primeng\";\nimport {Property} from \"./property.model\";\nimport {PropertyService} from \"./property.service\";\nimport {ReferencedData} from \"../references/referencedData\";\nimport {MdDialog} from \"@angular/material\";\nimport {ReferenceListDialog} from \"../references/reference-list-dialog.component\";\nimport * as _ from \"lodash\";\nimport {Amount} from \"../amount/amount.model\";\n\n@Component({\n  selector: 'properties-list',\n  templateUrl: './properties-list.html',\n  providers: [CVService, ConfirmationService, UtilService, PropertyService]\n\n})\nexport class PropertiesListComponent implements OnInit {\n\n  propName: any[];\n  propType: any[];\n  access: any[];\n  newProperty: boolean;\n  nProperty: Property = new Property(this.propertyService);\n  properties: Property[] = [];\n  references: any[];\n  recordUUID: string = \"00006eea-e2d2-4d79-99ff-30f17b3dd740\";\n  showRSStruct:boolean = false;\n\n  constructor(private cvService: CVService,\n              private confirmationService: ConfirmationService,\n              private utilService: UtilService,\n              private propertyService: PropertyService,\n              public dialog: MdDialog){}\n\n\n  ngOnInit(): void {\n    this.getAccess();\n    this.getPropertyName();\n    this.getPropertyType();\n  }\n\n  getAccess(): void {\n    this.cvService\n      .getList(\"ACCESS_GROUP\")\n      .then(access => this.access = access);\n  }\n\n  getPropertyName(): void {\n    this.cvService\n      .getList(\"PROPERTY_NAME\")\n      .then(pn => this.propName = pn);\n  }\n\n  getPropertyType(): void {\n    this.cvService\n      .getList(\"PROPERTY_TYPE\")\n      .then(pt => this.propType = pt);\n  }\n\n  public showReferenceIndexes(data: ReferencedData): string {\n    if(data.references) {\n      return _.chain(this.references)\n        .filter(r=>(data.references.indexOf(r.uuid) >= 0))\n        .map(\"index\")\n        .value();\n    } else {\n      return \"\";\n    }\n  }\n\n  openRefListDialog(property: any) : void {\n    console.log(\"property list\");\n    let dialogRef = this.dialog.open(ReferenceListDialog, {height: '550px', width: '400px'});\n\n    //TODO: should have a cleaner initialization process\n    dialogRef.componentInstance.allReferences = this.references;\n    console.log(property);\n    dialogRef.componentInstance.data = property;\n\n\n    dialogRef.componentInstance.closeFunction=function(){\n      dialogRef.close();\n    };\n  }\n\n\n\n  savePropertyListChanges($event, properties : Property[]) {\n    console.log(\"save properties list changes\");\n    console.log(properties);\n  }\n\n  addProperty(){\n    this.newProperty = true;\n    this.nProperty = new Property(this.propertyService);\n    this.nProperty.access = ['protected'];\n    this.nProperty.references = [];\n    this.properties.push(this.nProperty);\n  }\n\n  findSelectedPropertyIndex(property: Property): number {\n    return this.properties.indexOf(property);\n  }\n\n  deleteProperty(property: Property){\n    console.log(\"delete:\");\n    console.log(property);\n    this.properties.splice(this.findSelectedPropertyIndex(property), 1);\n  }\n\n  confirmDeleteProperty(property: Property) {\n    this.confirmationService.confirm({\n      message: 'Do you want to delete this Property?',\n      header: 'Delete Confirmation',\n      icon: 'fa fa-trash',\n      accept: () => {\n        console.log(\"confirm delete Property\");\n        this.deleteProperty(property);\n      }\n    });\n  }\n\n  changeAccess($event, property: Property): void {\n    this.utilService.changeAccess($event, property);\n  }\n\n  showStructure(): void {\n    console.log(\"showStructure\");\n    this.showRSStruct = !this.showRSStruct;\n    console.log(this.showRSStruct);\n  }\n\n  public showAmounts(amount:Amount): string {\n    return this.utilService.displayAmount(amount);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/properties/properties-list.component.ts","import {Component, Input, OnInit, ViewChild} from \"@angular/core\";\nimport {CVService} from \"../cv/cv.service\";\nimport {PropertyService} from \"./property.service\";\nimport {Property} from \"./property.model\";\nimport {UtilService} from \"../utils/utils.service\";\nimport {Parameter} from \"../parameters/parameter\";\nimport {Amount} from \"../amount/amount.model\";\n\n\n@Component({\n  selector: 'property-edit',\n  templateUrl: './property-edit.html',\n  providers: [CVService, PropertyService]\n\n})\nexport class PropertyEditComponent implements OnInit {\n\n  @Input()\n  property:Property;\n\n  propName:any[];\n  propType:any[];\n  access:any[];\n  amountDisplay:boolean = false;\n  parameters: Parameter[] = [];\n\n  constructor(private cvService:CVService,\n              private propertyService:PropertyService,\n              private utilService: UtilService) {\n  }\n\n\n  getAccess(): void {\n    this.cvService\n    // .getList(\"ACCESS_GROUP\")\n      .getAccess()\n      .then(access => this.access = access);\n  }\n\n  getPropertyName(): void {\n    this.cvService\n      .getList(\"PROPERTY_NAME\")\n      .then(pn => this.propName = pn);\n  }\n\n  getPropertyType(): void {\n    this.cvService\n      .getList(\"PROPERTY_TYPE\")\n      .then(pt => this.propType = pt);\n  }\n\n\n\n  ngOnInit(): void {\n    this.getAccess();\n    this.getPropertyName();\n    this.getPropertyType();\n  }\n\n  saveProperty(property: any): void {\n    console.log(property);\n    console.log(\"save\");\n    this.propertyService.saveProperty(property);\n  }\n\n  deleteProperty(property: any): void {\n    console.log(\"delete\");\n    this.propertyService.deleteProperty(property);\n  }\n\n  changeAccess($event, property: Property): void {\n    this.utilService.changeAccess($event, property);\n  }\n\n  public showAmounts(amount:Amount): string {\n    return this.utilService.displayAmount(amount);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/properties/property-edit.component.ts","import {Component, OnInit, Input} from \"@angular/core\";\nimport {Reference} from \"./reference\";\nimport {REFERENCES} from \"../mock-references\";\nimport {CVService} from \"../cv/cv.service\";\n\n@Component({\n  selector: 'reference-edit',\n  templateUrl: './reference-edit.html',\n  //styleUrls: ['../styles.css']\n  providers: [CVService]\n\n})\nexport class ReferenceEdit implements OnInit {\n\n  @Input()\n  ref: Reference;\n\n  sourceTypeList: any[];\n  documentSystemType: any[];\n  access: any[];\n  tags: any[];\n\n  close :any = function(){};\n\n  constructor(private cvService: CVService) { }\n\n  updateRef(ref: any, event): void {\n    event.preventDefault();\n\n    //TODO:should do something interesting here\n    //right now, we are always modifying things, no matter what\n\n    this.close();\n  }\n\n  deleteRef(selectedReference: any){\n    selectedReference.setFlag(\"delete\",true);\n    this.close();\n  }\n\n  getSourceType(): void {\n    this.cvService\n      .getList(\"DOCUMENT_TYPE\")\n      .then(st => this.sourceTypeList = st);\n  }\n\n  getDocumentSystemType(): void {\n    this.cvService\n      .getList(\"DOCUMENT_SYSTEM_TYPE\")\n      .then(st => this.documentSystemType = st);\n  }\n\n  getAccess(): void {\n    this.cvService\n      //.getList(\"ACCESS_GROUP\")\n      .getAccess()\n      .then(access => this.access = access);\n  }\n\n  getTags(): void {\n    this.cvService\n      .getList(\"DOCUMENT_COLLECTION\")\n      .then(tags => this.tags = tags);\n\n  }\n\n  ngOnInit(): void {\n    this.getSourceType();\n    this.getDocumentSystemType();\n    this.getAccess();\n    this.getTags();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/references/reference-edit-component.ts","import {Component, Input, OnInit, ViewChild} from \"@angular/core\";\nimport {CVService} from \"../cv/cv.service\";\nimport {RelationshipService} from \"./relationship.service\";\nimport {Relationship} from \"./relationship\";\nimport {UtilService} from \"../utils/utils.service\";\nimport {Amount} from \"../amount/amount.model\";\nimport {AmountComponent} from \"../amount/amount.component\";\n\n\n@Component({\n  selector: 'relation-edit',\n  templateUrl: './relationship-edit.html',\n  providers: [CVService, RelationshipService]\n})\nexport class RelationshipEditComponent implements OnInit {\n\n  @Input()\n  relationship:Relationship;\n\n\n\n  qualification:any[];\n  relationshipTypes:any[];\n  access:any[];\n  interactionType:any[];\n  amountDisplay:boolean = false;\n\n  @ViewChild(AmountComponent)\n  amount: Amount = new Amount();\n\n\n\n  constructor(private cvService:CVService,\n              private relationshipService:RelationshipService,\n              private utilService: UtilService) {\n  }\n\n\n  getAccess(): void {\n    this.cvService\n      .getAccess()\n      .then(access => this.access = access);\n  }\n\n  getRelationshipTypes(): void {\n    this.cvService\n      .getList(\"RELATIONSHIP_TYPE\")\n      .then(relTypes => this.relationshipTypes = relTypes);\n  }\n\n  getQualification(): void {\n    this.cvService\n      .getList(\"QUALIFICATION\")\n      .then(qual => this.qualification = qual);\n  }\n\n  getIntercationType(): void {\n    this.cvService\n      .getList(\"INTERACTION_TYPE\")\n      .then(inTypes => this.interactionType = inTypes);\n  }\n\n  ngOnInit(): void {\n    this.getAccess();\n    this.getRelationshipTypes();\n    this.getQualification();\n    this.getIntercationType();\n  }\n\n  saveRelationship(relation: any): void {\n    console.log(relation);\n    console.log(\"save\");\n    this.relationshipService.saveRelationship(relation);\n  }\n\n  deleteRelationship(relation: any): void {\n    console.log(\"delete\");\n    this.relationshipService.deleteRelationship(relation);\n  }\n\n  changeAccess($event, relation: Relationship): void {\n    this.utilService.changeAccess($event, relation);\n  }\n\n  public showAmounts(amount:Amount): string {\n    return this.utilService.displayAmount(amount);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/relationships/relationship-edit.component.ts","import {Component, OnInit} from '@angular/core';\nimport {Relationship} from \"./relationship\";\nimport {RelationshipService} from \"./relationship.service\"\nimport {Reference} from \"../references/reference\";\nimport {ReferenceListService} from \"../references/reference-list.service\";\nimport {CVService} from \"../cv/cv.service\";\n\nimport {MdDialog} from \"@angular/material\";\nimport {ReferenceListDialog} from \"../references/reference-list-dialog.component\";\nimport {ReferencedData} from \"../references/referencedData\";\nimport {ConfirmationService} from 'primeng/primeng';\nimport {UtilService} from \"../utils/utils.service\";\nimport {Amount} from \"../amount/amount.model\";\n\nimport * as _ from \"lodash\";\n\n@Component({\n  selector: 'relationship-list',\n  templateUrl: './relationship-list.html',\n  providers: [ConfirmationService, RelationshipService, ReferenceListService, UtilService, CVService]\n\n})\nexport class RelationshipListComponent implements OnInit {\n\n  relations: Relationship[] = [];\n  references: Reference[] = [];\n  newRelation: boolean =false;\n  showRSStruct: boolean = false;\n  nRelation: Relationship = new Relationship(this.relationService);\n  access: any[];\n  recordUUID: string = \"00006eea-e2d2-4d79-99ff-30f17b3dd740\";\n  relationshipTypes: any[];\n\n  constructor(private relationService: RelationshipService,\n              private referenceListService: ReferenceListService,\n              private cvService: CVService,\n              public dialog: MdDialog,\n              private confirmationService: ConfirmationService,\n              private utilService: UtilService) { }\n\n  getAccess(): void {\n    this.cvService\n      .getList(\"ACCESS_GROUP\")\n      .then(access => this.access = access);\n  }\n\n  getRelationshipTypes(): void {\n    this.cvService\n      .getList(\"RELATIONSHIP_TYPE\")\n      .then(relTypes => this.relationshipTypes = relTypes);\n  }\n\n  ngOnInit(): void {\n    this.getReferences();\n    this.getAccess();\n    this.getRelationshipTypes();\n  }\n\n  getReferences(): void {\n    this.referenceListService\n      .getAllReferences(this.recordUUID)\n      .then(refs =>{\n        this.references = refs;\n      });\n  }\n\n  public showReferenceIndexes(data: ReferencedData): string {\n    if(data.references) {\n      return _.chain(this.references)\n        .filter(r=>(data.references.indexOf(r.uuid) >= 0))\n        .map(\"index\")\n        .value();\n    } else {\n      return \"\";\n    }\n  }\n\n\n  openRefListDialog(relation: any) : void {\n    console.log(\"relationship list\");\n    let dialogRef = this.dialog.open(ReferenceListDialog, {height: '550px', width: '400px'});\n\n    //TODO: should have a cleaner initialization process\n    dialogRef.componentInstance.allReferences = this.references;\n    console.log(relation);\n    dialogRef.componentInstance.data = relation;\n\n\n    dialogRef.componentInstance.closeFunction=function(){\n      dialogRef.close();\n    };\n  }\n\n\n\n  saveRelationListChanges($event, relations : Relationship[]) {\n    console.log(\"save relationship list changes\");\n    console.log(relations);\n  }\n\n  addRelationship(){\n    this.newRelation = true;\n    this.nRelation = new Relationship(this.relationService);\n    this.nRelation.access = ['protected'];\n    this.nRelation.references = [];\n    this.relations.push(this.nRelation);\n  }\n\n  findSelectedRelationIndex(relation: Relationship): number {\n    return this.relations.indexOf(relation);\n  }\n\n  deleteRelation(relation: Relationship){\n    console.log(\"delete:\");\n    console.log(relation);\n    this.relations.splice(this.findSelectedRelationIndex(relation), 1);\n  }\n\n  confirmDeleteRelation(relation: Relationship) {\n    this.confirmationService.confirm({\n      message: 'Do you want to delete this relationship?',\n      header: 'Delete Confirmation',\n      icon: 'fa fa-trash',\n      accept: () => {\n        console.log(\"confirm delete relation\");\n        this.deleteRelation(relation);\n      }\n    });\n  }\n\n  changeAccess($event, relation: Relationship): void {\n    this.utilService.changeAccess($event, relation);\n  }\n\n  showStructure(): void {\n    console.log(\"showStructure\");\n    this.showRSStruct = !this.showRSStruct;\n    console.log(this.showRSStruct);\n  }\n\n  public showAmounts(amount:Amount): string {\n    return this.utilService.displayAmount(amount);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/relationships/relationship-list.component.ts","import {ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy, DefaultUrlSerializer} from '@angular/router';\n\nexport class CustomRouteReuseStrategy implements RouteReuseStrategy {\n\n  handlers: {[key: string]: DetachedRouteHandle} = {};\n\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    console.debug('CustomReuseStrategy:shouldDetach', route);\n    return true;\n  }\n\n  store(route: ActivatedRouteSnapshot, det: DetachedRouteHandle): void {\n    console.debug('CustomReuseStrategy:store', route, det);\n    this.handlers[route.routeConfig.path] = det;\n\n    if(det) {\n      if (det[\"componentRef\"]._component.detach) {\n        det[\"componentRef\"]._component.detach();\n      }\n    }\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    console.debug('CustomReuseStrategy:shouldAttach', route);\n    return !!route.routeConfig && !!this.handlers[route.routeConfig.path];\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n    console.debug('CustomReuseStrategy:retrieve', route);\n    if (!route.routeConfig) return null;\n    let det: DetachedRouteHandle = this.handlers[route.routeConfig.path];\n\n    if(det) {\n      if (det[\"componentRef\"]._component.refresh) {\n        det[\"componentRef\"]._component.refresh();\n      }\n    }\n\n    return det;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    console.debug('CustomReuseStrategy:shouldReuseRoute', future, curr);\n    return future.routeConfig === curr.routeConfig;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/route-reuse-strategy.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/substanceedit/substanceedit.component.css\n// module id = 716\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/substancelist/substancelist.component.css\n// module id = 717\n// module chunks = 1","module.exports = \"<br/>\\n<div>\\n<form class=\\\"amount\\\" #amountEditForm=\\\"ngForm\\\">\\n\\n   <!--<div>\\n      <md-select placeholder=\\\"Amount Type\\\" name=\\\"amountType\\\" [(ngModel)]=\\\"amount.type\\\" [style.width]=\\\"'80%'\\\" >\\n        <md-option *ngFor=\\\"let at of amountType\\\" [value]=\\\"at.value\\\">{{ at.label }}</md-option>\\n      </md-select></div>\\n\\n   <div>\\n      <input mdInput name=\\\"average\\\" value=\\\"{{amount.average}}\\\" [(ngModel)]=\\\"amount.average\\\" placeholder=\\\"Average\\\">\\n    </div>\\n\\n   <div>\\n      <input mdInput name=\\\"low\\\" value=\\\"{{amount.low}}\\\" [(ngModel)]=\\\"amount.low\\\" placeholder=\\\"Low\\\">\\n      <input mdInput name=\\\"high\\\" value=\\\"{{amount.high}}\\\" [(ngModel)]=\\\"amount.high\\\" placeholder=\\\"High\\\">\\n    </div>\\n\\n    <div>\\n      <input mdInput name=\\\"lowLimit\\\" value=\\\"{{amount.lowLimit}}\\\" [(ngModel)]=\\\"amount.lowLimit\\\" placeholder=\\\"Low Limit\\\">\\n      <input mdInput name=\\\"highLimit\\\" value=\\\"{{amount.highLimit}}\\\" [(ngModel)]=\\\"amount.highLimit\\\" placeholder=\\\"High Limit\\\">\\n   </div>\\n\\n    <div>\\n      <md-select placeholder=\\\"Amount Units\\\" name=\\\"amountUnits\\\" [(ngModel)]=\\\"amount.units\\\" [style.width]=\\\"'80%'\\\" >\\n        <md-option *ngFor=\\\"let au of amountUnits\\\" [value]=\\\"au.value\\\">{{ au.label }}</md-option>\\n      </md-select>\\n    </div>>\\n\\n    <div>\\n      <input mdInput name=\\\"nonNumericValue\\\" value=\\\"{{amount.nonNumericValue}}\\\" [(ngModel)]=\\\"amount.nonNumericValue\\\" placeholder=\\\"Non Numeric Value\\\">\\n</div>-->\\n\\n   <div>\\n     <md-select placeholder=\\\"Amount Type\\\" name=\\\"amountType\\\" [style.width]=\\\"'18%'\\\">\\n       <md-option *ngFor=\\\"let at of amountType\\\" [value]=\\\"at.value\\\">{{ at.label }}</md-option>\\n     </md-select>\\n\\n      <input mdInput name=\\\"average\\\" placeholder=\\\"Average\\\" [style.width]=\\\"'10%'\\\">\\n\\n      <input mdInput name=\\\"low\\\" placeholder=\\\"Low\\\" [style.width]=\\\"'10%'\\\">\\n\\n      <input mdInput name=\\\"high\\\" placeholder=\\\"High\\\" [style.width]=\\\"'10%'\\\">\\n\\n     <input mdInput name=\\\"lowLimit\\\"  placeholder=\\\"Low Limit\\\" [style.width]=\\\"'10%'\\\">\\n     <input mdInput name=\\\"highLimit\\\" placeholder=\\\"High Limit\\\" [style.width]=\\\"'10%'\\\">\\n\\n     <md-select placeholder=\\\"Amount Units\\\" name=\\\"amountUnits\\\" [style.width]=\\\"'8%'\\\">\\n       <md-option *ngFor=\\\"let au of amountUnits\\\" [value]=\\\"au.value\\\">{{ au.label }}</md-option>\\n     </md-select>\\n\\n      <input mdInput name=\\\"nonNumericValue\\\" placeholder=\\\"Non Numeric Value\\\" [style.width]=\\\"'10%'\\\">\\n\\n     <button type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"saveAmount(this)\\\" label=\\\"Ok\\\"></button>\\n\\n     <button type=\\\"button\\\" pButton icon=\\\"fa-times\\\" (click)=\\\"clearAmount(this)\\\" label=\\\"Clear\\\"></button>\\n  </div>\\n</form></div>\\n<br/>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/amount/amount.html\n// module id = 782\n// module chunks = 1","module.exports = \"<br/>\\n<form class=\\\"code-edit-form\\\" #codeEditForm=\\\"ngForm\\\">\\n  <md-grid-list cols=\\\"10\\\" gutterSize=\\\"2px\\\" rowHeight=\\\"70px\\\" [style.background]=\\\"'#EBF5FC'\\\">\\n\\n    <md-grid-tile [colspan]=2 [rowspan]=1>\\n      <md-select placeholder=\\\"Code System\\\" name=\\\"codeSystem\\\" [(ngModel)]=\\\"code.codeSystem\\\" [style.width]=\\\"'80%'\\\" >\\n        <md-option *ngFor=\\\"let cs of codeSystem\\\" [value]=\\\"cs.value\\\">{{ cs.label }}</md-option>\\n      </md-select></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n\\n    <md-grid-tile [colspan]=3 [rowspan]=1>\\n    <md-select placeholder=\\\"Code System Type\\\" name=\\\"type\\\" [(ngModel)]=\\\"code.codeSystemType\\\" [style.width]=\\\"'80%'\\\" >\\n      <md-option *ngFor=\\\"let type of codeSystemType\\\" [value]=\\\"type.value\\\">{{ type.label }}</md-option>\\n    </md-select></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n\\n    <md-grid-tile [colspan]=2 [rowspan]=1>\\n      <p-multiSelect [options]=\\\"access\\\" name=\\\"access\\\" [(ngModel)]=\\\"code.access\\\"\\n                     defaultLabel=\\\"Access\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\" appendTo=\\\"body\\\">\\n      </p-multiSelect>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n\\n    <md-grid-tile [colspan]=1 [rowspan]=1> <b>Code</b></md-grid-tile>\\n    <md-grid-tile [colspan]=3 [rowspan]=1>\\n      <md-input-container class=\\\"ref-full-width\\\">\\n        <input mdInput name=\\\"code\\\" value=\\\"{{code.code}}\\\" [(ngModel)]=\\\"code.code\\\">\\n      </md-input-container></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1> <b>Code URL</b></md-grid-tile>\\n    <md-grid-tile [colspan]=4 [rowspan]=1>\\n      <md-input-container class=\\\"ref-full-width\\\">\\n        <input mdInput name=\\\"url\\\" value=\\\"{{code.url}}\\\" [(ngModel)]=\\\"code.url\\\">\\n      </md-input-container></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n\\n    <md-grid-tile [colspan]=1 [rowspan]=1> <b>Comments</b></md-grid-tile>\\n    <md-grid-tile [colspan]=8 [rowspan]=1>\\n    <md-input-container class=\\\"ref-full-width\\\">\\n      <textarea mdInput name=\\\"comments\\\" value=\\\"{{code.comments}}\\\" [(ngModel)]=\\\"code.comments\\\"></textarea>\\n    </md-input-container></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n\\n    <md-grid-tile [colspan]=1 [rowspan]=1> <b>Code Text</b></md-grid-tile>\\n    <md-grid-tile [colspan]=8 [rowspan]=1>\\n      <md-input-container class=\\\"ref-full-width\\\">\\n        <textarea mdInput name=\\\"codeText\\\" value=\\\"{{code.codeText}}\\\" [(ngModel)]=\\\"code.codeText\\\"></textarea>\\n      </md-input-container></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n\\n    <md-grid-tile [colspan]=10 [rowspan]=1 *ngIf=\\\"code.uuid\\\">\\n      Created by <code>&nbsp;{{code.createdBy}}&nbsp;</code> on <code>&nbsp; {{code.created | date: 'MM/dd/yyyy'}}&nbsp;</code> , Edited by <code>&nbsp;{{code.lastEditedBy}}&nbsp;</code> on <code>&nbsp;{{code.lastEdited | date: 'MM/dd/yyyy'}}&nbsp;</code>\\n    </md-grid-tile>\\n\\n    <md-grid-tile [colspan]=7 [rowspan]=1></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <button type=\\\"button\\\" (click)=\\\"deleteCode(code)\\\" pButton icon=\\\"fa-trash\\\" label=\\\"Delete\\\"></button>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <button type=\\\"button\\\" (click)=\\\"saveCode(code)\\\" pButton icon=\\\"fa-check\\\" label=\\\"Save\\\"></button>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n  </md-grid-list>\\n\\n</form><br/>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/codes/code-edit.html\n// module id = 783\n// module chunks = 1","module.exports = \"<p-dataTable [value]=\\\"codes\\\" expandableRows=\\\"true\\\" sizableColumns=\\\"true\\\"\\n             [responsive]=\\\"true\\\" [editable]=\\\"true\\\">\\n  <p-header>\\n    <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\n     <button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" style=\\\"float:left\\\" (click)=\\\"addCode()\\\" label=\\\"Add Code\\\"></button>\\n      <!--   <button type=\\\"button\\\" pButton icon=\\\"fa-file-o\\\" style=\\\"float:left\\\" *ngIf=\\\"codes.length > 0\\\" (click)=\\\"exportCodes()\\\" label=\\\"Export Codes\\\"></button>\\n        <button type=\\\"button\\\" pButton icon=\\\"fa-search\\\" style=\\\"float:right\\\" *ngIf=\\\"codes.length > 0\\\" (click)=\\\"search()\\\" label=\\\"Search\\\"></button>-->\\n    </div>\\n  </p-header>\\n\\n  <p-column [style]=\\\"{'width':'38px'}\\\" expander=\\\"true\\\" styleClass=\\\"col-icon\\\">\\n    <template pTemplate=\\\"header\\\">Edit</template>\\n  </p-column>\\n\\n  <p-column [style]=\\\"{'width':'80px'}\\\">\\n    <template pTemplate=\\\"header\\\">Delete</template>\\n    <template pTemplate=\\\"body\\\" let-code=\\\"rowData\\\">\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-trash\\\" (click)=\\\"confirmDeleteCode(this)\\\"></button>\\n    </template>\\n  </p-column>\\n\\n  <p-column field=\\\"codeSystem\\\" header=\\\"Code System\\\" [editable]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n    <template let-col let-code=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n      <p-dropdown [(ngModel)]=\\\"code[col.field]\\\" [options]=\\\"codeSystem\\\" [autoWidth]=\\\"false\\\" [style]=\\\"{'width':'100%'}\\\" required=\\\"true\\\"></p-dropdown>\\n    </template>\\n  </p-column>\\n\\n  <p-column field=\\\"code\\\" header=\\\"Code\\\"  [style]=\\\"{'width':'300px'}\\\" [editable]=\\\"true\\\"></p-column>\\n  <p-column field=\\\"url\\\" header=\\\"Code URL\\\"  [style]=\\\"{'width':'300px'}\\\" [editable]=\\\"true\\\"></p-column>\\n  <p-column field=\\\"access\\\" header=\\\"Access\\\" [editable]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n    <template let-col let-code=\\\"rowData\\\" pTemplate=\\\"editor\\\">\\n      <p-multiSelect [options]=\\\"access\\\" name=\\\"access\\\" [(ngModel)]=\\\"code[col.field]\\\"\\n                     defaultLabel=\\\"Access\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\"\\n                     (onChange) =\\\"changeAccess($event, name)\\\"></p-multiSelect>\\n    </template>\\n  </p-column>\\n\\n  <p-column>\\n    <template pTemplate=\\\"header\\\">References</template>\\n    <template let-code=\\\"rowData\\\"  pTemplate=\\\"body\\\">\\n      <div *ngIf=\\\"!code.references || code.references.length == 0\\\" (click)=\\\"openRefListDialog(code)\\\">Click</div>\\n      <div (click)=\\\"openRefListDialog(code)\\\" *ngIf=\\\"code.references\\\">\\n        {{showReferenceIndexes(code)}}\\n      </div>\\n    </template>\\n\\n  </p-column>\\n\\n  <template let-code pTemplate=\\\"rowexpansion\\\">\\n    <div>\\n      <code-edit [code]=\\\"code\\\"></code-edit>\\n    </div>\\n  </template>\\n\\n</p-dataTable>\\n<p-confirmDialog width=\\\"200px\\\"></p-confirmDialog>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/codes/code-list.html\n// module id = 784\n// module chunks = 1","module.exports = \"<br/>\\n<form class=\\\"name-edit-form\\\" #nameEditForm=\\\"ngForm\\\">\\n\\n <md-grid-list cols=\\\"8\\\" gutterSize=\\\"2px\\\" rowHeight=\\\"70px\\\" [style.background]=\\\"'#EBF5FC'\\\">\\n\\n    <md-grid-tile [colspan]=1 [rowspan]=1> <b>Name</b></md-grid-tile>\\n    <md-grid-tile [colspan]=6 [rowspan]=1>\\n      <md-input-container class=\\\"ref-full-width\\\">\\n        <input mdInput name=\\\"name\\\" value=\\\"{{name.name}}\\\" [(ngModel)]=\\\"name.name\\\" placeholder=\\\"name ...\\\" required>\\n      </md-input-container>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n\\n    <md-grid-tile [colspan]=2 [rowspan]=1>\\n     <md-select placeholder=\\\"Name Type\\\" name=\\\"type\\\" [(ngModel)]=\\\"name.type\\\" [style.width]=\\\"'80%'\\\">\\n        <md-option *ngFor=\\\"let type of nameTypes\\\" [value]=\\\"type.value\\\" overlayVisible=\\\"true\\\">{{ type.label }}</md-option>\\n      </md-select>\\n    </md-grid-tile>\\n   <md-grid-tile [colspan]=2 [rowspan]=1>\\n     <!--<p-toggleButton [(ngModel)]=\\\"name.displayName\\\" name=\\\"DisplayName\\\" onLabel=\\\"Preferred Term\\\" onIcon=\\\"fa-check-square\\\"\\n                     offLabel=\\\"Not Preferred\\\" offIcon=\\\"fa-minus-square\\\" (onChange)=\\\"changeDisplay(name, $event)\\\"\\n                     [style]=\\\"{'width':'200px'}\\\"></p-toggleButton>-->\\n     <md-checkbox [(ngModel)]=\\\"name.displayName\\\" [checked]=\\\"name.displayName\\\" name=\\\"DisplayName\\\" (onChange)=\\\"changeDisplay(name, $event)\\\">\\n       Preferred Term - {{name.displayName}}\\n     </md-checkbox>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1>\\n      <md-checkbox [(ngModel)]=\\\"name.preferred\\\" [checked]=\\\"name.preferred || name.displayName\\\" name=\\\"PreferredName\\\" [disabled]=\\\"name.displayName\\\">\\n        Listing Term\\n      </md-checkbox>\\n    </md-grid-tile>\\n   <md-grid-tile [colspan]=2 [rowspan]=1></md-grid-tile>\\n\\n   <md-grid-tile [colspan]=2 [rowspan]=1 *ngIf=\\\"name.type=='of'\\\" class=\\\"color-bg\\\">\\n     <p-multiSelect [options]=\\\"nameJuris\\\" name=\\\"nameJurisdiction\\\" [(ngModel)]=\\\"name.nameJurisdiction\\\"\\n                    defaultLabel=\\\"Name Jurisdiction\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\" appendTo=\\\"body\\\"></p-multiSelect>\\n   </md-grid-tile>\\n   <md-grid-tile [colspan]=2 [rowspan]=1 *ngIf=\\\"name.type=='of'\\\" class=\\\"color-bg\\\">\\n     <p-multiSelect [options]=\\\"nameOrgs\\\" name=\\\"nameOrgs\\\" [(ngModel)]=\\\"name.nameOrgs\\\"\\n                    defaultLabel=\\\"Name Orgs\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\" appendTo=\\\"body\\\"></p-multiSelect>\\n   </md-grid-tile>\\n   <md-grid-tile [colspan]=4 [rowspan]=1 *ngIf=\\\"name.type=='of'\\\" class=\\\"color-bg\\\"></md-grid-tile>\\n\\n              <md-grid-tile [colspan]=2 [rowspan]=1>\\n                <p-multiSelect [options]=\\\"languages\\\" name=\\\"languages\\\"\\n                               defaultLabel=\\\"Languages\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\" appendTo=\\\"body\\\"></p-multiSelect>\\n              </md-grid-tile>\\n              <md-grid-tile [colspan]=2 [rowspan]=1>\\n                <p-multiSelect [options]=\\\"domains\\\" name=\\\"domains\\\" [(ngModel)]=\\\"name.domains\\\"\\n                               defaultLabel=\\\"Domains\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\" appendTo=\\\"body\\\"></p-multiSelect>\\n              </md-grid-tile>\\n           <!--  <md-grid-tile [colspan]=2 [rowspan]=1>\\n             <p-multiSelect [options]=\\\"access\\\" name=\\\"access\\\" [(ngModel)]=\\\"name.access\\\"\\n                       defaultLabel=\\\"Access\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\" appendTo=\\\"body\\\" (onChange)=\\\"changeAccess($event, name)\\\"></p-multiSelect>\\n             </md-grid-tile>-->\\n            <!--     <md-grid-tile [colspan]=2 [rowspan]=1></md-grid-tile>\\n              <md-grid-tile [colspan]=5 [rowspan]=1 (click)=\\\"openRefListDialog(name)\\\">\\n                <h5>References</h5>\\n                {{showReferenceIndexes(name)}}\\n              </md-grid-tile>-->\\n\\n\\n    <md-grid-tile [colspan]=8 [rowspan]=1 *ngIf=\\\"name.uuid\\\">\\n      Created by <code>&nbsp;{{name.createdBy}}&nbsp;</code> on <code>&nbsp; {{name.created | date: 'MM/dd/yyyy'}}&nbsp;</code> , Edited by <code>&nbsp;{{name.lastEditedBy}}&nbsp;</code> on <code>&nbsp;{{name.lastEdited | date: 'MM/dd/yyyy'}}&nbsp;</code>\\n    </md-grid-tile>\\n\\n  <md-grid-tile [colspan]=4 [rowspan]=1></md-grid-tile>\\n  <md-grid-tile [colspan]=1 [rowspan]=1>\\n    <button type=\\\"button\\\" (click)=\\\"deleteName(name)\\\" pButton icon=\\\"fa-trash\\\" label=\\\"Delete\\\"></button>\\n  </md-grid-tile>\\n  <md-grid-tile [colspan]=1 [rowspan]=1>\\n    <button type=\\\"button\\\" (click)=\\\"saveName(name)\\\" pButton icon=\\\"fa-check\\\" label=\\\"Save\\\"></button>\\n  </md-grid-tile>\\n  <md-grid-tile [colspan]=2 [rowspan]=1></md-grid-tile>\\n  </md-grid-list>\\n\\n</form><br/>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/names/name-edit.html\n// module id = 785\n// module chunks = 1","module.exports = \"<p-dataTable [value]=\\\"names\\\" expandableRows=\\\"true\\\" sizableColumns=\\\"true\\\"\\n                 [responsive]=\\\"true\\\" [editable]=\\\"true\\\" id=\\\"nameListTable\\\">\\n      <p-header>\\n        <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\n        <button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" style=\\\"float:left\\\" (click)=\\\"addName()\\\" label=\\\"Add Name\\\"></button>\\n    <!--    <button type=\\\"button\\\" pButton icon=\\\"fa-file-o\\\" style=\\\"float:left\\\" *ngIf=\\\"names.length > 0\\\" (click)=\\\"exportNames()\\\" label=\\\"Export Names\\\"></button>\\n        <button type=\\\"button\\\" pButton icon=\\\"fa-search\\\" style=\\\"float:right\\\" *ngIf=\\\"names.length > 0\\\" (click)=\\\"search()\\\" label=\\\"Search\\\"></button> -->\\n        </div>\\n      </p-header>\\n\\n      <p-column [style]=\\\"{'width':'38px'}\\\" expander=\\\"true\\\" styleClass=\\\"col-icon\\\">\\n        <template pTemplate=\\\"header\\\">Edit</template>\\n      </p-column>\\n\\n      <p-column [style]=\\\"{'width':'80px'}\\\">\\n        <template pTemplate=\\\"header\\\">Delete</template>\\n        <template pTemplate=\\\"body\\\" let-name=\\\"rowData\\\">\\n          <button type=\\\"button\\\" pButton icon=\\\"fa-trash\\\" (click)=\\\"confirmDeleteName(name)\\\"></button>\\n        </template>\\n      </p-column>\\n      <p-column [style]=\\\"{'width':'38px'}\\\">\\n        <template pTemplate=\\\"header\\\">PT</template>\\n        <template pTemplate=\\\"body\\\" let-name=\\\"rowData\\\">\\n          <md-radio-button name=\\\"display\\\" [value]=\\\"name.displayName\\\" pTooltip=\\\"Preferred Term\\\"></md-radio-button>\\n        </template>\\n      </p-column>\\n\\n     <p-column [style]=\\\"{'width':'38px'}\\\">\\n        <template pTemplate=\\\"header\\\">LT</template>\\n        <template let-name=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n          <md-checkbox [(ngModel)]=\\\"name.preferred\\\" [checked]=\\\"name.displayName || name.preferred\\\" name=\\\"listing\\\"  pTooltip=\\\"Listing Term\\\"></md-checkbox>\\n        </template>\\n      </p-column>\\n\\n      <p-column field=\\\"name\\\" header=\\\"Name\\\"  [style]=\\\"{'width':'500px'}\\\" [editable]=\\\"true\\\"></p-column>\\n      <p-column field=\\\"type\\\" header=\\\"Type\\\" [editable]=\\\"false\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n        <template let-col let-name=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n          <p-dropdown [(ngModel)]=\\\"name[col.field]\\\" [options]=\\\"nameTypes\\\" [autoWidth]=\\\"false\\\" [style]=\\\"{'width':'100%'}\\\" required=\\\"true\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></p-dropdown>\\n        </template>\\n      </p-column>\\n\\n      <p-column field=\\\"access\\\" header=\\\"Access\\\" [editable]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n        <template let-col let-name=\\\"rowData\\\" pTemplate=\\\"editor\\\">\\n          <p-multiSelect [options]=\\\"access\\\" name=\\\"access\\\" [(ngModel)]=\\\"name[col.field]\\\"\\n                         defaultLabel=\\\"Public\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\"\\n                         (onChange) =\\\"changeAccess($event, name)\\\"></p-multiSelect>\\n        </template>\\n      </p-column>\\n\\n      <p-column>\\n        <template pTemplate=\\\"header\\\">References</template>\\n        <template let-name=\\\"rowData\\\"  pTemplate=\\\"body\\\">\\n          <div *ngIf=\\\"!name.references || name.references.length == 0\\\" (click)=\\\"openRefListDialog(name)\\\">Click</div>\\n          <div (click)=\\\"openRefListDialog(name)\\\" *ngIf=\\\"name.references\\\">\\n            {{showReferenceIndexes(name)}}\\n          </div>\\n        </template>\\n\\n      </p-column>\\n      <template let-name pTemplate=\\\"rowexpansion\\\">\\n        <div>\\n          <name-edit [name]=name></name-edit>\\n         </div>\\n      </template>\\n    </p-dataTable>\\n<p-confirmDialog width=\\\"200px\\\"></p-confirmDialog>\\n\\n\\n<!--<div>\\n  <pre>\\n  {{ names | json }}\\n    </pre>\\n</div>-->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/names/names-list.html\n// module id = 786\n// module chunks = 1","module.exports = \"<br/>\\n<form class=\\\"note-edit-form\\\" #noteEditForm=\\\"ngForm\\\">\\n  <md-grid-list cols=\\\"8\\\" gutterSize=\\\"2px\\\" rowHeight=\\\"125px\\\" [style.background]=\\\"'#EBF5FC'\\\">\\n\\n    <md-grid-tile [colspan]=6 [rowspan]=1>\\n      <textarea rows=\\\"5\\\" cols=\\\"100\\\" pInputTextarea name=\\\"note\\\" [(ngModel)]=\\\"notes.note\\\"></textarea>\\n    </md-grid-tile>\\n\\n    <md-grid-tile [colspan]=2 [rowspan]=1>\\n      <p-multiSelect [options]=\\\"access\\\" name=\\\"access\\\" [(ngModel)]=\\\"notes.access\\\"\\n                     defaultLabel=\\\"Access\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\" appendTo=\\\"body\\\">\\n      </p-multiSelect>\\n    </md-grid-tile>\\n\\n    <md-grid-tile [colspan]=10 [rowspan]=1 *ngIf=\\\"notes.uuid\\\">\\n      Created by <code>&nbsp;{{notes.createdBy}}&nbsp;</code> on <code>&nbsp; {{notes.created | date: 'MM/dd/yyyy'}}&nbsp;</code> , Edited by <code>&nbsp;{{notes.lastEditedBy}}&nbsp;</code> on <code>&nbsp;{{notes.lastEdited | date: 'MM/dd/yyyy'}}&nbsp;</code>\\n    </md-grid-tile>\\n\\n    <md-grid-tile [colspan]=3 [rowspan]=1></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <button type=\\\"button\\\" (click)=\\\"deleteNote(notes)\\\" pButton icon=\\\"fa-trash\\\" label=\\\"Delete\\\"></button>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <button type=\\\"button\\\" (click)=\\\"saveNote(notes)\\\" pButton icon=\\\"fa-check\\\" label=\\\"Save\\\"></button>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n  </md-grid-list>\\n\\n</form><br/>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/notes/notes-edit.html\n// module id = 787\n// module chunks = 1","module.exports = \"<p-dataTable [value]=\\\"notes\\\" expandableRows=\\\"true\\\" sizableColumns=\\\"true\\\"\\n             [responsive]=\\\"true\\\" [editable]=\\\"true\\\">\\n  <p-header>\\n    <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" style=\\\"float:left\\\" (click)=\\\"addNotes()\\\" label=\\\"Add Notes\\\"></button>\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-file-o\\\" style=\\\"float:left\\\" *ngIf=\\\"notes.length > 0\\\" (click)=\\\"exportNotes()\\\" label=\\\"Export Notes\\\"></button>\\n      <!--  <button type=\\\"button\\\" pButton icon=\\\"fa-search\\\" style=\\\"float:right\\\" *ngIf=\\\"notes.length > 0\\\" (click)=\\\"search()\\\" label=\\\"Search\\\"></button>-->\\n    </div>\\n  </p-header>\\n\\n  <p-column [style]=\\\"{'width':'38px'}\\\" expander=\\\"true\\\" styleClass=\\\"col-icon\\\">\\n    <template pTemplate=\\\"header\\\">Edit</template>\\n  </p-column>\\n\\n  <p-column [style]=\\\"{'width':'80px'}\\\">\\n    <template pTemplate=\\\"header\\\">Delete</template>\\n    <template pTemplate=\\\"body\\\" let-note=\\\"rowData\\\">\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-trash\\\" (click)=\\\"confirmDeleteNotes(this)\\\"></button>\\n    </template>\\n  </p-column>\\n\\n  <p-column field=\\\"note\\\" header=\\\"Notes\\\" [editable]=\\\"true\\\" [style]=\\\"{'width':'800px'}\\\"></p-column>\\n\\n  <p-column field=\\\"access\\\" header=\\\"Access\\\" [editable]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n    <template let-col let-note=\\\"rowData\\\" pTemplate=\\\"editor\\\">\\n      <p-multiSelect [options]=\\\"access\\\" name=\\\"access\\\" [(ngModel)]=\\\"note[col.field]\\\"\\n                     defaultLabel=\\\"Public\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\"\\n                     (onChange) =\\\"changeAccess($event, name)\\\"></p-multiSelect>\\n    </template>\\n  </p-column>\\n\\n  <p-column [style]=\\\"{'width':'300px'}\\\">\\n    <template pTemplate=\\\"header\\\">References</template>\\n    <template let-note=\\\"rowData\\\"  pTemplate=\\\"body\\\">\\n      <div *ngIf=\\\"!note.references || note.references.length == 0\\\" (click)=\\\"openRefListDialog(note)\\\">Click</div>\\n      <div (click)=\\\"openRefListDialog(note)\\\" *ngIf=\\\"note.references\\\">\\n        {{showReferenceIndexes(note)}}\\n      </div>\\n    </template>\\n  </p-column>\\n  <template let-note pTemplate=\\\"rowexpansion\\\">\\n    <div>\\n      <notes-edit [notes]=note></notes-edit>\\n    </div>\\n  </template>\\n</p-dataTable>\\n<p-confirmDialog width=\\\"200px\\\"></p-confirmDialog>\\n<div><br/><button type=\\\"button\\\" pButton [style]=\\\"{display:block}\\\" (click)=\\\"saveNoteListChanges(event, notes)\\\" label=\\\"Save Changes\\\" *ngIf=\\\"notes.length > 0\\\"></button></div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/notes/notes-list.html\n// module id = 788\n// module chunks = 1","module.exports = \"<br/>\\n<div>\\n  <form class=\\\"parameter\\\" #paramEditForm=\\\"ngForm\\\">\\n   <div>\\n     <button type=\\\"button\\\" pButton icon=\\\"fa-trash\\\" (click)=\\\"deleteParam(this)\\\"></button>\\n\\n     <input mdInput name=\\\"Name\\\" placeholder=\\\"Name\\\" [style.width]=\\\"'10%'\\\">\\n\\n     <md-select placeholder=\\\"Parameter Type\\\" name=\\\"paramType\\\" [style.width]=\\\"'18%'\\\">\\n        <md-option *ngFor=\\\"let pt of paramType\\\" [value]=\\\"pt.value\\\">{{ pt.label }}</md-option>\\n      </md-select>\\n\\n     <span>Amount</span>\\n\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"saveParam(this)\\\" label=\\\"Ok\\\"></button>\\n\\n    </div>\\n  </form></div>\\n<br/>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/parameters/parameter.html\n// module id = 789\n// module chunks = 1","module.exports = \"<p-dataTable [value]=\\\"properties\\\" expandableRows=\\\"true\\\" sizableColumns=\\\"true\\\"\\n             [responsive]=\\\"true\\\" [editable]=\\\"true\\\" id=\\\"propertyListTable\\\" #dt>\\n  <p-header>\\n    <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" style=\\\"float:left\\\" (click)=\\\"addProperty()\\\" label=\\\"Add Property\\\"></button>\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-file-o\\\" style=\\\"float:left\\\" *ngIf=\\\"properties.length > 0\\\" (click)=\\\"exportRelations()\\\" label=\\\"Export Propertys\\\"></button>\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-search\\\" style=\\\"float:right\\\" *ngIf=\\\"properties.length > 0\\\" (click)=\\\"search()\\\" label=\\\"Search\\\"></button>\\n    </div>\\n  </p-header>\\n  <p-column [style]=\\\"{'width':'38px'}\\\" expander=\\\"true\\\" styleClass=\\\"col-icon\\\">\\n    <template pTemplate=\\\"header\\\">Edit</template>\\n  </p-column>\\n\\n  <p-column [style]=\\\"{'width':'80px'}\\\">\\n    <template pTemplate=\\\"header\\\">Delete</template>\\n    <template pTemplate=\\\"body\\\" let-property=\\\"rowData\\\">\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-trash\\\" (click)=\\\"confirmDeleteProperty(this)\\\"></button>\\n    </template>\\n  </p-column>\\n\\n  <p-column field=\\\"\\\" [style]=\\\"{'overflow':'visible'}\\\" [style]=\\\"{'width':'150px'}\\\">\\n    <template pTemplate=\\\"header\\\">Referenced Substance <br/>\\n      <md-checkbox [checked]=\\\"showRSStruct\\\" name=\\\"showRSStruct\\\" (change)=\\\"showStructure()\\\" *ngIf=\\\"properties.length > 0\\\">Show Structure</md-checkbox>\\n    </template>\\n    <template let-col let-property=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n      TEST TEST\\n      <div *ngIf=\\\"showRSStruct\\\">\\n        <img src=\\\"assets/images/protein.svg\\\" alt=\\\"structure\\\">\\n      </div>\\n    </template>\\n  </p-column>\\n\\n  <p-column field=\\\"name\\\" header=\\\"Name\\\" [style]=\\\"{'overflow':'visible'}\\\" [style]=\\\"{'width':'300px'}\\\">\\n    <template let-col let-property=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n      <p-dropdown [(ngModel)]=\\\"property[col.field]\\\" [options]=\\\"propName\\\" [autoWidth]=\\\"false\\\" [style]=\\\"{'width':'100%'}\\\" required=\\\"true\\\" placeholder=\\\"name...\\\"></p-dropdown>\\n    </template>\\n  </p-column>\\n\\n  <p-column field=\\\"type\\\" header=\\\"Property Type\\\" [style]=\\\"{'overflow':'visible'}\\\" [style]=\\\"{'width':'150px'}\\\">\\n    <template let-col let-property=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n      <p-dropdown [(ngModel)]=\\\"property[col.field]\\\" [options]=\\\"propType\\\" [autoWidth]=\\\"false\\\" [style]=\\\"{'width':'100%'}\\\" required=\\\"true\\\" placeholder=\\\"type...\\\"></p-dropdown>\\n    </template>\\n  </p-column>\\n\\n  <p-column field=\\\"\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n    <template pTemplate=\\\"header\\\">Amount</template>\\n    <template let-col let-property=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n      {{showAmounts(property.value)}}\\n    </template>\\n  </p-column>\\n\\n <p-column field=\\\"access\\\" header=\\\"Access\\\" [editable]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n    <template let-col let-property=\\\"rowData\\\" pTemplate=\\\"editor\\\">\\n      <p-multiSelect [options]=\\\"access\\\" name=\\\"access\\\" [(ngModel)]=\\\"property[col.field]\\\"\\n                     defaultLabel=\\\"Public\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\"\\n                     (onChange) =\\\"changeAccess($event, property)\\\"></p-multiSelect>\\n    </template>\\n  </p-column>\\n\\n  <p-column>\\n      <template pTemplate=\\\"header\\\">References</template>\\n      <template let-property=\\\"rowData\\\"  pTemplate=\\\"body\\\">\\n        <div *ngIf=\\\"!property.references || property.references.length == 0\\\" (click)=\\\"openRefListDialog(property)\\\">Click</div>\\n        <div (click)=\\\"openRefListDialog(property)\\\" *ngIf=\\\"property.references\\\">\\n          {{showReferenceIndexes(property)}}\\n        </div>\\n      </template>\\n\\n  </p-column>\\n  <template let-property pTemplate=\\\"rowexpansion\\\">\\n    <div>\\n      <property-edit [property]=property></property-edit>\\n    </div>\\n  </template>\\n</p-dataTable>\\n<p-confirmDialog width=\\\"200px\\\"></p-confirmDialog>\\n<div><br/><button type=\\\"button\\\" pButton [style]=\\\"{display:block}\\\" (click)=\\\"savePropertyListChanges(event, properties)\\\" label=\\\"Save Changes\\\" *ngIf=\\\"properties.length > 0\\\"></button></div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/properties/properties-list.html\n// module id = 790\n// module chunks = 1","module.exports = \"<br/>\\n<form class=\\\"property-edit-form\\\" #propertyEditForm=\\\"ngForm\\\">\\n\\n  <md-grid-list cols=\\\"8\\\" gutterSize=\\\"2px\\\" rowHeight=\\\"70px\\\" [style.background]=\\\"'#EBF5FC'\\\">\\n\\n    <md-grid-tile [colspan]=1 [rowspan]=1><b>Property Name</b></md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1>\\n      <md-select placeholder=\\\"Property Name\\\" name=\\\"name\\\" [(ngModel)]=\\\"property.name\\\" [style.width]=\\\"'80%'\\\">\\n        <md-option *ngFor=\\\"let name of propName\\\" [value]=\\\"name.value\\\" overlayVisible=\\\"true\\\">{{ name.label }}</md-option>\\n      </md-select>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1><b>Property Type</b></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <md-select placeholder=\\\"Property Type\\\" name=\\\"type\\\" [(ngModel)]=\\\"property.type\\\" [style.width]=\\\"'80%'\\\">\\n        <md-option *ngFor=\\\"let type of propType\\\" [value]=\\\"type.value\\\" overlayVisible=\\\"true\\\">{{ type.label }}</md-option>\\n      </md-select>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1><b>Access</b></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <p-multiSelect [options]=\\\"access\\\" name=\\\"access\\\" [(ngModel)]=\\\"property.access\\\"\\n                     defaultLabel=\\\"Access\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\" appendTo=\\\"body\\\"\\n                     (onChange) =\\\"changeAccess($event, property)\\\">\\n      </p-multiSelect></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <md-checkbox [(ngModel)]=\\\"property.defining\\\" [checked]=\\\"property.defining\\\" name=\\\"defining\\\"><b>Defining</b></md-checkbox>\\n    </md-grid-tile>\\n\\n    <md-grid-tile [colspan]=3 [rowspan]=1>REFERENCED SUBSTANCE</md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1><b>Amount</b></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <div (click)=\\\"amountDisplay = !amountDisplay\\\" *ngIf=\\\"!property.value\\\">Add Amount</div>\\n      <div (click)=\\\"amountDisplay = !amountDisplay\\\" *ngIf=\\\"property.value\\\">\\n        {{showAmounts()}}\\n      </div>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1>\\n     <div (click)=\\\"paramDisplay = !paramDisplay\\\">Param</div>\\n       <div (click)=\\\"paramDisplay = !paramDisplay\\\" *ngIf=\\\"property.parameters && property.parameters.length > 0\\\">\\n        <div *ngFor=\\\"let param of paramList\\\" >\\n          {{param.name}}\\n        </div>\\n      </div>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n\\n    <md-grid-tile [colspan]=8 [rowspan]=1 class=\\\"color-bg\\\" *ngIf=\\\"paramDisplay\\\">\\n     parameter list\\n      <param [param]=\\\"\\\">\\n      <div *ngFor=\\\"let param of property.parameters\\\" >\\n        <param [param]=\\\"param\\\">\\n      </div>\\n    </md-grid-tile>\\n\\n    <md-grid-tile [colspan]=8 [rowspan]=1 class=\\\"color-bg\\\" *ngIf=\\\"amountDisplay\\\">\\n      <amount [amount]=property.value></amount>\\n    </md-grid-tile>\\n\\n    <md-grid-tile [colspan]=8 [rowspan]=1 *ngIf=\\\"property.uuid\\\">\\n      Created by <code>&nbsp;{{property.createdBy}}&nbsp;</code> on <code>&nbsp; {{property.created | date: 'MM/dd/yyyy'}}&nbsp;</code> , Edited by <code>&nbsp;{{property.lastEditedBy}}&nbsp;</code> on <code>&nbsp;{{property.lastEdited | date: 'MM/dd/yyyy'}}&nbsp;</code>\\n    </md-grid-tile>\\n\\n    <md-grid-tile [colspan]=4 [rowspan]=1></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <button type=\\\"button\\\" (click)=\\\"deleteProperty(property)\\\" pButton icon=\\\"fa-trash\\\" label=\\\"Delete\\\"></button>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <button type=\\\"button\\\" (click)=\\\"saveProperty(property)\\\" pButton icon=\\\"fa-check\\\" label=\\\"Save\\\"></button>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1></md-grid-tile>\\n  </md-grid-list>\\n\\n</form><br/>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/properties/property-edit.html\n// module id = 791\n// module chunks = 1","module.exports = \"<form (ngSubmit)=\\\"updateRef(selectedReference,$event)\\\" class=\\\"ref-edit-form\\\" #refEditForm=\\\"ngForm\\\">\\n\\n  <div md-dialog-title>\\n    <p><span *ngIf=\\\"!selectedReference.getFlag('new')\\\">Edit <code>{{selectedReference.citation}}</code></span>\\n      <span *ngIf=\\\"selectedReference.getFlag('new')\\\"><code>Create Reference</code></span>\\n      <span><button type=\\\"button\\\" md-dialog-close><i class=\\\"material-icons md-18\\\">clear</i></button></span></p>\\n  </div>\\n\\n  <md-dialog-content>\\n    <md-input-container class=\\\"ref-full-width\\\">\\n        <textarea mdInput name=\\\"citation\\\" placeholder=\\\"Citation\\\" required [(ngModel)]=\\\"selectedReference.citation\\\"></textarea>\\n    </md-input-container>\\n<p>\\n    <md-select placeholder=\\\"Source Type\\\" name=\\\"sType\\\" [(ngModel)]=\\\"selectedReference.docType\\\">\\n      <md-option *ngFor=\\\"let type of sourceTypeList\\\" [value]=\\\"type.value\\\">{{ type.label }}</md-option>\\n    </md-select>\\n  </p>\\n\\n    <p><br/>\\n      <md-select placeholder=\\\"Source Class\\\" name=\\\"sClass\\\">\\n        <md-option *ngFor=\\\"let type of documentSystemType\\\" [value]=\\\"type.value\\\" disabled>{{ type.label }}</md-option>\\n      </md-select>\\n  </p>\\n\\n<p>\\n    <md-input-container class=\\\"ref-full-width\\\">\\n        <input mdInput placeholder=\\\"Source ID\\\" name=\\\"sourceId\\\" [(ngModel)]=\\\"selectedReference.id\\\">\\n    </md-input-container>\\n  </p>\\n\\n    <p>\\n    <md-input-container class=\\\"ref-full-width\\\">\\n        <input mdInput placeholder=\\\"Url\\\" name=\\\"url\\\" [(ngModel)]=\\\"selectedReference.url\\\">\\n    </md-input-container>\\n    </p>\\n\\n    <p><button md-button><md-icon>file_upload</md-icon></button>Upload Document</p>\\n\\n    <p><md-checkbox class=\\\"ref-full-width\\\" name=\\\"pubDomain\\\" [(ngModel)]=\\\"selectedReference.publicDomain\\\">Public Domain</md-checkbox></p>\\n\\n    <p>\\n      <span><p-multiSelect [options]=\\\"tags\\\" name=\\\"tags\\\" [(ngModel)]=\\\"selectedReference.tags\\\"\\n                           defaultLabel=\\\"Tags\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\" appendTo=\\\"body\\\"></p-multiSelect></span>\\n\\n      <span><p-multiSelect [options]=\\\"access\\\" name=\\\"access\\\" [(ngModel)]=\\\"selectedReference.access\\\"\\n                     defaultLabel=\\\"Access\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\" appendTo=\\\"body\\\"></p-multiSelect></span>\\n    </p>\\n</md-dialog-content>\\n\\n  <md-dialog-actions>\\n  <span><button type=\\\"submit\\\" md-button>Save</button></span>\\n     <span *ngIf=\\\"selectedReference.getFlag('new')\\\">\\n           <button type=\\\"button\\\" md-button (click)=\\\"deleteRef(selectedReference)\\\">Cancel</button>\\n     </span>\\n     <span *ngIf=\\\"!selectedReference.getFlag('new')\\\">\\n           <button type=\\\"button\\\" md-button (click)=\\\"deleteRef(selectedReference)\\\">Delete</button>\\n     </span>\\n  </md-dialog-actions>\\n\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/references/reference-edit-dialog.html\n// module id = 792\n// module chunks = 1","module.exports = \"<br/>\\n<form class=\\\"ref-edit-form\\\" #refEditForm=\\\"ngForm\\\">\\n  <br/>\\n  <md-grid-list cols=\\\"10\\\" gutterSize=\\\"2px\\\" rowHeight=\\\"70px\\\" [style.background]=\\\"'#EBF5FC'\\\">\\n    <md-grid-tile [colspan]=1 [rowspan]=1>Citation</md-grid-tile>\\n    <md-grid-tile [colspan]=7 [rowspan]=1>\\n      <md-input-container class=\\\"ref-full-width\\\">\\n        <textarea mdInput name=\\\"citation\\\" required [(ngModel)]=\\\"ref.citation\\\"></textarea>\\n      </md-input-container></md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1></md-grid-tile>\\n\\n   <md-grid-tile [colspan]=2 [rowspan]=1>\\n     <md-select placeholder=\\\"Source Type\\\" name=\\\"type\\\" [(ngModel)]=\\\"ref.docType\\\" [style.width]=\\\"'80%'\\\">\\n       <md-option *ngFor=\\\"let type of sourceTypeList\\\" [value]=\\\"type.value\\\">{{ type.label }}</md-option>\\n     </md-select>\\n   </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1>\\n      <md-select placeholder=\\\"Source Class\\\" name=\\\"sClass\\\" [style.width]=\\\"'80%'\\\">\\n        <md-option *ngFor=\\\"let type of documentSystemType\\\" [value]=\\\"type.value\\\" disabled>{{ type.label }}</md-option>\\n      </md-select>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>Source ID</md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1><md-input-container class=\\\"ref-full-width\\\">\\n      <input mdInput placeholder=\\\"Source ID\\\" name=\\\"sourceId\\\" [(ngModel)]=\\\"ref.id\\\">\\n    </md-input-container></md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1></md-grid-tile>\\n\\n\\n    <md-grid-tile [colspan]=1 [rowspan]=1>Reference URL</md-grid-tile>\\n    <md-grid-tile [colspan]=5 [rowspan]=1>\\n      <md-input-container class=\\\"ref-full-width\\\">\\n        <input mdInput name=\\\"url\\\" value=\\\"{{ref.url}}\\\" [(ngModel)]=\\\"ref.url\\\">\\n      </md-input-container>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1>\\n    <button md-button><md-icon>file_upload</md-icon>Upload Document</button></md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <md-checkbox class=\\\"ref-full-width\\\" name=\\\"pubDomain\\\" [(ngModel)]=\\\"ref.publicDomain\\\">Public Domain</md-checkbox>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1>\\n    TAGS\\n      <!--<p-multiSelect [options]=\\\"tags\\\" name=\\\"tags\\\" [(ngModel)]=\\\"ref.tags\\\"\\n                             defaultLabel=\\\"Tags\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\" appendTo=\\\"body\\\"></p-multiSelect>-->\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1>\\n      <p-multiSelect [options]=\\\"access\\\" name=\\\"access\\\" [(ngModel)]=\\\"ref.access\\\"\\n                           defaultLabel=\\\"Access\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\" appendTo=\\\"body\\\"></p-multiSelect>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1></md-grid-tile>\\n\\n\\n    <md-grid-tile [colspan]=10 [rowspan]=1 *ngIf=\\\"ref.uuid\\\">\\n      Created by <code>&nbsp;{{ref.createdBy}}&nbsp;</code> on <code>&nbsp; {{ref.created | date: 'MM/dd/yyyy'}}&nbsp;</code> , Edited by <code>&nbsp;{{ref.lastEditedBy}}&nbsp;</code> on <code>&nbsp;{{ref.lastEdited | date: 'MM/dd/yyyy'}}&nbsp;</code>\\n    </md-grid-tile>\\n\\n    <md-grid-tile [colspan]=7 [rowspan]=1></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <button type=\\\"button\\\" (click)=\\\"deleteRef(ref)\\\" pButton icon=\\\"fa-trash\\\" label=\\\"Delete\\\"></button>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <button type=\\\"button\\\" (click)=\\\"updateRef(ref,$event)\\\" pButton icon=\\\"fa-check\\\" label=\\\"Save\\\"></button>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n  </md-grid-list>\\n</form><br/>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/references/reference-edit.html\n// module id = 793\n// module chunks = 1","module.exports = \"<form>\\n  <div md-dialog-title align=\\\"center\\\">\\n    <span>Select Reference</span> <span><button type=\\\"button\\\" md-button md-dialog-close><md-icon>clear</md-icon></button></span>\\n    <br/><br/>\\n    <div>\\n      <md-button-toggle-group #group=\\\"mdButtonToggleGroup\\\" name=\\\"referenceView\\\" [(ngModel)]=\\\"referenceViewTab\\\">\\n        <md-button-toggle value=\\\"all\\\">All</md-button-toggle>\\n        <md-button-toggle value=\\\"selected\\\">Selected</md-button-toggle>\\n        <md-button-toggle value=\\\"last5\\\">Last 5</md-button-toggle>\\n      </md-button-toggle-group>\\n    </div>\\n  </div>\\n\\n\\n  <md-dialog-content>\\n    <md-input-container dense>\\n      <input mdInput placeholder=\\\"Filter References\\\" [formControl]=\\\"refCtrl\\\"  [(ngModel)]=\\\"filterQuery\\\">\\n     </md-input-container>\\n\\n     <md-list dense>\\n      <md-list-item *ngFor=\\\"let ref of allRefsForDataFiltered\\\">\\n       <md-checkbox [checked]=isChecked(ref) (change)=\\\"toggle(ref)\\\">{{ref.index}}.</md-checkbox>\\n       <span>{{ref.citation}}</span>\\n        <template #nonPublic>NP</template>\\n        <span>{{ref.access}}</span>\\n        <button md-button (click)=\\\"openRefEditDialog(ref)\\\"><md-icon>chevron_right</md-icon></button>\\n      </md-list-item>\\n    </md-list>\\n</md-dialog-content>\\n\\n  <md-divider></md-divider>\\n<md-dialog-actions align=\\\"center\\\">\\n  <div><p><button md-button (click)=\\\"openRefEditDialog()\\\">Create New Reference</button></p></div>\\n  <div><p><button md-button (click)=\\\"applySelectedToAllNames()\\\">Apply Selected to All Names</button></p></div>\\n</md-dialog-actions>\\n  <md-dialog-actions align=\\\"center\\\">\\n    <button md-button (click)=\\\"saveChanges()\\\">Save Changes</button>\\n  </md-dialog-actions>\\n</form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/references/reference-list-dialog.html\n// module id = 794\n// module chunks = 1","module.exports = \"<p-dataTable [value]=\\\"refs\\\" expandableRows=\\\"true\\\" sizableColumns=\\\"true\\\"\\n             [responsive]=\\\"true\\\" [editable]=\\\"true\\\">\\n <p-header>\\n    <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" style=\\\"float:left\\\" (click)=\\\"addReference()\\\" label=\\\"Add Reference\\\"></button>\\n    <!--  <button type=\\\"button\\\" pButton icon=\\\"fa-file-o\\\" style=\\\"float:left\\\" *ngIf=\\\"refs.length > 0\\\" (click)=\\\"exportRefs()\\\" label=\\\"Export References\\\"></button>\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-search\\\" style=\\\"float:right\\\" *ngIf=\\\"refs.length > 0\\\" (click)=\\\"search()\\\" label=\\\"Search\\\"></button>-->\\n    </div>\\n  </p-header>\\n  <p-column [style]=\\\"{'width':'38px'}\\\" expander=\\\"true\\\" styleClass=\\\"col-icon\\\">\\n    <template pTemplate=\\\"header\\\">Edit</template>\\n  </p-column>\\n\\n  <p-column [style]=\\\"{'width':'80px'}\\\">\\n    <template pTemplate=\\\"header\\\">Delete</template>\\n    <template pTemplate=\\\"body\\\" let-ref=\\\"rowData\\\">\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-trash\\\" (click)=\\\"confirmDeleteRef(ref)\\\"></button>\\n    </template>\\n  </p-column>\\n\\n  <p-column [style]=\\\"{'width':'38px'}\\\">\\n    <template pTemplate=\\\"header\\\">PD</template>\\n    <template let-ref=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n      <md-checkbox [(ngModel)]=\\\"ref.publicDomain\\\" [checked]=\\\"ref.publicDomain\\\" name=\\\"publicDomain\\\"  pTooltip=\\\"Public Domain\\\"></md-checkbox>\\n    </template>\\n  </p-column>\\n\\n  <p-column field=\\\"citation\\\" header=\\\"Citation / Source Text\\\"  [style]=\\\"{'width':'500px'}\\\" [editable]=\\\"true\\\"></p-column>\\n\\n  <p-column field=\\\"docType\\\" header=\\\"Source Type\\\" [editable]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n    <template let-col let-ref=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n      <p-dropdown [(ngModel)]=\\\"ref[col.field]\\\" [options]=\\\"sourceTypes\\\" [autoWidth]=\\\"false\\\" [style]=\\\"{'width':'100%'}\\\" required=\\\"true\\\"></p-dropdown>\\n    </template>\\n  </p-column>\\n\\n  <p-column field=\\\"access\\\" header=\\\"Access\\\" [editable]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n    <template let-col let-ref=\\\"rowData\\\" pTemplate=\\\"editor\\\">\\n      <p-multiSelect [options]=\\\"access\\\" name=\\\"access\\\" [(ngModel)]=\\\"ref[col.field]\\\"\\n                     defaultLabel=\\\"Access\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\"></p-multiSelect>\\n    </template>\\n  </p-column>\\n\\n  <p-column field=\\\"url\\\" header=\\\"Reference URL\\\"  [style]=\\\"{'width':'500px'}\\\" [editable]=\\\"true\\\"></p-column>\\n\\n  <template let-ref pTemplate=\\\"rowexpansion\\\">\\n    <div>\\n      <reference-edit [ref]=\\\"ref\\\"></reference-edit>\\n    </div>\\n  </template>\\n\\n</p-dataTable>\\n<p-confirmDialog width=\\\"200px\\\"></p-confirmDialog>\\n\\n<!--<div>\\n  <pre>\\n  {{refs | json}}\\n    </pre>\\n</div>-->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/references/reference-list.html\n// module id = 795\n// module chunks = 1","module.exports = \"<br/>\\n<form class=\\\"relationship-edit-form\\\" #relationEditForm=\\\"ngForm\\\">\\n\\n  <md-grid-list cols=\\\"8\\\" gutterSize=\\\"2px\\\" rowHeight=\\\"70px\\\" [style.background]=\\\"'#EBF5FC'\\\">\\n\\n    <md-grid-tile [colspan]=2 [rowspan]=1>RELATED SUBSTANCE\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1><b>Relationsip Type</b></md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1>\\n      <md-select placeholder=\\\"Relationship Type\\\" name=\\\"type\\\" [(ngModel)]=\\\"relationship.type\\\" [style.width]=\\\"'80%'\\\">\\n        <md-option *ngFor=\\\"let type of relationshipTypes\\\" [value]=\\\"type.value\\\" overlayVisible=\\\"true\\\">{{ type.label }}</md-option>\\n      </md-select>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1><b>Access</b></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <p-multiSelect [options]=\\\"access\\\" name=\\\"access\\\" [(ngModel)]=\\\"relationship.access\\\"\\n                     defaultLabel=\\\"Access\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\" appendTo=\\\"body\\\"\\n                     (onChange) =\\\"changeAccess($event, relationship)\\\">\\n      </p-multiSelect>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n\\n\\n    <md-grid-tile [colspan]=1 [rowspan]=1> <b>Qualification</b></md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1>\\n      <md-select placeholder=\\\"Qualification\\\" name=\\\"qualification\\\" [(ngModel)]=\\\"relationship.qualification\\\" [style.width]=\\\"'80%'\\\">\\n        <md-option *ngFor=\\\"let qual of qualification\\\" [value]=\\\"qual.value\\\" overlayVisible=\\\"true\\\">{{ qual.label }}</md-option>\\n      </md-select>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1><b>Interaction Type</b></md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1>\\n      <md-select placeholder=\\\"Interaction Type\\\" name=\\\"interactionType\\\" [(ngModel)]=\\\"relationship.interactionType\\\" [style.width]=\\\"'80%'\\\">\\n        <md-option *ngFor=\\\"let iType of interactionType\\\" [value]=\\\"iType.value\\\" overlayVisible=\\\"true\\\">{{ iType.label }}</md-option>\\n      </md-select>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1><b>Amount</b></md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1>\\n      <div (click)=\\\"amountDisplay = !amountDisplay\\\" *ngIf=\\\"!relationship.amount\\\">Add Amount</div>\\n      <div (click)=\\\"amountDisplay = !amountDisplay\\\" *ngIf=\\\"relationship.amount\\\">\\n        {{showAmounts(relationship.amount)}}\\n      </div>\\n    </md-grid-tile>\\n\\n    <md-grid-tile [colspan]=8 [rowspan]=1 class=\\\"color-bg\\\" *ngIf=\\\"amountDisplay\\\">\\n       <amount [amount]=relationship.amount></amount>\\n    </md-grid-tile>\\n\\n    <md-grid-tile [colspan]=1 [rowspan]=1> <b>Mediator Substance</b></md-grid-tile>\\n    <md-grid-tile [colspan]=2 [rowspan]=1> MEDIATOR SUBSTANCE</md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1> <b>Comments</b></md-grid-tile>\\n    <md-grid-tile [colspan]=3 [rowspan]=1>\\n      <md-input-container class=\\\"ref-full-width\\\">\\n        <input mdInput name=\\\"relationship\\\" value=\\\"{{relationship.comments}}\\\" [(ngModel)]=\\\"relationship.comments\\\" placeholder=\\\"comments ...\\\">\\n      </md-input-container>\\n    </md-grid-tile>\\n    <md-grid-tile [colspan]=1 [rowspan]=1></md-grid-tile>\\n\\n\\n   <md-grid-tile [colspan]=8 [rowspan]=1 *ngIf=\\\"relationship.uuid\\\">\\n      Created by <code>&nbsp;{{relationship.createdBy}}&nbsp;</code> on <code>&nbsp; {{relationship.created | date: 'MM/dd/yyyy'}}&nbsp;</code> , Edited by <code>&nbsp;{{relationship.lastEditedBy}}&nbsp;</code> on <code>&nbsp;{{relationship.lastEdited | date: 'MM/dd/yyyy'}}&nbsp;</code>\\n    </md-grid-tile>\\n\\n    <md-grid-tile [colspan]=4 [rowspan]=1></md-grid-tile>\\n       <md-grid-tile [colspan]=1 [rowspan]=1>\\n         <button type=\\\"button\\\" (click)=\\\"deleteRelationship(relationship)\\\" pButton icon=\\\"fa-trash\\\" label=\\\"Delete\\\"></button>\\n       </md-grid-tile>\\n       <md-grid-tile [colspan]=1 [rowspan]=1>\\n         <button type=\\\"button\\\" (click)=\\\"saveRelationship(relationship)\\\" pButton icon=\\\"fa-check\\\" label=\\\"Save\\\"></button>\\n       </md-grid-tile>\\n       <md-grid-tile [colspan]=2 [rowspan]=1></md-grid-tile>\\n  </md-grid-list>\\n\\n</form><br/>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/relationships/relationship-edit.html\n// module id = 796\n// module chunks = 1","module.exports = \"<p-dataTable [value]=\\\"relations\\\" expandableRows=\\\"true\\\" sizableColumns=\\\"true\\\"\\n             [responsive]=\\\"true\\\" [editable]=\\\"true\\\" id=\\\"relationListTable\\\" #dt>\\n  <p-header>\\n    <div class=\\\"ui-helper-clearfix\\\" style=\\\"width:100%\\\">\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-plus\\\" style=\\\"float:left\\\" (click)=\\\"addRelationship()\\\" label=\\\"Add Relationship\\\"></button>\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-file-o\\\" style=\\\"float:left\\\" *ngIf=\\\"relations.length > 0\\\" (click)=\\\"exportRelations()\\\" label=\\\"Export Relationships\\\"></button>\\n      <button type=\\\"button\\\" pButton icon=\\\"fa-search\\\" style=\\\"float:right\\\" *ngIf=\\\"relations.length > 0\\\" (click)=\\\"search()\\\" label=\\\"Search\\\"></button>\\n    </div>\\n  </p-header>\\n    <p-column [style]=\\\"{'width':'38px'}\\\" expander=\\\"true\\\" styleClass=\\\"col-icon\\\">\\n      <template pTemplate=\\\"header\\\">Edit</template>\\n    </p-column>\\n\\n    <p-column [style]=\\\"{'width':'80px'}\\\">\\n      <template pTemplate=\\\"header\\\">Delete</template>\\n      <template pTemplate=\\\"body\\\" let-relation=\\\"rowData\\\">\\n        <button type=\\\"button\\\" pButton icon=\\\"fa-trash\\\" (click)=\\\"confirmDeleteRelation(this)\\\"></button>\\n      </template>\\n    </p-column>\\n\\n  <p-column field=\\\"\\\" [style]=\\\"{'overflow':'visible'}\\\" [style]=\\\"{'width':'150px'}\\\">\\n    <template pTemplate=\\\"header\\\">Related Substance <br/>\\n      <md-checkbox [checked]=\\\"showRSStruct\\\" name=\\\"showRSStruct\\\" (change)=\\\"showStructure()\\\" *ngIf=\\\"relations.length > 0\\\">Show Structure</md-checkbox>\\n    </template>\\n    <template let-col let-relation=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n      TEST TEST\\n      <div *ngIf=\\\"showRSStruct\\\">\\n        <img src=\\\"assets/images/protein.svg\\\" alt=\\\"structure\\\">\\n      </div>\\n    </template>\\n  </p-column>\\n\\n  <p-column field=\\\"type\\\" header=\\\"Type\\\" [style]=\\\"{'overflow':'visible'}\\\" [style]=\\\"{'width':'300px'}\\\">\\n    <template let-col let-relation=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n      <p-dropdown [(ngModel)]=\\\"relation[col.field]\\\" [options]=\\\"relationshipTypes\\\" [autoWidth]=\\\"false\\\" [style]=\\\"{'width':'100%'}\\\" required=\\\"true\\\" placeholder=\\\"type...\\\"></p-dropdown>\\n    </template>\\n  </p-column>\\n\\n<!--  <p-column field=\\\"type\\\" header=\\\"Type\\\" [editable]=\\\"true\\\" [filter]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\" filterMatchMode=\\\"equals\\\">\\n    <template pTemplate=\\\"filter\\\" let-col let-relation=\\\"rowData\\\">\\n      <p-dropdown [(ngModel)]=\\\"relation[col.field]\\\" [options]=\\\"relationshipTypes\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value,col.field,col.filterMatchMode)\\\" styleClass=\\\"ui-column-filter\\\"></p-dropdown>\\n    </template>\\n  </p-column>-->\\n\\n\\n\\n  <p-column field=\\\"access\\\" header=\\\"Access\\\" [editable]=\\\"true\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n    <template let-col let-relation=\\\"rowData\\\" pTemplate=\\\"editor\\\">\\n      <p-multiSelect [options]=\\\"access\\\" name=\\\"access\\\" [(ngModel)]=\\\"relation[col.field]\\\"\\n                     defaultLabel=\\\"Public\\\" overlayVisible=\\\"true\\\" scrollHeight=\\\"500px\\\"\\n                     (onChange) =\\\"changeAccess($event, relation)\\\"></p-multiSelect>\\n    </template>\\n  </p-column>\\n\\n  <p-column field=\\\"\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n    <template pTemplate=\\\"header\\\">Amount</template>\\n    <template let-col let-relation=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n      {{showAmounts(relation.amount)}}\\n    </template>\\n  </p-column>\\n\\n  <p-column field=\\\"\\\" [style]=\\\"{'overflow':'visible'}\\\">\\n    <template pTemplate=\\\"header\\\">Qualification / <br/> Interaction Type</template>\\n    <template let-col let-relation=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n      {{relation.qualificaion}} <div *ngIf=\\\"relation.interactionType\\\">/ {{relation.interactionType}}</div>\\n    </template>\\n  </p-column>\\n\\n  <p-column>\\n    <template pTemplate=\\\"header\\\">References</template>\\n    <template let-relation=\\\"rowData\\\"  pTemplate=\\\"body\\\">\\n      <div *ngIf=\\\"!relation.references || relation.references.length == 0\\\" (click)=\\\"openRefListDialog(relation)\\\">Click</div>\\n      <div (click)=\\\"openRefListDialog(relation)\\\" *ngIf=\\\"relation.references\\\">\\n        {{showReferenceIndexes(relation)}}\\n      </div>\\n    </template>\\n\\n  </p-column>\\n  <template let-relation pTemplate=\\\"rowexpansion\\\">\\n    <div>\\n      <relation-edit [relationship]=relation></relation-edit>\\n    </div>\\n  </template>\\n</p-dataTable>\\n<p-confirmDialog width=\\\"200px\\\"></p-confirmDialog>\\n<div><br/><button type=\\\"button\\\" pButton [style]=\\\"{display:block}\\\" (click)=\\\"saveRelationListChanges(event, relations)\\\" label=\\\"Save Changes\\\" *ngIf=\\\"relations.length > 0\\\"></button></div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/relationships/relationship-list.html\n// module id = 797\n// module chunks = 1","module.exports = \"<div class=\\\"demo-nav-bar\\\">\\n  <div><pre>{{fjson}}</pre></div>\\n\\n\\n  <nav md-tab-nav-bar aria-label=\\\"Substance properties\\\">\\n    <a md-tab-link\\n       *ngFor=\\\"let tabLink of tabs; let i = index\\\"\\n       [routerLink]=\\\"tabLink.content\\\"\\n       [active]=\\\"activeLinkIndex === i\\\"\\n       (click)=\\\"activeLinkIndex = i\\\">\\n      {{tabLink.header || tabLink.content | uppercase}} {{length || tabLink.value?.count || ''}}\\n    </a>\\n  </nav>\\n  <router-outlet></router-outlet>\\n  <div id=\\\"hidden-things\\\" ></div>\\n  <div><br/><button type=\\\"submit\\\" pButton [style]=\\\"{display:block}\\\" (click)=\\\"save()\\\" label=\\\"Save Changes\\\"></button></div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/substanceedit/substanceedit.component.html\n// module id = 798\n// module chunks = 1","module.exports = \"<p>\\n  Landing page for displaying substancelist!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/substancelist/substancelist.component.html\n// module id = 799\n// module chunks = 1","module.exports = \"<div id=\\\"sum-internal\\\">\\n<iframe id=\\\"subFrame\\\" load=\\\"onLoad()\\\" width=\\\"100%\\\" height=\\\"999\\\">\\n  <p>Your browser does not support iframes.</p>\\n</iframe>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/summaryview/summary.component.html\n// module id = 800\n// module chunks = 1"],"sourceRoot":""}