include "core.conf"

application.context="/ginas/app"
application.router=ix.ginas.Routes
application.appname="ginas"

#
# override to use only those models that we need
#
ebean.default="ix.core.adapters.*,ix.core.models.*,ix.ginas.models.*"


application.global=ix.ginas.utils.GinasGlobal

#Use This impl for MySQL
#ix.ginas.PersistRecordWorkerFactoryImpl = "ix.core.plugins.SingleThreadedPersistRecordWorkerFactory"
ix.ginas.PersistRecordWorkerFactoryImpl = "ix.core.plugins.MultiThreadedPersistRecordWorkerFactory"

#ix.tokenexpiretime=30000
ix.core.files.persist.location="<DB>"
ix.core.files.persist.maxsize="30MB"

ix.core.resourcefilter="ix.core.PopulatedResourceFilter"

ix.core.users=[
	{
		"username":"admin",
		"email":"",
		"password":"admin",
		"roles":["Query", "DataEntry","SuperDataEntry", "Updater","SuperUpdate", "Admin"]
	}
]


ix.core.searchanalyzers = [
    {
		"class":"ix.ginas.models.v1.Substance",
		"analyzer":"ix.core.search.GinasSearchAnalyzer",
		"with":{
			"maxanalyze":50
		}
	}
]

ix.home="ginas.ix"
ix.app="ginas"
ix.debug=1
ix.ginas.debug.profile=false
ix.ginas.debug.showheaders=false

#CUSTOM VALIDATOR - This is not implemented yet
#ix.ginas.validator=ix.ginas.utils.SubstanceValidator


ix.ginas.textanalyzer=true
ix.ginas.maxanalyze=100
#ix.ginas.loader=old
ix.ginas.hazelcast=false
# this needs to be at least 1
ix.ginas.maxrecordqueue=2
ix.ginas.allowloading=true

#extract locators like "[INN]" from names, and add as references
ix.ginas.prepare.extractlocators=false

#set this to "true" to allow all users (authenticated or not) to behave as admins
ix.admin=false

ix.ginas.batch.validation=true
ix.ginas.batch.persist=true

# This is the info for the admin contact
# to be used when access is not granted to a user
#
#
#ix.sysadmin={
#"username":"adminusername",
#"email":"display@email.com"
#}

ix.core.entityprocessors=[
	# this ensures consistency across alternative definitions
	# also use by FDA. FDA modifies this class
	{
		"class":"ix.ginas.models.v1.Substance",
		"processor":"ix.ginas.processors.SubstanceProcessor"
	},
	{
		"class":"ix.ginas.models.v1.Substance",
		"processor":"ix.ginas.processors.PublicCleanProcessor"
	},
	{
		"class":"ix.ginas.models.v1.Relationship",
		"processor":"ix.ginas.processors.RelationshipProcessor"
	},
	#{
	#	"class":"ix.ginas.models.v1.Substance",
	#	"processor":"ix.ginas.processors.UniqueCodeGenerator",
	#	"with":{
	#	"codesystem":"BDNUM",
	#		"suffix":"AB",
	#		"length":10,
	#		"padding":true
	#	}
	#},
	#{
	#	"class":"ix.ginas.models.v1.Name",
	#	"processor":"ix.ginas.processors.FDANameNormalizer"
	#},

	# when a new group is added, this ensures that new group is added to contorlled vocabulary
	{
		"class":"ix.core.models.Group",
		"processor":"ix.ginas.processors.GroupProcessor"
	},
	# when a new controlled vocabulary added, it ensures adding a new group
	{
		"class":"ix.ginas.models.v1.ControlledVocabulary",
		"processor":"ix.ginas.processors.CVProcessor"
	},

	# when updating a user profile, this class ensures to update the token
	{
		"class":"ix.core.models.UserProfile",
		"processor":"ix.ncats.processors.UserProfileProcessor"
	}
	//
]

## START AUTHENTICATION

# SSO HTTP proxy authentication settings - right now this is only used by FDA
#ix.authentication.trustheader=true
#ix.authentication.usernameheader="AUTHENTICATION_HEADER_NAME"
#ix.authentication.useremailheader="AUTHENTICATION_HEADER_NAME_EMAIL"

# set this "false" to only allow authenticated users to see the application
ix.authentication.allownonauthenticated=true

# set this "true" to allow any user that authenticates to be registered
# as a user automatically
ix.authentication.autoregister=true

#Set this to "true" to allow autoregistered users to be active as well
ix.authentication.autoregisteractive=false
## END AUTHENTICATION

################
#H2 example
db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:"${ix.home}"/h2/ginas;MVCC=true"
db.default.user=sa
db.default.password=""
#END H2 example
################
