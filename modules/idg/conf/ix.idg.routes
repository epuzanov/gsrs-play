#
# UniProt
#
GET	/uniprot	ix.idg.controllers.UniprotFactory.index
POST	/uniprot	ix.idg.controllers.UniprotFactory.fetch

#
# TCRD 
#
GET     /tcrd   ix.idg.controllers.TcrdRegistry.index
POST    /tcrd   ix.idg.controllers.TcrdRegistry.load

#
# main app
#
GET	/	ix.idg.controllers.IDGApp.home
GET	/about	ix.idg.controllers.IDGApp.about
GET /help   ix.idg.controllers.IDGApp.help
GET	/index	ix.idg.controllers.IDGApp.index
GET	/kinome	ix.idg.controllers.IDGApp.kinome
GET	/targets	ix.idg.controllers.IDGApp.targets(q: String ?= null, rows: Int ?= 10, page: Int ?= 1)
GET	/targets/facets	ix.idg.controllers.IDGApp.targetfacets(ctx: String ?= null)
GET	/targets/:name	ix.idg.controllers.IDGApp.target(name: String)
GET	/diseases	ix.idg.controllers.IDGApp.diseases(q: String ?= null, rows: Int ?= 10, page: Int ?= 1)
GET	/diseases/:name	ix.idg.controllers.IDGApp.disease(name: String)
GET	/ligands	ix.idg.controllers.IDGApp.ligands(q: String ?= null, rows: Int ?= 8, page: Int ?= 1)
GET	/ligands/:name	ix.idg.controllers.IDGApp.ligand(name: String)
GET	/search		ix.idg.controllers.IDGApp.search(kind: String ?= null)
POST	/sequence	ix.idg.controllers.IDGApp.sequence
GET	/tinx		ix.idg.controllers.TINXApp.tinx()
GET	/tinx/target/:acc		ix.idg.controllers.TINXApp.tinxForTarget(acc: String)
GET /hg/data ix.idg.controllers.HarmonogramApp.hgForTarget(q: String ?= null, ctx: String ?= null, format: String ?= null, type: String ?= null)
GET /hg/view ix.idg.controllers.HarmonogramApp.view(q: String ?= null, ctx: String ?= null)
GET /hg/ds ix.idg.controllers.HarmonogramApp.dataSources(field: String ?= null, value: String ?= null)
GET	/hierarchy	ix.idg.controllers.IDGApp.getHierarchy(ctx: String, facet: String)
GET	/kinases	ix.idg.controllers.IDGApp.getKinases(q: String ?= null)
GET	/resolve/:q/$format<(json|txt|csv)>	ix.idg.controllers.IDGApp.resolve(q: String, format: String, kind: String ?= null)
POST	/resolve/$kind<(target|ligand|disease)>.$format<(json|txt|csv)> ix.idg.controllers.IDGApp.resolveBatch(kind: String, format: String)
POST	/batch		ix.idg.controllers.IDGApp.batch
GET	/expression/homunculus ix.idg.controllers.ExpressionApp.homunculus(acc: String ?= null, source: String ?= null)
GET	/targets/:name/tissue  ix.idg.controllers.IDGApp.targetTissue(name: String)
GET	/struc/$id<[a-f0-9\-]+>.$format<(svg|png|mol|sdf|smi|smiles|mrv)>   ix.idg.controllers.IDGApp.structure(id: String, format: String, size: Int ?= 150, context: String ?= null)
POST	/dossier ix.idg.controllers.DossierApp.addEntities
GET	/dossier/count ix.idg.controllers.DossierApp.count
GET	/dossier/view ix.idg.controllers.DossierApp.view(folder: String ?= null)
GET	/dossier/empty	ix.idg.controllers.DossierApp.emptyCart

->	/	ix.marvin.Routes
->	/	ix.core.test.Routes

GET	/warm/targets	ix.idg.controllers.IDGApp.targetWarmCache(secret: String)
GET	/:any	ix.idg.controllers.IDGApp.lastUnicorn(any: String)


